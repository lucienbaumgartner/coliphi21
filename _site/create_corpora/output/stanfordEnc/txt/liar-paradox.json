[{"date.published":"2011-01-20","date.changed":"2016-12-12","url":"https://plato.stanford.edu/entries/liar-paradox/","author1":"Jc Beall","author1.info":"http://entailments.net","author2.info":"http://www.philosophy.northwestern.edu/people/faculty/glanzberg.html","entry":"liar-paradox","body.text":"\n\n\nThe first sentence in this essay is a lie. There is something odd\nabout saying so, as has been known since ancient times. To see why,\nremember that all lies are untrue. Is the first sentence true? If it\nis, then it is a lie, and so it is not true. Conversely, suppose that\nit is not true. We (viz., the authors) have said it, and normally\nthings are said with the intention of being believed. Saying something\nthat way when it is untrue is a lie. But then, given what the sentence\nsays, it is true after all!\n\n\nThat there is some sort of puzzle to be found with sentences like the\nfirst one of this essay has been noted frequently throughout the\nhistory of philosophy. It was discussed in classical times, notably by\nthe Megarians, but it was also mentioned by Aristotle and by Cicero.\nAs one of the insolubilia, it was the subject of extensive\ninvestigation by medieval logicians such as Buridan. More recently,\nwork on this problem has been an integral part of the development of\nmodern mathematical logic, and it has become a subject of extensive\nresearch in its own right. The paradox is sometimes called the\n‘Epimenides paradox’ as the tradition attributes a\nsentence like the first one in this essay to Epimenides of Crete, who\nis reputed to have said that all Cretans are always liars. That some\nCretan has said so winds up in no less a source than New\n Testament![1]\n \n\nLying is a complicated matter, but what’s puzzling about\nsentences like the first one of this essay isn’t essentially\ntied to intentions, social norms, or anything like that. Rather, it\nseems to have something to do with truth, or at least, some semantic\nnotion related to truth. The puzzle is usually named ‘the Liar\nparadox’, though this really names a family of paradoxes that\nare associated with our type of puzzling sentence. The family is aptly\nnamed one of paradoxes, as they seem to lead to incoherent\nconclusions, such as: “everything is true”. Indeed, the\nLiar seems to allow us to reach such conclusions on the basis of\nlogic, plus some very obvious principles that have sometimes been\ncounted as principles of logic. Thus, we have the rather surprising\nsituation of something near or like logic alone leading us to\nincoherence. This is perhaps the most virulent strain of paradox, and\ndealing with it has been an important task in logic for about as long\nas there has been logic.\n\n\nIn this essay, we will review the important members of the family of\nLiar paradoxes, and some of the important ideas about how these\nparadoxes might be resolved. The past few thousand years have yielded\na great number of proposals, and we will not be able to examine all of\nthem; instead, we will focus on a few that have, in recent\ndiscussions, proved to be important.\n\nConsider a sentence named ‘FLiar’, which says of itself\n(i.e., says of FLiar) that it is false. \nThis seems to lead to contradiction as follows. If the sentence\n‘FLiar is false’ is true, then given what it says, FLiar\nis false. But FLiar just is the sentence ‘FLiar is false’,\nso we can conclude that if FLiar is true, then FLiar is false.\nConversely, if FLiar is false, then the sentence ‘FLiar is\nfalse’ is true. Again, FLiar just is the sentence ‘FLiar\nis false’, so we can conclude that if FLiar is false, then FLiar\nis true. We have thus shown that FLiar is false if and only if FLiar\nis true. But, now, if every sentence is true or false, FLiar itself is\neither true or false, in which case—given our reasoning\nabove—it is both true and false. This is a contradiction.\nContradictions, according to many logical theories (e.g., classical\nlogic, intuitionistic logic, and much more) imply\nabsurdity—triviality, that is, that every sentence is true. \nAn obvious response is to deny that every sentence is true or false,\ni.e., to deny the principle of bivalence. As we will discuss in\n §4,\n some descendants of this idea remain important in current work on the\nLiar. Even so, a simple variant Liar sentence shows that this\nimmediate answer is not all there is to the story. \nRather than work with falsehood, we can construct a Liar sentence with\nthe complex predicate ‘not\n true’.[2]\n Consider a sentence named ‘ULiar’ (for\n‘un-true’), which says of itself that it is not true. \nThe argument towards contradiction is similar to the FLiar case. In\nshort: if ULiar is true, then it is not true; and if it is not true,\nthen it is true. But, now, if every sentence is true or not true,\nULiar itself is true or not true, in which case it is both true and\nnot true. This is a contradiction. According to many logical theories,\na contradiction implies absurdity—triviality. \nThe two forms of the Liar paradox we have so far reviewed rely on some\nexplicit self-reference—sentences talking directly about\nthemselves. Such explicit self-reference can be avoided, as is shown\nby our next family of Liar paradoxes. \nConsider a very concise (viz., one-sentence-each) dialog between\nsiblings Max and Agnes. \nWhat Max said is true if and only if what Agnes said is true. But what\nAgnes said (viz., ‘Max’s claim is not true’) is true\nif and only if what Max said is not true. Hence, what Max said is true\nif and only if what Max said is not true. But, now, if what Max said\nis true or not true, then it is both true and not true. And this, as\nin the FLiar and ULiar cases, is a contradiction, implying, according\nto many logical theories, absurdity. \nLiar paradoxes can also be formed using more complex sentence\nstructure, rather than complex modes of reference. One that has been\nimportant involves Boolean compounds. \nBoolean compounds can enter into Liar sentences in many ways. One\nrelatively simple one is as follows. Consider the following sentence\nnamed ‘DLiar’ (for ‘Disjunctive’). \nFirst, observe that if DLiar is not true, then it must be true. If\nDLiar is not true, then by similar reasoning to what we saw above, we\nhave that the left disjunct of DLiar is true. But a disjunction is\ntrue if one of its disjuncts is, so DLiar is true. Thus, if DLiar is\nnot true, it is true and not true, and we have a contradiction. By\nreductio, then, it must be true; so one of its disjuncts must be true.\nIf it’s the first one, we have a contradiction, so it must be\nthe second one; we can conclude that \\(1 = 0\\). We have thus proved\nthat \\(1 = 0\\). Moreover, the sentence ‘\\(1 = 0\\)’ played\nno real role in the above reasoning. We could replace it with any\nother sentence to get a proof of that sentence.  \nWe pause to mention DLiar as it is connected with another important\nparadox: Curry’s paradox, which involves conditionals that say\nof themselves only that if they (the conditional itself) are true, so\ntoo is some absurdity (e.g., ‘if this sentence is true, then \\(1\n= 0\\)’ or ‘if this sentence is true, everything is\ntrue’ or so on). At least in languages where the conditional is\nthe material conditional, and so \\(A \\supset B\\) is equivalent to\n\\(\\neg A \\vee B\\), DLiar is equivalent to the Curry sentence\n‘DLiar is true \\(\\supset 1 = 0\\)’. Though this may set up\nsome relations between the Liar and Curry’s paradox, we pause to\nnote an important difference. For the Curry paradox is most important\nwhere the conditional is more than the material conditional (or some\nmodalized variant of it). In such settings, the Curry paradox does not\nwear negation on its sleeve, as DLiar does. For more information,\nconsult the entry on\n Curry’s paradox. \nThe question of whether the Liar paradox really requires some sort of\ncircularity has been the subject of extensive debate. Liar cycles\n(e.g., the Max–Agnes dialog) show that explicit self-reference\nis not necessary, but it is clear that such cycles themselves involve\ncircular reference. Yablo (1993b) has argued that a more complicated\nkind of multi-sentence paradox produces a Liar without\ncircularity. \nYablo’s paradox relies on an infinite sequence of claims\n\\(A_0\\), \\(A_1\\), \\(A_2\\), …, where each \\(A_i\\) says that all\nof the ‘greater’ \\(A_k\\) (i.e., the \\(A_k\\) such that \\(k\n\\gt i)\\) are untrue. (In other words, each claim says of the rest that\nthey’re all untrue.) Since we have an infinite sequence, this\nversion of the Liar paradox appears to avoid the sort of circularity\napparent in the previous examples; however, contradiction still seems\nto emerge. If \\(A_0\\) is true, then all of the ‘greater’\n\\(A_k\\) are untrue, and a fortiori \\(A_1\\) is untrue. But,\nthen, there is at least one true \\(A_k\\) greater than \\(A_1\\) (i.e.,\nsome \\(A_k\\) such that \\(k \\gt 1)\\), which contradicts \\(A_0\\).\nConversely, if \\(A_0\\) is untrue, then there’s at least one true\n\\(A_k\\) greater than \\(A_0\\). Letting \\(A_m\\) be such a one (i.e., a\ntruth greater than \\(A_0)\\), we have it that \\(A_{m+1}\\) is untrue, in\nwhich case there’s some truth greater than \\(A_{m+1}\\). But this\ncontradicts \\(A_m\\). What we have, then, is that if \\(A_0\\) (the first\nclaim in the infinite sequence) is true or untrue, then it is both.\nAnd this, as in the other cases, is a contradiction. \nWhether Yablo’s paradox really avoids self-reference is\nmuch-debated. See, for instance, Barrio (2012), Beall (2001), Cook\n(2006, 2014), Ojea (2012), Picollo (2012), Priest (1997), Sorensen\n(1998), and Teijeiro (2012). \nWe have already seen a kind of characteristic reasoning that goes with\nthe Liar. We have also seen some common structure across all our\nexample Liar paradoxes, such as the presence of truth predicates, and\nsomething like negation. We pause here to discuss these ingredients of\nthe paradox, focusing on the basic Liars. Just what creates\nthe Liar paradox, and just which of the puzzles we just surveyed is\n‘basic’, is a contentious matter; different approaches to\nsolving the Liar view these matters differently. Hence, our goal is\nmerely to illuminate some common themes across different Liars, not to\noffer a full diagnosis of the source of the paradox. \nWe highlight three aspects of the Liar: the role of truth predicates,\nthe kinds of principles for reasoning about truth that are needed, and\nthe way that a paradox can be derived given these resources. \nThe first ingredient in building a Liar is a truth predicate, which we\nwrite here as \\(\\Tr\\). We follow the usual custom in logic of treating\nthis as a predicate of sentences. However, especially as we come to\nconsider some ways of resolving the Liar, it should be remembered that\nthis treatment can be seen as more for convenience in exposition than\na serious commitment to what truth bearers are. \nWe assume that we have, along with the truth predicate, appropriate\nnames of sentences. For a given sentence \\(A\\), suppose that\n\\(\\left\\ulcorner A\\right\\urcorner\\) is a name for it. A predication of\ntruth to \\(A\\) then looks like \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\). \nWe shall say that a predicate \\(\\Tr(x)\\) is a truth predicate for\nlanguage \\(\\mathcal{L}\\) only if \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) is well-formed for every sentence \\(A\\) of\n\\(\\mathcal{L}\\). We typically expect \\(\\Tr\\) to obey some principles\ngoverning its behavior on sentences of a given language. It is to\nthose we now\n turn.[3] \nThe tradition, going back to Tarski (1935), is that the behavior of\nthe truth predicate \\(\\Tr\\) is described by the following\nbiconditional. \nIndeed, Tarski took the biconditional here to be the material\nbiconditional of classical logic. This is usually called the\nT-schema. For more on the T-schema, and Tarski’s views\nof truth, see the entries on\n Alfred Tarski\n and\n Tarski’s truth definitions. \nThe Liar paradox has been a locus of thinking about non-classical\nlogics (as we already saw a taste of, for instance, in the idea that\nbivalence might be rejected as part of a solution to the Liar). Thus,\nwe should stop to consider what principles should govern the truth\npredicate \\(\\Tr\\) if classical logic is not to hold. \nThe leading idea for what might replace the T-schema points to two\nsorts of ‘rules’ (e.g., two sorts of ‘inference\nrules’ in some sense) or principles that are characteristic of\nthe truth predicate. If you have a sentence \\(A\\), you can infer\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\), that is, you can\n‘capture’ \\(A\\) with the truth predicate. Conversely, if\nyou have \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\), you can infer\n\\(A\\), that is, you can ‘release’ \\(A\\) from the truth\npredicate. In some logics, capture and release wind up being\nequivalent to the T-schema, but it is often helpful to break these\nup: \nImplies here is a logical notion, though just which one, and\nwhat the options are, depends on what background logic is assumed. For\nour discussion, we think of it in so-called rule form: that the\nargument from \\(A\\) to \\(B\\) is valid, which we record (as above) via\nthe turnstile. In some logical settings (e.g., classical logic, in\nwhich a certain so-called deduction theorem holds), this is equivalent\nto the provability of a conditional, but in some settings, it is not.\nEither way, capture and release jointly make \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) logically equivalent in the\nsense of being inter-derivable. In strong forms, capture and release\ncan lead to the full intersubstitutability of \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) in extensional contexts. As\nwe discuss more in\n section 4.1,\n this is important to some views of the nature of truth. Thus,\n\\(\\vdash\\) is being used here as a schematic placeholder for a range\nof different logical notions, each of which will provide some notion\nof valid inference in some logical theory. \n(There are a number of logical subtleties here that we will not\npursue, especially about how to formulate rules, and which rules are\nconsistent. Different formulations of rules vary significantly in\nlogical strength as\n well.[4]\n See the entry on\n axiomatic theories of truth\n for more on how consistent forms of capture and release can be\nformulated in classical logic. In the terminology of Friedman and\nSheard (1987), the rule forms of capture and release are called\n‘T-Intro’ and ‘T-Elim’, and the conditional\nforms ‘T-In’ and ‘T-Out’. We prefer the\nbroader terminology, since it highlights a general form of behavior\ncommon to a great variety of predicates and operators, e.g.,\nknowledge releases but doesn’t capture;\npossibility captures but doesn’t release; and so on;\nand truth is special in doing both.) \nThe Liar paradox begins with a language containing a truth predicate,\nwhich obeys some form of capture and release. We now explore more\ncarefully how a paradox results from these assumptions. \nPutting aside Yablo-type paradoxes, the Liar relies on some form of\nself-reference, either direct, as in in the simple Liars above, or\nindirect, as in Liar cycles. Most natural languages have little\ntrouble generating self-reference. The first sentence of this essay is\none example. Self-reference can be accidental, as in the case where\nsomeone writes ‘The only sentence on the blackboard in room 101\nis not true’, by chance writing this in room 101 itself (as C.\nParsons (1974) noted). \nIn formal languages, self-reference is also very easy to come by. Any\nlanguage capable of expressing some basic syntax can generate\nself-referential sentences via so-called diagonalization (or more\nproperly, any language together with an appropriate theory of syntax\nor\n arithmetic).[5]\n A language containing a truth predicate and this basic syntax will\nthus have a sentence \\(L\\) such that \\(L\\) implies \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) and vice versa: \nThis is a ‘fixed point’ of (the compound predicate)\n\\(\\neg\\Tr\\), and is, in effect, our simple-untruth Liar. \n(Technically, it is simplest to put the fixed point property in terms\nof implications, as we have done here. But intuitively, the idea is\nthat somehow \\(L\\) ‘just is’ \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). This can be made more precise, if we think of\nthe Liar sentence \\(L\\) arising from a name \\(c\\) that\ndenotes the sentence \\(\\neg \\Tr(c)\\). In this way, we can think of the\nexistence of the Liar as being reflected in the identity \\(c =\n\\left\\ulcorner \\neg \\Tr(c)\\right\\urcorner\\). For more on the details\nof this approach, see Heck 2012.) \nOther conspicuous ingredients in common Liar paradoxes concern logical\nbehavior of basic connectives or features of implication. A few of the\nrelevant principles are: \n(This is not to suggest that these are the only logical\nfeatures involved in common Liar paradoxes, but they’re arguably\nthe most important of the salient ones.) \nGiven the foregoing ingredients, we can now give a slightly more\nabstract form of the paradox. (Our hope is to use this abstract form\nto highlight different responses to the paradox.) We suppose that we\nhave a language \\(\\mathcal{L}\\) with a truth predicate \\(\\Tr\\), and\nthat \\(\\mathcal{L}\\) allows enough syntax to construct a sentence\n\\(L\\) such that \\(L \\dashv \\vdash \\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). We also suppose that the logic of \\(\\mathcal{L}\\)\nenjoys LEM and EFQ and satisfies DP and adjunction. \nAn argument that our Liar sentence \\(L\\) implies a contradiction runs\nas follows. \nThis version of the Liar is one of many. With a little more\ncomplexity, for instance, either capture or release can be avoided in\nfavor of some other background assumptions. Intuitionistic variants of\nthe Liar are also available, though we shall not explore\nintuitionistic logic\n here.[8] \nWe have so far shown that with the given ingredients our Liar sentence\n\\(L\\) implies a contradiction (thus formalizing the reasoning in\nULiar). From here, it is one short step to all-out absurdity—if\nthe lone contradiction weren’t already absurd enough. We invoke\nEFQ to finish the proof. (Well, we also assume that \\(A \\wedge B\\)\nimplies \\(A\\) and \\(B\\), i.e., that simplification is valid in\n\\(\\mathcal{L}\\); but in fact this assumption is not really\nnecessary.) \n\\(B\\), here, may be any—every—sentence that you like (or\ndon’t like, as the case may be)! EFQ is the principle that every\nsentence follows from a contradiction; it sanctions the step from a\nsingle contradiction to outright triviality of logic. \nIn the face of such absurdity (triviality), we conclude that something\nis wrong in the foregoing Liar reasoning. The question is: what? This,\nin the end, is the question that the Liar paradox raises.  \nWe have now seen that with some elementary assumptions about truth and\nlogic, a logical disaster ensues. What is the wider significance of\nsuch a result? \nFrom time to time, the Liar has been argued to show us something\nfar-reaching about philosophy. For instance, Grim (1991) has argued\nthat it shows the world to be essentially ‘incomplete’ in\nsome sense, and that there can be no omniscient being. McGee (1991)\nand others suggest that the Liar shows the notion of truth to be a\nvague notion. Glanzberg (2001) holds that the Liar shows us something\nimportant about the nature of context dependence in language, while\nEklund (2002) holds that it shows us something important about the\nnature of semantic competence and the languages we speak. Gupta and\nBelnap (1993) claim that it reveals important properties of the\ngeneral notion of definition. And there are other lessons, and\nvariations on such lessons, that have been drawn. \nOf more immediate concern, at least for our purposes here, is what the\nLiar shows us about the basic principles governing truth, and about\nlogic. In a skeptical vein, Tarski himself (1935, 1944) seems to have\nthought the Liar shows the ordinary notion of truth to be incoherent,\nand in need of replacement with a more scientifically respectable one.\n(For more on Tarski, see the entries on\n Tarski\n and\n Tarski’s truth definitions.\n For more on Tarski’s aims and purposes, see Heck 1997.) More\ncommon, and perhaps the dominant thread in the solutions to the Liar,\nis the idea that the basic principles governing truth are more subtle\nthan the T-schema reflects. \nThe Liar has also formed the core of arguments against classical\nlogic, as it is some key features of classical logic that allow\ncapture and release to result in absurdity. Notable among these are\nthe arguments for logics that are paracomplete (e.g., Kripke 1975;\nField 2008) and paraconsistent (e.g., Asenjo 1966; Priest 1984, 2006).\nHowever, Ripley (2013b) argues that classical logic can be maintained\nwhile shedding the features in question. \nIn many cases inspired by wider views of the significance of the\nparadox, there have been a number of attempts to one way or another\nresolve the paradox. It is to these proposed solutions that we now\nturn. \nIn this section, we briefly survey some approaches to resolving the\nLiar paradox. We group proposed solutions into families, and try to\nexplain the basic ideas behind them. In many cases, a full exposition\nwould involve a great deal of technical material, that we will not go\ninto here. Interested readers are encouraged to follow the references\nwe provide for each basic idea. \nOne of the leading ideas for how to resolve the Liar paradox is that\nit shows us something about logic, in fact, something far-reaching\nabout logic. The main idea is that the principles of capture and\nrelease are the fundamental conceptual principles governing truth, and\ncannot be modified. Instead, basic logic must be non-classical, to\navoid a logical disaster of the kind we reviewed in\n §2. \nOne important way to motivate non-classical solutions is to appeal to\na form of deflationism about truth. Such views take something\nakin to the T-schema to be the defining characteristic of truth, and\nas such, not open to modification (see, e.g., Horwich 1990). Most\nstrictly, so-called transparency or ‘see-through’ or\n‘pure disquotational’ conceptions of truth (e.g., Field\n1994, 2008; Beall 2005) take the defining property of truth to\nbe intersubstitutability of \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) in all non-opaque contexts. This makes capture and\nrelease, in unrestricted form applying to all sentences of a language,\na requirement for truth (at least where we have \\(A \\vdash A\\) or,\nmore strongly, \\(\\vdash A \\rightarrow\n A)\\).[9]\n See the entry on\n truth\n for further discussion. \nHolding capture and release fixed, and applying it to all sentences\nwithout restriction, yields triviality unless the logic is\nnon-classical. There are two main sub-families of non-classical\n(transparency) truth theories: paracomplete and\nparaconsistent. We sketch the main ideas of each. \nAccording to paracomplete approaches to the Liar, the main lesson of\nthe Liar is that LEM ‘fails’ in some sense. In other\nwords: the Liar teaches us that some sentences (notably, Liars!)\n‘neither hold nor do not hold’ (in some sense), and so are\nneither true nor false. As a result, the logic of truth is\nnon-classical. \nThis idea is perhaps most natural in response to the simple-falsity\nLiar. There, it is tempting to say that there is some status other\nthan truth and falsity, and the Liar sentence \\(L\\) has it. But this\nwill not suffice, for instance, for the simple-untruth Liar. This says\nnothing about falsity. Rather, in some way the basic reasoning\nreviewed in\n §2.3\n must fail, and the culprit, in the paracomplete view, is LEM.\nLiar-instances of LEM ‘fail’ (in some sense) according to\nthe paracomplete approach; such sentences fall into the\n‘gap’ between truth and falsity (to use a common\nmetaphor). \nThere have been many proposals for using such non-classical logics to\naddress the Liar. An early example is van Fraassen (1968, 1970). But\nKripke’s work has been the most influential in recent times, not\nonly to approaches to the Liar based on non-classical logic, but a\nrange of other approaches we will survey in\n §4.2\n as well. Thus, we pause to describe at least a little of\nKripke’s framework. \nLogics where LEM fails are not themselves hard to come by. Among many\nsuch logics are a number of three-valued logics that allow sentences\nto take a third value over and above true and false. Sentences like\nLiar sentences take the third value. One of the most commonly applied\nlogics is the Strong Kleene logic \\(K_3\\). We do not go into the\ndetails of \\(K_3\\) here, but only note the properties of \\(K_3\\) we\nneed. (For more details, see the entry on\n many-valued logic,\n or Priest 2008.) First and foremost,\nwe have: \n\n\\[\\not\\vdash_{K3} A \\vee \\neg A.\\]\n\n LEM fails. In fact, there are no logical truths\n(or valid sentences) according to \\(K_3\\). (We return to this on the\ntopic of a ‘suitable conditional’ below.) \nThe challenge to using \\(K_3\\) to flesh out a paracomplete theory is\nto explain how anything like (even rule-form) capture and release\nhold, and if you follow the deflationist line, how full unrestricted\ncapture and release hold. One way of understanding the important work\nof Kripke (1975) (and related work of Martin and Woodruff 1975) is as\na way of achieving just that. \nKripke begins with a fully classical language \\(\\mathcal{L}_0\\)\ncontaining no truth predicate (or more generally, no semantic terms).\n(Recall, we are assuming a language comes equipped with a valuation\nscheme. For \\(\\mathcal{L}_0\\) it is classical.) He then considers\nextending it to a language \\(\\mathcal{L}^{+}_0\\) which contains a\ntruth predicate \\(\\Tr\\). The predicate \\(\\Tr\\) is taken to apply to\nevery sentence of the expanded language \\(\\mathcal{L}^{+}_0\\),\nincluding those of the original \\(\\mathcal{L}_0\\). Thus, it is a\nself-applicative truth predicate (as the deflationist-inspired picture\nwe mentioned must require), even though we begin with a language\nwithout a truth predicate. \nWe can think of \\(\\mathcal{L}_0\\) as interpreted by a classical model\n\\(\\mathcal{M}_0\\). Kripke shows us how to build an interpretation\n\\(\\mathcal{M}^{+}_0\\) for the expanded language. The main innovation\nis to see the truth predicate as partial. Rather than simply\nhaving an extension, it has an extension (set of things of which it is\ntrue), and an anti-extension (set of things of which it is false). The\nextension and anti-extension are mutually exclusive, but they need not\njointly exhaust the domain of \\(\\mathcal{M}_0\\). Pathological\nsentences like \\(L\\) fall in neither in the extension or the\nanti-extension of \\(\\Tr\\). (Actually, we could have interpreted the\nbase language \\(\\mathcal{L}_0\\) by a partial model as well, but the\nintended application sees partiality as only arising with semantic\npredicates like \\(\\Tr\\).) \nFalling into neither the extension or the anti-extension of \\(\\Tr\\)\nacts like having a third value, and we can interpret\n\\(\\mathcal{L}^{+}_0\\) as acting like a language with a \\(K_3\\)\nvaluation scheme. Treating the language this way, Kripke shows how to\nbuild up a very plausible extension and anti-extension for \\(\\Tr\\),\ntypically written \\(\\mathcal{E}\\) and \\(\\mathcal{A}\\). The important\nproperty of the new extended model \\(\\langle \\mathcal{M}_0,\\langle\n\\mathcal{E},\\mathcal{A}\\rangle \\rangle\\) is that the truth value of\nany sentence \\(A\\) and \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) are\nexactly the same. \\(A\\) is true, false, or neither, just in case\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) is. Furthermore, interpreting\nthe expanded language \\(\\mathcal{L}^{+}_0\\) as a \\(K_3\\) language, we\nhave for \\(K_3\\) consequence \\(A \\dashv \\vdash \\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\), just as we desired. \nKripke shows how to build up \\(\\mathcal{E}\\) and \\(\\mathcal{A}\\) by an\ninductive process. One starts with an ‘approximation’ of\nthe extension and anti-extension of \\(\\Tr\\), and successively improves\nit until the improvement process ceases to be productive (it reaches a\n‘fixed point’). In fact, for the \\(K_3\\)-based solution,\nthe natural thing to do is start with an empty extension and\nanti-extension, and throw in sentences that are true at successive\nstages of the process. \nKripke’s construction can be applied to a number of different\nlogics, including other many-valued logics such as the ‘Weak\nKleene’ logic, and supervaluation logics. See, for instance,\nBurgess 1986 and McGee 1991 for discussion. Kripke-style constructions\nengage a fair bit of mathematical subtlety. For an accessible overview\nof more of the details, see Soames 1999. For a more mathematically\nrich exposition, see McGee 1991. \nLogics like \\(K_3\\) suffer from the lack of a natural or\n‘suitable’ conditional (in particular, one that satisfies\n\\(A,A \\rightarrow B \\vdash B\\) and \\(\\vdash A \\rightarrow A)\\). This\nreveals a limitation of the Kripkean approach to the Liar. The\nlanguage \\(\\mathcal{L}^{+}_0\\) cannot report the capture and release\nproperties of truth itself in conditional form (i.e.,\nT-biconditionals): \\(\\Tr\\) is transparent on this picture, and so\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) and \\(A\\) are fully\nintersubstitutable. We don’t have \\(\\neg A \\vee A\\) true for all\nsentences \\(A\\) in this theory, and hence don’t have \\(\\neg\n\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee\\) A for all \\(A\\). But\n\\(\\neg \\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee A\\) is equivalent to\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner) \\rightarrow A\\) in the theory,\nsince (in the theory) \\(\\rightarrow\\) is just the material\nconditional. The Kripke construction at hand, then, thus fails to\nenjoy all T-biconditionals—the natural candidates for expressing\nin the theory the basic capture and release features of truth. \nA recent, major step towards supplementing Kripke’s framework\nwith a suitable conditional is that of Field (2008). Field’s\ntheory is a major advance, but complex enough to be beyond the scope\nof this (very basic) introduction. Readers should consult\nField’s own discussion for a taste of how such a modification\nmight proceed. See Field (2008), and further discussion in Beall\n(2009). \nOne important use for conditionals in logic is in formalizing\nrestricted universal quantification, expressing the\nconnection between \\(A\\) and \\(B\\) in ‘All \\(A\\)s are\n\\(B\\)s’. This has recently played a key role in a number of\ndiscussions of conditionals and paradoxes; see for example Beall et\nal. (2006); Beall (2011); Field (2014); and Ripley (2015). \nAs we mentioned, two important approaches to the Liar paradox that\nfocus on non-classical logics are paracomplete and paraconsistent\napproaches. We sketched a paracomplete option above. We now turn to a\nparaconsistent option. Here, the basic idea is to allow the\ncontradiction (e.g., up to and including step 4 of the derivation in\n §2.3.3),\n but alter the logic by rejecting EFQ—and, hence, avoid the\nabsurdity involved in step 5. \nLike the paracomplete approach we just surveyed, paraconsistent\napproaches to the Liar find easy, natural motivation in transparency\nor otherwise suitably ‘minimalist’ views of truth that\nrequire full intersubstitutability of \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\), and thus cannot restrict capture and release. But\nparaconsistent approaches have also found motivation in a\nDummett-inspired anti-deflationist view, which takes the role of truth\nas the aim of assertion seriously (cf. Dummett 1959). Indeed, Priest\n(2006) argues that this (non-transparency) view of truth motivates\nboth the T-schema and LEM, and that this implies that the Liar\nsentence \\(L\\) is both true and not true. Hence, according to any such\ndialetheic line (according to which at least one sentence is both true\nand not true), the only option is to reject EFQ. \nPriest (1984, 2006) has been one of the leading voices in advocating a\nparaconsistent approach to solving the Liar paradox. He has proposed a\nparaconsistent (and non-paracomplete) logic now known as LP\n(for Logic of Paradox), which retains LEM, but not\n EFQ.[10]\n It has the distinctive feature of allowing true contradictions. This\nis what Priest calls the dialetheic approach to truth. (See the entry\non\n dialetheism\n for a more extensive discussion.) \nFormally, LP can be seen as a three-valued logic; but where\n\\(K_3\\) has truth-value gaps, LP has truth-value\ngluts. Thus, sentences in LP can be both true and\nfalse. However, as we discuss further in\n section 4.1.3,\n just how to describe both gaps and gluts is a delicate matter. For\nnow, we only make the rough observation that in the same sense that\n\\(K_3\\), in virtue of having a third truth value, can be said to have\ngaps, LP correspondingly has gluts. \nLikewise, Kripke-style techniques can be applied to produce an\ninterpretation for a truth predicate, starting with a classical\nlanguage \\(\\mathcal{L}_0\\) not containing a truth predicate. Again, an\nextension and anti-extension are assigned to \\(\\Tr\\). Whereas\nKripke’s original construction had the extension and\nanti-extension disjoint but not exhausting the domain, in this case we\nallow the extension and anti-extension to overlap, but suppose that\nthe two together exhaust the domain of the model. This implements the\nidea of gluts, as the earlier version implemented the idea of gaps.\nRelated techniques to Kripke’s can then be used to build an\nextension and anti-extension for \\(\\Tr\\). The result is again an\ninterpretation where \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) get the same truth value in the model. \nThis construction was not given by Kripke himself, but variants have\nbeen pursued by a number of authors, including Dowden (1984), Leitgeb\n(1999), Priest (1984, 2006), Visser (1984), and Woodruff (1984). \nThough we have identified paracomplete and paraconsistent approaches\nto the Liar as two distinct options, they are not incompatible.\nIndeed, seen as theories of negation (if one wants), one might think\nthat negation is neither exhaustive nor ‘explosive’\n– i.e., satisfies neither LEM nor EFQ. An approach like this is\nthe FDE-based (transparent) truth theory discussed in Dunn\n1969 (see\n Other Internet Resources);\n Gupta and Belnap 1993; Leitgeb 1999; Visser 1984; Woodruff 1984;\nYablo 1993a; and—in effect—Brady 1989. \n(The LP-based theories and \\(K_3\\)-based theories\nare—at least on one (standard-first-order) level—simply\nstrengthened logics of the broader FDE logic. For general\ndiscussion of such frameworks, see, e.g. Priest 2008.) \nWorking in classical logic, Tarski (1935) famously concluded from the\nLiar paradox that a language cannot define its own truth predicate.\nMore generally, he took the lesson of the Liar to be that languages\ncannot express the full range of semantic concepts that describe their\nown workings. One of the main goals of the non-classical approaches to\nthe Liar we have surveyed here is to avoid this conclusion, which many\nhave seen as far too drastic. However, how successful these approaches\nhave been in this regard remains a highly contentious issue. \nIn one sense, both the paracomplete and paraconsistent approaches\nachieve the desired result: they present languages which contain truth\npredicates which apply to sentences of that very language, and have\nthe feature that \\(A\\) and \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\)\nhave the same truth value. In this respect, they both present\nlanguages which contain their own truth predicate. \nIn the paracomplete case, the issue of whether this suffices has been\nmuch debated. The paracomplete view holds that the Liar sentence \\(L\\)\nis neither true nor false, and this is key to retaining consistency.\nBut note, the paracomplete approach we discussed above cannot state\nthis fact, as it cannot come out true that \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). If this were true, then \\(L\\) would be true, and\nthen \\(\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) would be true, bringing\nus back to contradiction. \nOne further point follows from this. As we alluded to above, this\nshows that \\(K_3\\) with a truth predicate will not state the gappy\nstatus of gaps, while LP will state both gap and glut\nproperties. Hence, as we mentioned, the status of gaps and gluts can\nbe complicated.  \nFor the issue of revenge, the key problem is simply that the\nparacomplete approach cannot accurately state its own solution to the\nLiar. Just what to make of this has been debated. It is certainly the\ncase that the set of true sentences in the kind of model Kripke\nconstructs does not include \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). Because of this, some authors, such as McGee\n(1991), T. Parsons (1984), and Soames (1999) have in effect maintained\nthat the Liar sentence failing to be true is a further fact that is\ngoes beyond what the truth predicate needs to express, and so is\nimmaterial to the success of the solution to the Liar. (Actually,\nMcGee’s view has another aspect, which we discuss in\n §4.2.3.) \nBut nonetheless, it does appear that there is an important semantic\nfact about truth in the paracomplete language, closely related to if\nnot identical to a fact about truth per se, which the\nlanguage cannot express. It thus has been argued to fail to achieve a\nfully adequate theory of truth. Kripke himself notes that there are\nsome semantic concepts that cannot be expressed, and the argument has\nbeen pressed by C. Parsons (1974). \nOne way of spelling out what is missing in the paracomplete language\nis to introduce a new notion of determinateness, so that the\nstatus of the Liar is that of not being determinately true. If so,\nthen the Kripke paracomplete language cannot express this concept of\ndeterminateness. Some approaches taking paracomplete ideas on board\nhave sought to supplement the Kripke approach by adding notions of\ndeterminate truth. McGee (1991) does so in a basically classical\nsetting. In a non-classical, paracomplete setting, Field (2008)\nsupplements the basic paracomplete approach with infinitely many\ndifferent ‘determinately’ operators, each defined in terms\nof Field’s ‘suitable conditional’, and each giving a\ndifferent (stronger) notion of ‘truth’. (See also some of\nthe papers in Beall (ed.) 2008.) \nIt is often argued in favor of paraconsistent approaches that they\nhave no trouble ‘characterizing’ the status of Liars:\nthey’re true and false (i.e., true and have true negation).\nLP theories can state this. On the other hand, some such as\nLittmann and Simmons (2004) and S. Shapiro (2004), have thought that\nthere is a dual problem: namely, characterizing ‘normal’\nsentences that are not both true and false. (Some put this alleged\nproblem as the problem of characterizing being just true.)\nWhether this is a problem is something we leave open. (For some\ndiscussion, see Field 2008 and Priest 2006.) \nOne other issue that arises here is that of so-called ‘revenge\nparadoxes’. We can illustrate this with the simple-falsity Liar.\nSuppose one starts with this as the bench-mark Liar paradox, and\nproposes a simple solution that rejects bivalence. In response one is\nshown the simple-untruth Liar, which undercuts the simple solution.\nThis is the pattern of ‘revenge’, where a solution to the\nparadox is rejected on the basis of what might be taken to be a\nslightly modified form of the paradox. Revenge paradoxes for\nparacomplete solutions are often proposed: many points where the\nparacomplete language fails to express some semantic concept offer\nways to construct a revenge problems. Failing to correctly state the\nstatus of the simple-untruth Liar is one example. Another example\ninvolves the notion of determinateness. If we take the determinateness\nroute, and assign the Liar sentence the status of not being\ndeterminately true, then one can construct a revenge problem via a\nsentence which says of itself that it is not determinately true. \nIn a similar vein, it is sometimes argued that paraconsistent\napproaches face a kind of revenge problem, as they have to treat the\nCurry paradox we discussed in\n section 1.4\n separately from the Liar. This is a somewhat difficult technical\nissue, as it depends on the nature of the conditional used to\nformulate the Curry sentence. If that conditional obeys the detachment\nproperty, then it cannot be a glut, as the Liar is in paraconsistent\nsettings. But, whether that is the correct approach to the conditional\nhas been controversial. For more discussion, see Beall (2014, 2015).\n \nWe have seen at least some approaches (e.g., McGee 1991; in some\nrespects, T. Parsons 1984 and Soames 1999) reject the revenge problem,\nwhile some seek to solve it by additional apparatus (e.g., Field\n2008). As we discuss further in\n §4.3,\n contextualist views such as those of Burge (1979), Glanzberg (2004a), and C. Parsons (1974) tend to see revenge not as a separate\nproblem, but as the core Liar phenomenon. For more discussion about\nrevenge and its nature, see the papers in Beall (ed.) (2008) and L.\nShapiro (2006). \nThere is another way to see the paradox as arising from mistaken\nassumptions built into standard logics. This way doesn’t see the\ntrouble as attaching to any particular connective or piece of\nvocabulary, but instead as attaching to some of the structural\nrules that govern the consequence relation in question. These\napproaches, based on so-called substructural logics, fall\ninto three main camps: the noncontractive, the nontransitive, and the\nnonreflexive. (There is a great deal more diversity among\nsubstructural logics than this suggests; in particular, many do not\nfall into any of these camps, or fall into more than one. But these\nare the three that seem to be best-suited for addressing the paradoxes\nwe are concerned with here.) \nThe best-developed substructural approach to paradoxes works by\nattacking the structural rule of contraction. Contraction is\nthe principle that tells us that whenever \\(\\Gamma , A, A \\vdash B\\),\nthen \\(\\Gamma , A \\vdash B\\); that is, it is the principle that tells\nus that we can use premises repeatedly while only counting them once.\nReturning to the argument given in\n section 2,\n we can see that in two cases, an assumption is used twice in reaching\na conclusion: assumption 2a is used twice on the way to 2d, and\nassumption 3a is used twice on the way to 3d. As we presented the\nargument, we did not call attention to this feature, but it is one\nplace a noncontractive approach will focus. \nThe details of the response will depend on how the connectives we have\nwritten as ‘\\(\\vee\\)’ and ‘\\(\\wedge\\)’ are\ninterpreted; in the absence of contraction, each of conjunction and\ndisjunction comes in ‘additive’ and\n‘multiplicative’ flavours, and different proponents of\nnoncontractive views differ in which of these they acknowledge. The\ndifference between additive and multiplicative conjunction is this: an\nadditive conjunction can do the work that either of its\nconjuncts can do, while a multiplicative conjunction can do the work\nthat both of its conjuncts can do together. In the presence\nof contraction, the additive conjunction suffices for the\nmultiplicative: it can be used once to fill the role of the first\nconjunct and again to fill the role of the second conjunct.\nContraction allows these two uses to count as one. Without\ncontraction, though, the additive conjunction need not suffice for the\nmultiplicative. (The multiplicative conjunction suffices for the\nadditive in the presence of a structural rule called weakening, not\notherwise discussed in this article.) The situation for disjunction is\ndual: in the presence of contraction, the additive disjunction\nsuffices for the multiplicative, but it need not otherwise.  \nThe double use pointed to above will loom largest if these connectives\nare read multiplicatively: if 2d really is to do the work of \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) and \\(\\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\) together, then it really does use two\ncopies of 2a, one for each conjunct. On an additive reading of 2d and\n3d, this seeming double use need not be troubling, since 2d itself\nonly needs to do the work of one of its conjuncts. Although this can\nbe either one, whichever conjunct it is, a single use of 2a will\nsuffice. On this additive reading, it is the principles LEM and EFQ\nthat come into question; for example, with \\(\\wedge\\) read additively\nit takes two occurrences of the same contradiction to entail\nan arbitrary sentence (since both conjuncts must be used), while the\nderivation above only yields one. (The situation for 3d and 3a is\nsimilar, in either case.) We do not here consider further details; for\nmore on these choices and noncontractive approaches in general, see\nBeall and Murzi (2013), Grishin (1982), Petersen (2000), Restall\n(1994), Ripley (2015), L. Shapiro (2011a, 2015), and Zardini (2011,\n2013). (Some of these focus on set-theoretic paradoxes rather than\ntruth-theoretic paradoxes, but many of the issues are parallel. See\nalso the entry on\n Russell’s paradox.) \nAnother kind of substructural approach works by attacking various\nstructural rules associated with transitivity of consequence.\nThe best-known of these rules is the rule of cut, which\nallows us to move from \\(\\Gamma \\vdash B\\) and \\(\\Delta , B \\vdash C\\)\nto \\(\\Delta , \\Gamma \\vdash C\\). But it can also be worth considering\nother transitivity-related properties, such as the one called\nsimple transitivity in Weir 2015, proceeding from \\(A \\vdash\nB\\) and \\(B \\vdash C\\) to \\(A \\vdash C\\). (That is, simple\ntransitivity is the special case of cut where \\(\\Delta\\) is empty and\n\\(\\Gamma\\) is a singleton.) \nSome nontransitive approaches can be understood through the same\nthree-valued models as are used for K\\(_3\\) and LP (again, we refer\nyou to the entry on\n many-valued logic\n for details). The difference is in how consequence is defined on\nthese models. In all cases, consequence amounts to the absence of a\ncountermodel, but there are different understandings available of what\na model has to be like to be a countermodel to an argument. Depending\non what understanding of countermodel is adopted, the very same\nthree-valued models can give rise to the paracomplete logic K\\(_3\\),\nthe paraconsistent logic LP, a paracomplete and paraconsistent logic\nsometimes called S\\(_3\\) or FDRM, or—our present topic—two\ndifferent logics that include counterexamples to the rule of cut, and\nhave come to be known as nontransitive.  \nOne kind of approach without cut is developed and defended in Weir\n2005, 2015 (and for naive set theory in Weir 1998, 1999), and is there\ndubbed ‘neoclassical’. On this approach, the third value\nin the models is taken to be neither true nor false, and a\ncountermodel to an argument from \\(\\Gamma\\) to \\(B\\) must either: make\nevery sentence in \\(\\Gamma\\) true and \\(B\\) untrue, or else make \\(B\\)\nfalse and every sentence but one in \\(\\Gamma\\) true, while\nmaking that remaining sentence in \\(\\Gamma\\) unfalse. The motivating\nidea is that valid arguments must preserve truth, and must also\npreserve falsity backwards in a certain sense: if a valid argument has\nall its premises but one true and its conclusion false, then the\nremaining premise must be false. This allows for counterexamples to\ncut, but not to simple transitivity, and allows for consistency to be\nmaintained. The resulting logic is weaker than classical logic. In our\nversion of the liar paradox, the trouble is at LEM: Weir’s\napproach allows for counterexamples to excluded middle. \nA different kind of approach without cut is developed and explored in\nBarrio et al. 2015; Cobreros et al. 2013, 2015; Fjellstad 2016; and\nRipley 2013a, 2015. On this approach, a countermodel to an argument\ncannot assign the third value to any sentence that occurs in the\nargument. That is, a countermodel to an argument from \\(\\Gamma\\) to\n\\(B\\) must do just what a classical countermodel does with regards to\nthe argument. If it assigns the third value to any sentence at all,\nthat sentence cannot be in \\(\\Gamma\\) and it cannot be \\(B\\). This\nallows for counterexamples to cut, and unlike Weir’s approach,\nit also allows for counterexamples to simple transitivity. It also has\nthe curious feature that every argument valid in classical logic\nremains valid. That is, all the counterexamples to cut and simple\ntransitivity involve appeal to capture, release, or some other special\nbehaviour of the truth predicate. Despite this classical flavour,\nthese approaches are also dialetheist; the claim that the liar\nsentence is both true and not true turns out to be a theorem. Such a\nclaim is forced to take the third value, and so there can be no\ncountermodel to any argument involving it. \nPerhaps because of the importance of the rule of cut in proof theory,\nnontransitive approaches are often studied via proof systems rather\nthan via models. The essential use of transitivity properties in\nparadoxical derivations was noted in Tennant 1982; an approach to\nparadoxes that rejects both cut and simple transitivity in a general\nsetting can be found in Hallnäs 1991; Hallnäs and\nSchroeder-Heister 1991; and Schroeder-Heister 2004. There are helpful\nphilosophical remarks on cut in Schroeder-Heister 1992, which also\nnotes some relations between noncontractive and nontransitive\napproaches. A third possibility for a substructural approach to\nparadoxes comes from attacking reflexivity, the principle\nthat every sentence entails itself. There is a close analogy between\nreflexivity and transitivity, as explained in Frankowski 2004; Girard\net al. 1989 (p.28); and Ripley 2012, so this kind of approach ends up\nhaving commonalities with the nontransitive family. Nonreflexive\napproaches to paradoxes have so far been less-explored, but seem to be\na promising direction for further work; see French (2016) and Meadows\n(2014) for more. See also Malinowski (1990) for general work on\nnonreflexive logics. \nWe have now seen a range of options for responding to the Liar paradox\nby reconsidering basic logic. There are also a number of approaches\nthat leave classical logic unchanged, and try to find other ways of\ndefusing the paradox. \nOne hallmark of most of these approaches is a willingness to somehow\nrestrict the range of application of capture and release, to\nblock the paradoxical reasoning. This is antithetical to the kind of\ndeflationist view of truth we discussed in\n §4.1,\n but it is consistent with another view of truth. This other view\ntakes the main feature of truth to be that it reports a non-trivial\nsemantic property of sentences (e.g., corresponding with a fact in the\nworld, or having a value in a model). Many approaches within classical\nlogic embody the idea that a proper understanding of this feature\nallows for restricted forms of capture and release, and this in turn\nallows the paradox to be blocked, without any departure from classical\nlogic. \nWe will consider a number of important approaches to the paradox\nwithin classical logic, most of which embody this idea in some form or\nanother. \nTraditionally, the main avenue for resolving the paradox within\nclassical logic is Tarski’s hierarchy of languages and\nmetalanguages. Tarski concluded from the paradox that no language\ncould contain its own truth predicate (in his terminology, no language\ncan be ‘semantically closed’). \nInstead, Tarski proposed that the truth predicate for a language is to\nbe found only in an expanded metalanguage. For instance, one starts\nwith an interpreted language \\(\\mathcal{L}_0\\) that contains no truth\npredicate. One then ‘steps up’ to an expanded language\n\\(\\mathcal{L}_1\\), which contains a truth predicate, but one that only\napplies to sentences of \\(\\mathcal{L}_0\\). With this restriction, it\nis easy enough to define a truth predicate which completely accurately\nstates the truth values of every sentence in \\(\\mathcal{L}_0\\), obeys\ncapture and release, and yields no paradox. Of course, this process\ndoes not stop. If we want to describe truth in \\(\\mathcal{L}_1\\), we\nneed to step up to \\(\\mathcal{L}_2\\) to get a truth predicate for\n\\(\\mathcal{L}_1\\). And so on. The process goes on indefinitely. At\neach stage, a new classical interpreted language is produced, which\nexpresses truth for languages below it. (For more on the mathematics\nof this sort of hierarchy of languages, see Halbach (1997).) \nWhy is there no Liar paradox in this sort of hierarchy of languages?\nBecause the restriction that no truth predicate can apply to sentences\nof its own language is enforced as a syntactic one. Any sentence \\(L\\)\nequivalent to \\(\\neg \\Tr(\\left\\ulcorner L\\right\\urcorner)\\) is not\nsyntactically well-formed. There is no Liar paradox because there is\nno Liar sentence. See the entries on\n Tarski\n and\n Tarski’s truth definitions\n for more on Tarski’s views of truth. \nTarski’s hierarchical approach has been subject to a number of\ncriticisms. One is that in light of naturally occurring cases of\nself-reference, his ruling Liar sentences syntactically not\nwell-formed seems overly drastic. Though Tarski himself was more\nconcerned to resolve the Liar for formal languages, his solution seems\nimplausible as applied to many naturally occurring uses of\n‘true’. Another important problem was highlighted by\nKripke (1975). As Kripke notes, any syntactically fixed set of levels\nwill make it extremely hard, if not impossible, to place various\nnon-paradoxical claims within the hierarchy. For instance, if Jc says\nthat everything Michael says is true, the claim has to be\nmade from a level of the hierarchy higher than everything Michael\nsays. But if among the things Michael says is that everything Jc\nsays is true, Michael’s claims must be at a higher level\nthan all of Jc’s claims. Thus, some of Michael’s claims\nmust be higher than some of Jc’s, and vice versa. This\nis impossible. It is also difficult to explain what level of the\nhierarchy an utterance winds up at when it can be coherently assigned\na level. What makes it such that it involves truth at one level rather\nthan another? \nAnother challenge Tarski’s hierarchy faces is explaining why we\ncannot just define truth for the whole hierarchy, by quantifying over\nlevels. We would thus have a predicate like ‘true at some\nlevel’. If such predicates are allowed, we are back in paradox,\nso defenders of the Tarskian hierarchy must say they are not possible.\nExplaining why is a problem for all hierarchical views. (See Glanzberg\n(2015) for further discussion.) \nIn light of these sorts of problems, many have concluded that\nTarski’s hierarchy of languages and metalanguages buys a\nsolution to the Liar paradox at the cost of implausible\nrestrictiveness. \nIn light of these sorts of criticisms of Tarski’s theory, a\nnumber of approaches to the Liar have sought to retain classical\nlogic, but have some degree of self-applicability for the truth\npredicate. We know from the reasoning in\n §2.3\n that some restrictions on capture and release will then be required.\nOne goal has been to work out which ones are well-motivated, and how\nto implement them. \nOne way to do this was suggested by Kripke himself. Rather than see\nthe Kripke apparatus we reviewed briefly in\n §4.1.1\n as part of a non-classical logical approach, one can see it as an\nintermediate step towards building a classical interpretation of a\nself-applicative \\(\\Tr\\). \nRecall that the Kripke construction starts with a classical language\n\\(\\mathcal{L}_0\\) with no truth predicate. It passes to an expanded\nlanguage \\(\\mathcal{L}^{+}_0\\), but unlike a Tarskian metalanguage,\nthis language contains a truth predicate \\(\\Tr\\) that applies to all\nof \\(\\mathcal{L}^{+}_0\\). Kripke shows how to build a partial\ninterpretation of \\(\\Tr\\), providing an extension \\(\\mathcal{E}\\) and\nan anti-extension \\(\\mathcal{A}\\). But one can then simply consider\nthe classical model \\(\\langle\n\\mathcal{M}_0,\\mathcal{E}\\rangle\\), using only the extension. This is\nthe ‘closed-off’ construction, as the gap between\nextension and anti-extension is closed off by throwing everything in\nthe gap into the false category of a classical model. \nWe know this interpretation cannot make true all of capture and\nrelease (nor the full intersubstitutability of \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner))\\). But it does make a\nrestricted form true. The following holds in the closed-off model:\n\n\\[ [\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee \\Tr(\\left\\ulcorner \\neg\nA\\right\\urcorner)] \\rightarrow[\\Tr(\\left\\ulcorner A\\right\\urcorner)\n\\leftrightarrow A].\\]\n\n This tells us that capture and release (in the form of the\nT-schema) holds for sentences that are well-behaved, in the sense of\nsatisfying \\(\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee\n\\Tr(\\left\\ulcorner \\neg A\\right\\urcorner)\\). \nWhat happens to the Liar sentence on this approach? As in the\nthree-valued case, the Liar is interpreted as falling within the gap.\n\\(L\\) is neither in \\(\\mathcal{E}\\) nor \\(\\mathcal{A}. L\\) thus falls\noutside of the domain where \\(\\Tr\\) is interpreted as well-behaved.\nBecause the situation is classical, and \\(\\left\\ulcorner\nL\\right\\urcorner\\not\\in \\mathcal{E}\\), we know that \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) is true in the closed-off\nmodel; likewise, so is \\(\\neg \\Tr(\\left\\ulcorner \\neg\nL\\right\\urcorner)\\). \nOn well-behaved sentences, we have the fixed point property that \\(A\\)\nand \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) have the same truth\nvalue, and so the semantics of \\(\\mathcal{L}^{+}_0\\) and the semantics\nit assigns to \\(\\Tr\\) correspond exactly. On pathological sentences\nlike \\(L\\), they do not, and indeed, cannot, on pain of\ntriviality. \nIn a point related to the closed-off construction, it was observed by\nFeferman (1984) that if we are careful about negation, we can dispense\nwith \\(\\mathcal{A}\\) altogether in the Kripke construction. Thus, the\nconstruction can be done without any implicit appeal to many-valued\nlogic. Related ways of thinking about Kripke’s construction are\ndiscussed by McGee (1991). \nIn\n §4.1.3\n we noted that paracomplete approaches to the paradox can be\nvulnerable to ‘revenge paradoxes’ based on some idea of\nindeterminate truth or lacking a truth value. Related issue bear in\nthe classical case. We will discuss a few in turn. \nThe closed-off Kripke construction can help fill in the idea of a\ndeterminately operator discussed in\n §4.1.3.\n Instead of an operator, it allows us to define a predicate\n\\(D(\\left\\ulcorner A\\right\\urcorner)\\) by \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner) \\vee \\Tr(\\left\\ulcorner \\neg A\\right\\urcorner). D\\)\nrepresents ‘determinately’ in the sense of applying to\nsentences that have a truth value according to \\(\\Tr\\), as it were,\n‘determined’ by the model produced by the Kripke\nconstruction. It also, as we observed, applies to all the sentences\nwhich are well-behaved in the sense of obeying the T-schema (or\ncapture and release). \nFormally, the sentences to which \\(D\\) applies in the model generated\nby the Kripke construction are those which fall in \\(\\mathcal{E}\\) or\nhave their negations fall in \\(\\mathcal{E}\\) (equivalently fall in\n\\(\\mathcal{A})\\). Kripke labeled this being\n grounded.[11] \nIt has often been noted that there is also a more informal notion of\ndeterminateness or grounding, to which the formal notion expressed by\n\\(D\\) at least roughly corresponds (cf. Herzberger 1970). The idea is\nthat the determinate sentences are the ones with well-defined semantic\nproperties. Where we have no such well-defined semantic properties, we\nshould not expect the truth predicate to report anything well-behaved,\nnor should we expect properties like capture and release to hold.\nKripke’s construction builds up \\(\\mathcal{E}\\) in stages,\nstarting with sentence with no semantic terms, and adding semantic\ncomplexity at each stage. One reaches \\(\\mathcal{E}\\) at the limit of\nthis process, which allows us to think of \\(\\mathcal{E}\\) as\nindicating the limit of where semantic values are assigned by a\nwell-defined process. Thus, the formal notion of grounding provided by\n\\(D\\) is sometimes suggested to reflect the extent to which sentences\nhave well-defined semantic properties. \nThe notion of grounding has spawned its own literature, with Leitgeb\n(2005) a key impetus. See also Bonnay and van Vugt (2015), Meadows\n(2013), and Schindler (2014). \nAnother view which makes use of a form of determinateness is advocated\nby McGee (1991). McGee’s theory, like many we have surveyed\nhere, is rich in complexity to which we cannot do justice. The theory\nhas many components, including a mathematically sophisticated\napproaches to truth related to the Kripkean ideas we have been\ndiscussing, in a setting which holds to classical logic. \nMcGee relies on two notions: truth and definite truth. Definite truth\nis a form of the idea we glossed as determinateness. But, McGee\ndescribes this idea using some very sophisticated logical techniques.\nWe will mention them briefly, for those familiar with the technical\nbackground. Formally, for McGee, definite truth is identified with\nprovability in a partially interpreted language, using an extension of\nclassical logic which takes in facts about the partial interpretation\nknown as \\(\\mathcal{A}\\)-logic. It is thus different from the\ngrounding notion we just discussed. McGee treats definitely as a\npredicate, on par with the truth predicate, and not as an\noperator on sentences as some developments do. With the right notion\nof definite truth, McGee shows that a partially interpreted language\ncontaining its own truth predicate can meet restricted forms of\ncapture and release put in terms of definite truth. Where \\(\\Def\\) is\nthe definiteness predicate, McGee show how to link truth and definite\ntruth, by showing how to validate: \nIndeed, McGee shows that these conditions can be met within a theory\nof both truth and definite truth, where truth meets appropriate forms\nof capture and release, and also where a formal statement of bivalence\nfor truth comes out definitely true. McGee thus provides a theory\nwhich has strongly self-applicative truth and definite truth, within a\nclassical setting. \nThough truth may satisfy the formal property of bivalence, it is\ncrucial to McGee’s approach that definite truth is an open-ended\nnotion, which may be strengthened (formally, by strengthening a\npartially interpreted language). Thus, definite truth meets weaker\nforms of capture and release than truth itself. (Some instances of\n\\(\\Def(\\left\\ulcorner A\\right\\urcorner) \\rightarrow A\\) fail to be\ndefinitely true, according to McGee.) Furthermore, McGee suggests that\nthis behavior of truth and definite truth makes truth a vague\npredicate. It remains disputed whether McGee’s theory avoids the\nkind of revenge problems that plague other Kripkean approaches. \nWe have now surveyed some important representatives of approaches to\nresolving the Liar within classical logic. There are a number of\nothers, many of them involving some complex mathematics. We will pause\nto mention a few of the more important of these, though given the\nmathematical complexity, we will only gesture towards them. \nThere is an important strand of work in proof theory, which has sought\nto develop axiomatic theories of self-applicative truth in classical\nlogic, including work of Cantini (1996), Feferman (1984, 1991),\nFriedman and Sheard (1987), Halbach (2011), and Horsten (2011). The\nidea is to find ways of expressing rules like capture and release that\nretain consistency. Options include more care about how\nproof-theoretic rules of inference are formulated, and more care about\nformulating restricted rules. The main ideas are discussed in the\nentry on\n axiomatic theories of truth,\n to which we will leave the details. \nKripke’s work on truth was developed in conjunction with some\nimportant ideas about inductive definitions (as we see, for instance,\nin the later parts of Kripke 1975). These connections are explored\nfurther in work of Burgess (1986) and McGee (1991). We also pause to\nmention work of Aczel (1980) combining ideas about inductive\ndefinitions and the lambda calculus. \nAnother family of proposed solutions to the Liar are contextualist\nsolutions. These also make use of classical logic, but base their\nsolutions primarily on some ideas from the philosophy of language.\nThey take the basic lesson of the Liar to be that truth predicates\nshow some form of context dependence, even in otherwise\nnon-context-dependent fragments of a language. They seek to explain\nhow this can be so, and rely on it to resolve the problems faced by\nthe Liar. \nContextualist theories share with a number of approaches we have\nalready seen the idea that there is something indeterminate or\nsemantically not well-formed about our Liar sentence \\(L\\). But,\ncontextualist views give a special role to issues of\n‘revenge’ and lack of expressive power. \nOne way of thinking about why the truth predicate is not well-behaved\non the Liar sentence is that there is not really a well-defined truth\nbearer provided by the Liar sentence. To make this vivid (as discussed\nby C. Parsons (1974)), suppose that\ntruth bearers are propositions expressed by sentences in contexts, and\nthat the Liar sentence fails to express a proposition. This is the\nbeginnings of an account of how the Liar winds up ungrounded or in\nsome sense indeterminate. At least, we should not expect \\(\\Tr\\) to be\nwell-behaved where sentences fail to express propositions. \nBut, it is an unstable proposal. We can reason that if the Liar\nsentence fails to express a proposition, it fails to express a true\nproposition. In the manner of a revenge paradox, if our Liar sentence\nhad originally said ‘this sentence does not express a true\nproposition’, then we would have our Liar sentence back. And, we\nhave shown that this sentence says something true, and so expresses a\ntrue proposition. Thus, from the assumption that the Liar sentence is\nindeterminate or lacks semantic status, we reason that it must have\nproper semantic status, and indeed say something true. We are hence\nback in paradox. \nContextualists do not see this as a new ‘revenge’ paradox,\nbut the basic problem posed by the Liar. First of all, in a setting\nwhere sentences are context dependent, the natural formulation of a\ntruth claim is always in terms of expressing a true proposition, or\nsome related semantically careful application of the truth predicate.\nBut more importantly, to the contextualist, the main issue behind the\nLiar is embodied in the reasoning on display here. It involves two key\nsteps. First, assigning the Liar semantically defective\nstatus—failing to express a proposition or being somehow\nindeterminate. Second, concluding from the first step that the Liar\nmust be true—and so not indeterminate or failing to express a\nproposition—after all. Both steps appear to be the result of\nsound reasoning, and so the conclusions reached at both must be true.\nThe main problem of the Liar, according to a contextualist, is to\nexplain how this can be, and how the second step can be\nnon-paradoxical. (Such reasoning is explored by Glanzberg (2004c) and C. Parsons (1974). For a critical discussion, see Gauker\n(2006).) \nThus, contextualists seek to explain how the Liar sentence can have\nunstable semantic status, switching from defective to non-defective in\nthe course of this sort of inference. They do so by appealing to the\nrole of context in fixing the semantic status of sentences.\nSentences can have different semantic status in different contexts.\nThus, to contextualists, there must be some non-trivial effect of\ncontext involved in the Liar sentence, and more generally, in\npredication of truth. \nOne prominent contextualist approach, advocated by Burge (1979) and\ndeveloped by Koons (1992) and Simmons (1993), starts with the idea\nthat the Tarskian hierarchy itself offers a way to see the truth\npredicate as context dependent. Tarski’s hierarchy postulates a\nhierarchy of truth predicates \\(\\Tr_i\\). What if \\(i\\) is not merely a\nmarker of level in a hierarchy, but a genuine contextual parameter? If\nso, then the Liar sentence is in fact context-dependent: it has the\nform \\(\\neg \\Tr_i (\\left\\ulcorner L\\right\\urcorner)\\), where \\(i\\) is\nset by context. Context then sets the level of the truth\npredicate. \nThis idea can be seen as an improvement on the original Tarskian\napproach in several respects. First, once we have a contextual\nparameter, the need to insist that Liar sentences are never\nwell-formed disappears. Hence, we can think of each \\(\\Tr_i\\) as\nincluding some limited range of applicability to sentences of its own\nlanguage. Using the Kripkean techniques likes the closed-off\nconstruction we reviewed above, predicates like \\(\\Tr_i\\) can be\nconstructed which have as much self-applicability as Kripke’s\nown. (Burge 1979 and the postscript to C. Parsons 1974 consider\nbriefly how Kripkean techniques could be applied in this setting.\nThough he works in a very different setting, ideas of Gaifman (1988,\n1992) can be construed as showing how even more subtle ways of\ninterpreting a context-dependent truth predicate can be\ndeveloped.) \nWith suitable care, other problems for the Tarskian hierarchy can be\navoided as well. Burge proposes that the parameter \\(i\\) in \\(\\Tr_i\\)\nis set by a Gricean pragmatic process. In effect, speakers implicate\nthat \\(i\\) is to be set to a level for which the discourse they are in\ncan be coherently interpreted (with a maximal coherent extension for\n\\(\\Tr_i)\\). Thus, truth does indeed find its own level, and so\nKripke’s objection about how to fix levels for non-paradoxical\nsentences may be countered. \nThis approach gives substance to the idea that the Liar sentence is\ncontext dependent. Any sentence containing \\(\\Tr_i\\) will be context\ndependent, inheriting a contextual parameter along the way. This\noffers a way to make sense of the arguments for the instability of the\nsemantic status of \\(L\\) that motivated contextualism. In an initial\ncontext, we fix some level \\(i\\). This is the level at which \\(L\\) is\ninterpreted. Call this interpretation \\(L_i . L_i\\) says \\(\\neg \\Tr_i\n(\\left\\ulcorner L_{i}\\right\\urcorner)\\). By the usual Liar reasoning,\nwe show that \\(L_i\\) must lack determinate semantic status—or\nfail to express a proposition. As we discussed, we then reason that\n\\(L\\) must come out true. According to the contextualist view at hand,\nthis is the claim that \\(L_i\\) is true according to some other\ncontext, where a wider truth predicate is in play. This amounts to\nbeing true at some higher level of the hierarchy. We can conclude, for\ninstance, that the Liar sentence as it was used at level \\(i\\) is true\naccording to a wider level \\(k \\gt i\\). Hence, \\(\\Tr_k (\\left\\ulcorner\nL_{i}\\right\\urcorner)\\), where \\(k \\gt i\\). \nThis form of contextualism thus maintains that once we see the\ncontext-dependent behavior of \\(\\Tr_i\\), we can make good sense of the\ninstability of \\(L\\). This can be seen as an improvement on both the\nTarskian view, and embodying some of the techniques of classical logic\nwe reviewed in\n §4.2.\n Depending how the Burge view is spelled out technically, it will\neither have full capture and release at each level, or capture and\nrelease with the same restrictions as the closed-off Kripke\nconstruction. \nThe view that posits contextual parameters on the truth predicate does\nface a number of questions. For instance, it is fair to ask why we\nthink the truth predicate really has a contextual parameter,\nespecially if we mean a truth predicate like the one we use in natural\nlanguage. Merely noting that such a parameter would avoid paradox does\nnot show that it is present in natural language. Furthermore, whether\nit is acceptable to see truth as coming in levels at all,\ncontext-based or not, remains disputed. (Not all those who advocate\ncontextual parameters on the truth predicate agree about the role of\nhierarchy. In particular, Simmons (1993) advocates a view he labels\nthe ‘singularity theory’ which he proposes avoids outright\nhierarchical structures.) Finally, the Burgean appeal to Gricean\nmechanisms to set levels of truth has been challenged. (For instance,\nGaifman (1992) asks if the Gricean process does any substantial work\nin Burge’s account.) \nContextualist approaches come in many varieties, each of which makes\nuse of slightly different apparatus. With contextualist theories the\nchoice often turns on issues in philosophy of language as well as\nlogic. We already noted a different way of developing contextualist\nideas from Gaifman (1988, 1992). We will now briefly review a few more\nalternatives. \nAnother contextualist approach, stemming from work of C. Parsons\n(1974), seeks to build up the\ncontext dependence of the Liar sentence, and ultimately the context\ndependence of the truth predicate, from more basic components. The key\nis to see the context dependence of the Liar sentence as derived from\nthe context dependence of quantifier domains. \nQuantification enters the picture when we think about how to account\nfor predication of truth when sentences display context dependence. In\nsuch an environment, it does not make good sense to predicate truth of\nsentences directly. Not all sentences will have the right kind of\ndeterminate semantic properties to be truth bearers; or, as we have\nbeen putting it, not all sentences will express propositions. But\nthen, to say that a sentence \\(S\\) is true in context \\(c\\) is to say\nthat there is a proposition \\(p\\) expressed by \\(S\\) in\n\\(c\\), and that proposition \\(p\\) is true. \nThe current contextualist proposal starts with the observation that\nquantifiers in natural language typically have context-dependent\ndomains of quantification. When we say ‘Everyone is here’,\nwe do not mean everyone in the world, but everyone in some\ncontextually provided subdomain. Context dependence enters the Liar,\naccording to this contextualist view, in the contextual effects on the\ndomain of the propositional quantifier \\(\\exists p\\). \nIn particular, this domain must expand in the course of the\nreasoning about the semantic status of the Liar. In the initial\ncontext, \\(\\exists p\\) must range over a small enough domain that\nthere is no proposition for \\(L\\) to express. In the subsequent\ncontext, the domain expands to allow \\(L\\) to express some true\nproposition. Proposals for how this expansion happens, and how to\nmodel the truth predicate and the relation of expressing a proposition\nin the presence of the Liar, have been explored by Glanzberg (2001,\n2004a), building on work of C. Parsons (1974). Defenders of this\napproach argue that it does better in locating the locus of context\ndependence than the parameters on truth predicates view. \nAnother variant on the contextualist strategy for resolving the Liar,\ndeveloped by Barwise and Etchemendy (1987) and Groeneveld (1994),\nrelies on situation theory rather than quantifier domains to\nprovide the locus of context dependence. Situation theory is a highly\ndeveloped part of philosophy of language, so we shall again give only\nthe roughest sketch of how their view works. \nA situation is a partial state the world might be in: something like\n\\(a\\) being \\(F\\). Situations are classified by what are called\nsituation types. A proposition involves classifying a situation as\nbeing of a situation type. Thus, a proposition \\(\\{s\\); [\\(\\sigma]\\}\\)\ntell us that situation \\(s\\) is of type \\(\\sigma\\). The situation\n\\(s\\) here plays a number of roles, including that of providing a\ncontext. \nWhen it comes to the Liar, Barwise and Etchemendy construe Liar\npropositions as having the form \\(f_s = \\{s\\); [\\(\\Tr,f_s\\); 0]\\(\\}\\),\nrelative to an initial situation \\(s\\). This is a proposition \\(f_s\\)\nwhich says of itself that its falsity is a fact that holds in \\(s\\).\n(In Barwise and Etchemendy’s notation, the 0 indicates falsity,\nso the situation type is that the state of affairs of the proposition\nbeing false holds. The proposition says this is a fact that holds in\n\\(s\\).) There is a sense in which this proposition cannot be\nexpressed. In particular, the state of affairs \\(\\langle \\Tr,f_s\\);\n\\(0\\rangle\\) cannot be in \\(s\\). (Actually, Barwise and Etchemendy say\nthat the proposition is expressible, but give up on what they call the\n\\(F\\)-closure of \\(s\\). But there is a core observation in common\nbetween these two points, and the details do not matter for our\npurposes here.) There is then a distinct situation \\(s' = s \\cup\n\\{\\langle \\Tr,f_s\\); \\(0\\rangle \\}\\), and the proposition \\(\\{s'\\);\n[\\(\\Tr,f_s\\); 0]\\(\\}\\) relative to this new situation—this new\n‘context’—is true. \nThis idea clearly has a lot in common with the restriction on\nquantifier domains view. In particular, both approaches seek to show\nhow the domain of contents expressible in contexts can expand, to\naccount for the instability of the Liar sentence. For discussion of\nrelations between the situation-theoretic and quantifier domain\napproaches, see Glanzberg (2004a). Barwise and Etchemendy discuss\nrelations between their situation-based and a more traditional\napproach in 1987 (Ch. 11). For a detailed match-up between the Barwise\nand Etchemendy framework and a Burgean framework of indexed truth\npredicates, see Koons (1992). \nIt is a key challenge to contextualists to provide a full and\nwell-motivated account of the source and nature of the shift in\ncontext involved in the Liar, though of course, many contextualists\nbelieve they have met this challenge. In favor of the contextualist\napproach is that it takes the revenge phenomenon to be the basic\nproblem, and so is largely immune to the kinds of revenge issues that\naffect other approaches we have considered. But, it may be that there\nis another form of revenge which might be applied. To retain\nconsistency, contextualists must apply restrictions on quantifiers to\nsuch quantifiers as ‘all contexts’. To achieve this, it\nmust presumably be denied that there are any absolutely unrestricted\nquantifiers. Glanzberg (2004b, 2006) argues this is the correct\nconclusion, but it is highly controversial. For a survey of thinking\nabout this, see the papers in Rayo and Uzquiano 2006. \nAnother approach to the Liar, advocated by Gupta (1982), Herzberger\n(1982), Gupta and Belnap (1993), and a number of others, is the\nrevision theory of truth. This approach shares some features\nwith the views we surveyed in\n §4.3,\n in that it takes classical logic for granted. We also believe it has\nan affinity with the views discussed in\n §4.4,\n as it rethinks some basic aspects of semantics. But it is a\ndistinctive approach. We will sketch some of the fundamentals of this\nview. For a discussion of the foundations of the revision theory, and\nits relations to contextualism, see L. Shapiro (2006). More details,\nand more references, may be found in the entry on\n the revision theory of truth. \nThe revision theory of truth starts with the idea that we may take the\nT-schema at face value. Indeed, Gupta and Belnap (1993) take up a\nsuggestion from Tarski (1944), that the instances of the T-schema can\nbe seen as partial definitions of truth; presumably with all the\ninstances together, for the right language or family of languages\nconstituting a complete definition. At the same time, the revision\ntheory holds fast to classical logic. Thus, we already know, we have\nthe Liar paradox for any language with enough expressive resources to\nproduce Liar sentences. \nIn response, the revision theory proposes a different way of\napproaching the semantic properties of the truth predicate. In keeping\nwith our practices here, we may begin with a classical model\n\\(\\mathcal{M}_0\\) for a language \\(\\mathcal{L}_0\\) without a truth\npredicate, and consider what happens when we add a truth predicate\n\\(\\Tr\\) to form the extended language \\(\\mathcal{L}^{+}_0\\). This\nlanguage has a full self-applicative truth predicate, and so can\ngenerate the Liar sentence \\(L\\). \nTo build a classical model for \\(\\mathcal{L}^{+}_0\\), we need an\nextension for \\(\\Tr\\). Let us pick a set: call it \\(H\\) for a\nhypothesis about what the extension of \\(\\Tr\\) might be.\n\\(H\\) may be \\(\\varnothing\\), it may be the entire domain of\n\\(\\mathcal{M}_0\\), or it may be anything else. It need not be a\nparticularly good approximation of the semantic properties of\n\\(\\Tr\\). \nEven if it is not, \\(\\langle \\mathcal{M}_0,H\\rangle\\) still provides a\nclassical model, in which we can interpret \\(\\mathcal{L}^{+}_0\\). With\nthat, we can in effect apply the T-schema, relative to our hypothesis\n\\(H\\), and see what we get. More precisely, we can let \\(\\tau(H) =\n\\{\\left\\ulcorner A\\right\\urcorner | A\\) is true in \\(\\langle\n\\mathcal{M}_0,H\\rangle \\}. \\tau(H)\\) is generally a better hypothesis\nabout what is true in our language than \\(H\\) might have been. At\nleast, clearly, if \\(H\\) made foolish guesses about the truth of\nsentence of the truth-free fragment \\(\\mathcal{L}_0\\), they are\ncorrected in \\(\\tau(H)\\), which contains everything from\n\\(\\mathcal{L}_0\\) true in \\(\\mathcal{M}_0\\). Thus, \\(\\langle\n\\mathcal{M}_0,\\tau(H)\\rangle\\) is generally a better model of\n\\(\\mathcal{L}^{+}_0\\) then \\(\\langle \\mathcal{M}_0,H\\rangle\\). \nBetter in many respects. But when it comes to paradoxical sentences\nlike \\(L\\), we see something different. As a starting hypothesis, let\nus consider \\(H = \\varnothing\\). Consider what happens to the truth of\n\\(L\\) as we apply \\(\\tau\\): \nThe Liar sentence never stabilizes under this process. We reach an\nalternation of truth values which will go on for ever. This shows,\naccording the revision theory, that truth is a circular concept. As\nsuch, it does not have an extension in the ordinary sense. Rather, it\nhas a rule for revising extensions, which never stabilizes. \nIn the terminology of the revision theory, \\(\\tau\\) is a revision\nrule. It takes us from one hypothesis about the interpretation of\n\\(\\Tr\\) to another. Sequences of values we generate by such revision\nrules, starting with a given initial hypothesis, are revision\nsequences. We leave to a more full presentation the important\nissue of the right way to define transfinite revision\nsequences. (See the entry on\n revision theories of truth.) \nThe characteristic property of paradoxical sentences like the Liar\nsentence is that they are unstable in revision sequences: there is no\npoint in the sequence at which they reach a stable truth value. This\nclassifies sentences as stably true, stably false, and unstable. The\nrevision theory develops notions of consequence based on these, and\nrelated notions. See the entry on\n revision theories of truth\n for further exposition of this rich theory. \nIn\n §2.3.3\n we saw that the Liar paradox, in the presence of unrestricted capture\nand release and classical logic, leads to contradiction. So long as we\nhave EFQ (as classical logic does), this results in triviality. Most\nof the proposed solutions we have considered (with the exception of\nthe revision theory) try to avoid this result somehow, either by\nrestricting capture and release or departing from classical logic. But\nthere is another idea that has occasionally been argued, that the Liar\nparadox simply shows that the kinds of languages we speak, which\ncontain their own truth predicates, are inconsistent. \nThis is not an easy view to formulate. Though Tarski himself seemed to\nsuggest something along these lines (for natural languages,\nspecifically), it was argued by Herzberger (1967) that it is\nimpossible to have an inconsistent language. \nIn contrast, Eklund (2002) takes seriously the idea that our semantic\nintuitions, expressed, for instance, by unrestricted capture and\nrelease, really are inconsistent. Eklund grants that this does not\nmake sense if these intuitions have their source simply in our grasp\nof the truth conditions of sentences. But he suggests an alternative\npicture of semantic competence which does make sense of it (closely\nrelated to conceptual role views of meaning). He suggests that we\nthink of semantic competence in terms of a range of principles\nspeakers are disposed to accept in virtue of knowing a language. Those\nprinciples may be inconsistent. But even so, they determine semantic\nvalues. Semantic values will be whatever comes closest to satisfying\nthe principles—whatever makes them maximally correct—even\nif nothing can satisfy all of them due to an underlying\ninconsistency. \nEklund thus supports an idea suggested by Chihara (1979).\nChihara’s main aim is to provide what he calls a\ndiagnosis of the paradox, which should explain why the\nparadox arises and why it appears compelling. But along the way, he\nsuggests that the source of the paradox is our acceptance of the\nT-schema (by convention, he suggests), in spite of its\ninconsistency. \nA related, though distinct, view is defended by Patterson (2007,\n2009). Patterson argues that competence with a language puts one in a\ncognitive state relating to an inconsistent theory—one including\nthe unrestricted T-schema and governed by classical logic. He goes on\nto explore how such a cognitive state could allow us to successfully\ncommunicate, in spite of relating us to a false theory. \nA different sort of inconsistency theory is advocated by Scharp\n(2013). Scharp argues that truth is an inconsistent concept, like the\npre-relativistic concept of mass. As such, it is unsuitable for\ncareful theorizing. What we need to do, according to Scharp, is\nreplace the inconsistent concept of truth with a family of consistent\nconcepts that work better. Scharp develops just such a family of\nconcepts, and offers a theory of them. \nThere is much more to say about the Liar paradox than we have covered\nhere: there are more approaches to the Liar variants we have\nmentioned, and more related paradoxes like those of denotation,\nproperties, etc. There are also more important technical results, and\nmore important philosophical implications and applications. Our goal\nhere has been to be more suggestive than exhaustive, and we hope to\nhave given the reader an indication of what the Liar paradox is, and\nwhat its consequences might be.","contact.mail":"jc.beall@uconn.edu","contact.domain":"uconn.edu"},{"date.published":"2011-01-20","date.changed":"2016-12-12","url":"https://plato.stanford.edu/entries/liar-paradox/","author1":"Jc Beall","author1.info":"http://entailments.net","author2.info":"http://www.philosophy.northwestern.edu/people/faculty/glanzberg.html","entry":"liar-paradox","body.text":"\n\n\nThe first sentence in this essay is a lie. There is something odd\nabout saying so, as has been known since ancient times. To see why,\nremember that all lies are untrue. Is the first sentence true? If it\nis, then it is a lie, and so it is not true. Conversely, suppose that\nit is not true. We (viz., the authors) have said it, and normally\nthings are said with the intention of being believed. Saying something\nthat way when it is untrue is a lie. But then, given what the sentence\nsays, it is true after all!\n\n\nThat there is some sort of puzzle to be found with sentences like the\nfirst one of this essay has been noted frequently throughout the\nhistory of philosophy. It was discussed in classical times, notably by\nthe Megarians, but it was also mentioned by Aristotle and by Cicero.\nAs one of the insolubilia, it was the subject of extensive\ninvestigation by medieval logicians such as Buridan. More recently,\nwork on this problem has been an integral part of the development of\nmodern mathematical logic, and it has become a subject of extensive\nresearch in its own right. The paradox is sometimes called the\n‘Epimenides paradox’ as the tradition attributes a\nsentence like the first one in this essay to Epimenides of Crete, who\nis reputed to have said that all Cretans are always liars. That some\nCretan has said so winds up in no less a source than New\n Testament![1]\n \n\nLying is a complicated matter, but what’s puzzling about\nsentences like the first one of this essay isn’t essentially\ntied to intentions, social norms, or anything like that. Rather, it\nseems to have something to do with truth, or at least, some semantic\nnotion related to truth. The puzzle is usually named ‘the Liar\nparadox’, though this really names a family of paradoxes that\nare associated with our type of puzzling sentence. The family is aptly\nnamed one of paradoxes, as they seem to lead to incoherent\nconclusions, such as: “everything is true”. Indeed, the\nLiar seems to allow us to reach such conclusions on the basis of\nlogic, plus some very obvious principles that have sometimes been\ncounted as principles of logic. Thus, we have the rather surprising\nsituation of something near or like logic alone leading us to\nincoherence. This is perhaps the most virulent strain of paradox, and\ndealing with it has been an important task in logic for about as long\nas there has been logic.\n\n\nIn this essay, we will review the important members of the family of\nLiar paradoxes, and some of the important ideas about how these\nparadoxes might be resolved. The past few thousand years have yielded\na great number of proposals, and we will not be able to examine all of\nthem; instead, we will focus on a few that have, in recent\ndiscussions, proved to be important.\n\nConsider a sentence named ‘FLiar’, which says of itself\n(i.e., says of FLiar) that it is false. \nThis seems to lead to contradiction as follows. If the sentence\n‘FLiar is false’ is true, then given what it says, FLiar\nis false. But FLiar just is the sentence ‘FLiar is false’,\nso we can conclude that if FLiar is true, then FLiar is false.\nConversely, if FLiar is false, then the sentence ‘FLiar is\nfalse’ is true. Again, FLiar just is the sentence ‘FLiar\nis false’, so we can conclude that if FLiar is false, then FLiar\nis true. We have thus shown that FLiar is false if and only if FLiar\nis true. But, now, if every sentence is true or false, FLiar itself is\neither true or false, in which case—given our reasoning\nabove—it is both true and false. This is a contradiction.\nContradictions, according to many logical theories (e.g., classical\nlogic, intuitionistic logic, and much more) imply\nabsurdity—triviality, that is, that every sentence is true. \nAn obvious response is to deny that every sentence is true or false,\ni.e., to deny the principle of bivalence. As we will discuss in\n §4,\n some descendants of this idea remain important in current work on the\nLiar. Even so, a simple variant Liar sentence shows that this\nimmediate answer is not all there is to the story. \nRather than work with falsehood, we can construct a Liar sentence with\nthe complex predicate ‘not\n true’.[2]\n Consider a sentence named ‘ULiar’ (for\n‘un-true’), which says of itself that it is not true. \nThe argument towards contradiction is similar to the FLiar case. In\nshort: if ULiar is true, then it is not true; and if it is not true,\nthen it is true. But, now, if every sentence is true or not true,\nULiar itself is true or not true, in which case it is both true and\nnot true. This is a contradiction. According to many logical theories,\na contradiction implies absurdity—triviality. \nThe two forms of the Liar paradox we have so far reviewed rely on some\nexplicit self-reference—sentences talking directly about\nthemselves. Such explicit self-reference can be avoided, as is shown\nby our next family of Liar paradoxes. \nConsider a very concise (viz., one-sentence-each) dialog between\nsiblings Max and Agnes. \nWhat Max said is true if and only if what Agnes said is true. But what\nAgnes said (viz., ‘Max’s claim is not true’) is true\nif and only if what Max said is not true. Hence, what Max said is true\nif and only if what Max said is not true. But, now, if what Max said\nis true or not true, then it is both true and not true. And this, as\nin the FLiar and ULiar cases, is a contradiction, implying, according\nto many logical theories, absurdity. \nLiar paradoxes can also be formed using more complex sentence\nstructure, rather than complex modes of reference. One that has been\nimportant involves Boolean compounds. \nBoolean compounds can enter into Liar sentences in many ways. One\nrelatively simple one is as follows. Consider the following sentence\nnamed ‘DLiar’ (for ‘Disjunctive’). \nFirst, observe that if DLiar is not true, then it must be true. If\nDLiar is not true, then by similar reasoning to what we saw above, we\nhave that the left disjunct of DLiar is true. But a disjunction is\ntrue if one of its disjuncts is, so DLiar is true. Thus, if DLiar is\nnot true, it is true and not true, and we have a contradiction. By\nreductio, then, it must be true; so one of its disjuncts must be true.\nIf it’s the first one, we have a contradiction, so it must be\nthe second one; we can conclude that \\(1 = 0\\). We have thus proved\nthat \\(1 = 0\\). Moreover, the sentence ‘\\(1 = 0\\)’ played\nno real role in the above reasoning. We could replace it with any\nother sentence to get a proof of that sentence.  \nWe pause to mention DLiar as it is connected with another important\nparadox: Curry’s paradox, which involves conditionals that say\nof themselves only that if they (the conditional itself) are true, so\ntoo is some absurdity (e.g., ‘if this sentence is true, then \\(1\n= 0\\)’ or ‘if this sentence is true, everything is\ntrue’ or so on). At least in languages where the conditional is\nthe material conditional, and so \\(A \\supset B\\) is equivalent to\n\\(\\neg A \\vee B\\), DLiar is equivalent to the Curry sentence\n‘DLiar is true \\(\\supset 1 = 0\\)’. Though this may set up\nsome relations between the Liar and Curry’s paradox, we pause to\nnote an important difference. For the Curry paradox is most important\nwhere the conditional is more than the material conditional (or some\nmodalized variant of it). In such settings, the Curry paradox does not\nwear negation on its sleeve, as DLiar does. For more information,\nconsult the entry on\n Curry’s paradox. \nThe question of whether the Liar paradox really requires some sort of\ncircularity has been the subject of extensive debate. Liar cycles\n(e.g., the Max–Agnes dialog) show that explicit self-reference\nis not necessary, but it is clear that such cycles themselves involve\ncircular reference. Yablo (1993b) has argued that a more complicated\nkind of multi-sentence paradox produces a Liar without\ncircularity. \nYablo’s paradox relies on an infinite sequence of claims\n\\(A_0\\), \\(A_1\\), \\(A_2\\), …, where each \\(A_i\\) says that all\nof the ‘greater’ \\(A_k\\) (i.e., the \\(A_k\\) such that \\(k\n\\gt i)\\) are untrue. (In other words, each claim says of the rest that\nthey’re all untrue.) Since we have an infinite sequence, this\nversion of the Liar paradox appears to avoid the sort of circularity\napparent in the previous examples; however, contradiction still seems\nto emerge. If \\(A_0\\) is true, then all of the ‘greater’\n\\(A_k\\) are untrue, and a fortiori \\(A_1\\) is untrue. But,\nthen, there is at least one true \\(A_k\\) greater than \\(A_1\\) (i.e.,\nsome \\(A_k\\) such that \\(k \\gt 1)\\), which contradicts \\(A_0\\).\nConversely, if \\(A_0\\) is untrue, then there’s at least one true\n\\(A_k\\) greater than \\(A_0\\). Letting \\(A_m\\) be such a one (i.e., a\ntruth greater than \\(A_0)\\), we have it that \\(A_{m+1}\\) is untrue, in\nwhich case there’s some truth greater than \\(A_{m+1}\\). But this\ncontradicts \\(A_m\\). What we have, then, is that if \\(A_0\\) (the first\nclaim in the infinite sequence) is true or untrue, then it is both.\nAnd this, as in the other cases, is a contradiction. \nWhether Yablo’s paradox really avoids self-reference is\nmuch-debated. See, for instance, Barrio (2012), Beall (2001), Cook\n(2006, 2014), Ojea (2012), Picollo (2012), Priest (1997), Sorensen\n(1998), and Teijeiro (2012). \nWe have already seen a kind of characteristic reasoning that goes with\nthe Liar. We have also seen some common structure across all our\nexample Liar paradoxes, such as the presence of truth predicates, and\nsomething like negation. We pause here to discuss these ingredients of\nthe paradox, focusing on the basic Liars. Just what creates\nthe Liar paradox, and just which of the puzzles we just surveyed is\n‘basic’, is a contentious matter; different approaches to\nsolving the Liar view these matters differently. Hence, our goal is\nmerely to illuminate some common themes across different Liars, not to\noffer a full diagnosis of the source of the paradox. \nWe highlight three aspects of the Liar: the role of truth predicates,\nthe kinds of principles for reasoning about truth that are needed, and\nthe way that a paradox can be derived given these resources. \nThe first ingredient in building a Liar is a truth predicate, which we\nwrite here as \\(\\Tr\\). We follow the usual custom in logic of treating\nthis as a predicate of sentences. However, especially as we come to\nconsider some ways of resolving the Liar, it should be remembered that\nthis treatment can be seen as more for convenience in exposition than\na serious commitment to what truth bearers are. \nWe assume that we have, along with the truth predicate, appropriate\nnames of sentences. For a given sentence \\(A\\), suppose that\n\\(\\left\\ulcorner A\\right\\urcorner\\) is a name for it. A predication of\ntruth to \\(A\\) then looks like \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\). \nWe shall say that a predicate \\(\\Tr(x)\\) is a truth predicate for\nlanguage \\(\\mathcal{L}\\) only if \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) is well-formed for every sentence \\(A\\) of\n\\(\\mathcal{L}\\). We typically expect \\(\\Tr\\) to obey some principles\ngoverning its behavior on sentences of a given language. It is to\nthose we now\n turn.[3] \nThe tradition, going back to Tarski (1935), is that the behavior of\nthe truth predicate \\(\\Tr\\) is described by the following\nbiconditional. \nIndeed, Tarski took the biconditional here to be the material\nbiconditional of classical logic. This is usually called the\nT-schema. For more on the T-schema, and Tarski’s views\nof truth, see the entries on\n Alfred Tarski\n and\n Tarski’s truth definitions. \nThe Liar paradox has been a locus of thinking about non-classical\nlogics (as we already saw a taste of, for instance, in the idea that\nbivalence might be rejected as part of a solution to the Liar). Thus,\nwe should stop to consider what principles should govern the truth\npredicate \\(\\Tr\\) if classical logic is not to hold. \nThe leading idea for what might replace the T-schema points to two\nsorts of ‘rules’ (e.g., two sorts of ‘inference\nrules’ in some sense) or principles that are characteristic of\nthe truth predicate. If you have a sentence \\(A\\), you can infer\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\), that is, you can\n‘capture’ \\(A\\) with the truth predicate. Conversely, if\nyou have \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\), you can infer\n\\(A\\), that is, you can ‘release’ \\(A\\) from the truth\npredicate. In some logics, capture and release wind up being\nequivalent to the T-schema, but it is often helpful to break these\nup: \nImplies here is a logical notion, though just which one, and\nwhat the options are, depends on what background logic is assumed. For\nour discussion, we think of it in so-called rule form: that the\nargument from \\(A\\) to \\(B\\) is valid, which we record (as above) via\nthe turnstile. In some logical settings (e.g., classical logic, in\nwhich a certain so-called deduction theorem holds), this is equivalent\nto the provability of a conditional, but in some settings, it is not.\nEither way, capture and release jointly make \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) logically equivalent in the\nsense of being inter-derivable. In strong forms, capture and release\ncan lead to the full intersubstitutability of \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) in extensional contexts. As\nwe discuss more in\n section 4.1,\n this is important to some views of the nature of truth. Thus,\n\\(\\vdash\\) is being used here as a schematic placeholder for a range\nof different logical notions, each of which will provide some notion\nof valid inference in some logical theory. \n(There are a number of logical subtleties here that we will not\npursue, especially about how to formulate rules, and which rules are\nconsistent. Different formulations of rules vary significantly in\nlogical strength as\n well.[4]\n See the entry on\n axiomatic theories of truth\n for more on how consistent forms of capture and release can be\nformulated in classical logic. In the terminology of Friedman and\nSheard (1987), the rule forms of capture and release are called\n‘T-Intro’ and ‘T-Elim’, and the conditional\nforms ‘T-In’ and ‘T-Out’. We prefer the\nbroader terminology, since it highlights a general form of behavior\ncommon to a great variety of predicates and operators, e.g.,\nknowledge releases but doesn’t capture;\npossibility captures but doesn’t release; and so on;\nand truth is special in doing both.) \nThe Liar paradox begins with a language containing a truth predicate,\nwhich obeys some form of capture and release. We now explore more\ncarefully how a paradox results from these assumptions. \nPutting aside Yablo-type paradoxes, the Liar relies on some form of\nself-reference, either direct, as in in the simple Liars above, or\nindirect, as in Liar cycles. Most natural languages have little\ntrouble generating self-reference. The first sentence of this essay is\none example. Self-reference can be accidental, as in the case where\nsomeone writes ‘The only sentence on the blackboard in room 101\nis not true’, by chance writing this in room 101 itself (as C.\nParsons (1974) noted). \nIn formal languages, self-reference is also very easy to come by. Any\nlanguage capable of expressing some basic syntax can generate\nself-referential sentences via so-called diagonalization (or more\nproperly, any language together with an appropriate theory of syntax\nor\n arithmetic).[5]\n A language containing a truth predicate and this basic syntax will\nthus have a sentence \\(L\\) such that \\(L\\) implies \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) and vice versa: \nThis is a ‘fixed point’ of (the compound predicate)\n\\(\\neg\\Tr\\), and is, in effect, our simple-untruth Liar. \n(Technically, it is simplest to put the fixed point property in terms\nof implications, as we have done here. But intuitively, the idea is\nthat somehow \\(L\\) ‘just is’ \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). This can be made more precise, if we think of\nthe Liar sentence \\(L\\) arising from a name \\(c\\) that\ndenotes the sentence \\(\\neg \\Tr(c)\\). In this way, we can think of the\nexistence of the Liar as being reflected in the identity \\(c =\n\\left\\ulcorner \\neg \\Tr(c)\\right\\urcorner\\). For more on the details\nof this approach, see Heck 2012.) \nOther conspicuous ingredients in common Liar paradoxes concern logical\nbehavior of basic connectives or features of implication. A few of the\nrelevant principles are: \n(This is not to suggest that these are the only logical\nfeatures involved in common Liar paradoxes, but they’re arguably\nthe most important of the salient ones.) \nGiven the foregoing ingredients, we can now give a slightly more\nabstract form of the paradox. (Our hope is to use this abstract form\nto highlight different responses to the paradox.) We suppose that we\nhave a language \\(\\mathcal{L}\\) with a truth predicate \\(\\Tr\\), and\nthat \\(\\mathcal{L}\\) allows enough syntax to construct a sentence\n\\(L\\) such that \\(L \\dashv \\vdash \\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). We also suppose that the logic of \\(\\mathcal{L}\\)\nenjoys LEM and EFQ and satisfies DP and adjunction. \nAn argument that our Liar sentence \\(L\\) implies a contradiction runs\nas follows. \nThis version of the Liar is one of many. With a little more\ncomplexity, for instance, either capture or release can be avoided in\nfavor of some other background assumptions. Intuitionistic variants of\nthe Liar are also available, though we shall not explore\nintuitionistic logic\n here.[8] \nWe have so far shown that with the given ingredients our Liar sentence\n\\(L\\) implies a contradiction (thus formalizing the reasoning in\nULiar). From here, it is one short step to all-out absurdity—if\nthe lone contradiction weren’t already absurd enough. We invoke\nEFQ to finish the proof. (Well, we also assume that \\(A \\wedge B\\)\nimplies \\(A\\) and \\(B\\), i.e., that simplification is valid in\n\\(\\mathcal{L}\\); but in fact this assumption is not really\nnecessary.) \n\\(B\\), here, may be any—every—sentence that you like (or\ndon’t like, as the case may be)! EFQ is the principle that every\nsentence follows from a contradiction; it sanctions the step from a\nsingle contradiction to outright triviality of logic. \nIn the face of such absurdity (triviality), we conclude that something\nis wrong in the foregoing Liar reasoning. The question is: what? This,\nin the end, is the question that the Liar paradox raises.  \nWe have now seen that with some elementary assumptions about truth and\nlogic, a logical disaster ensues. What is the wider significance of\nsuch a result? \nFrom time to time, the Liar has been argued to show us something\nfar-reaching about philosophy. For instance, Grim (1991) has argued\nthat it shows the world to be essentially ‘incomplete’ in\nsome sense, and that there can be no omniscient being. McGee (1991)\nand others suggest that the Liar shows the notion of truth to be a\nvague notion. Glanzberg (2001) holds that the Liar shows us something\nimportant about the nature of context dependence in language, while\nEklund (2002) holds that it shows us something important about the\nnature of semantic competence and the languages we speak. Gupta and\nBelnap (1993) claim that it reveals important properties of the\ngeneral notion of definition. And there are other lessons, and\nvariations on such lessons, that have been drawn. \nOf more immediate concern, at least for our purposes here, is what the\nLiar shows us about the basic principles governing truth, and about\nlogic. In a skeptical vein, Tarski himself (1935, 1944) seems to have\nthought the Liar shows the ordinary notion of truth to be incoherent,\nand in need of replacement with a more scientifically respectable one.\n(For more on Tarski, see the entries on\n Tarski\n and\n Tarski’s truth definitions.\n For more on Tarski’s aims and purposes, see Heck 1997.) More\ncommon, and perhaps the dominant thread in the solutions to the Liar,\nis the idea that the basic principles governing truth are more subtle\nthan the T-schema reflects. \nThe Liar has also formed the core of arguments against classical\nlogic, as it is some key features of classical logic that allow\ncapture and release to result in absurdity. Notable among these are\nthe arguments for logics that are paracomplete (e.g., Kripke 1975;\nField 2008) and paraconsistent (e.g., Asenjo 1966; Priest 1984, 2006).\nHowever, Ripley (2013b) argues that classical logic can be maintained\nwhile shedding the features in question. \nIn many cases inspired by wider views of the significance of the\nparadox, there have been a number of attempts to one way or another\nresolve the paradox. It is to these proposed solutions that we now\nturn. \nIn this section, we briefly survey some approaches to resolving the\nLiar paradox. We group proposed solutions into families, and try to\nexplain the basic ideas behind them. In many cases, a full exposition\nwould involve a great deal of technical material, that we will not go\ninto here. Interested readers are encouraged to follow the references\nwe provide for each basic idea. \nOne of the leading ideas for how to resolve the Liar paradox is that\nit shows us something about logic, in fact, something far-reaching\nabout logic. The main idea is that the principles of capture and\nrelease are the fundamental conceptual principles governing truth, and\ncannot be modified. Instead, basic logic must be non-classical, to\navoid a logical disaster of the kind we reviewed in\n §2. \nOne important way to motivate non-classical solutions is to appeal to\na form of deflationism about truth. Such views take something\nakin to the T-schema to be the defining characteristic of truth, and\nas such, not open to modification (see, e.g., Horwich 1990). Most\nstrictly, so-called transparency or ‘see-through’ or\n‘pure disquotational’ conceptions of truth (e.g., Field\n1994, 2008; Beall 2005) take the defining property of truth to\nbe intersubstitutability of \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) in all non-opaque contexts. This makes capture and\nrelease, in unrestricted form applying to all sentences of a language,\na requirement for truth (at least where we have \\(A \\vdash A\\) or,\nmore strongly, \\(\\vdash A \\rightarrow\n A)\\).[9]\n See the entry on\n truth\n for further discussion. \nHolding capture and release fixed, and applying it to all sentences\nwithout restriction, yields triviality unless the logic is\nnon-classical. There are two main sub-families of non-classical\n(transparency) truth theories: paracomplete and\nparaconsistent. We sketch the main ideas of each. \nAccording to paracomplete approaches to the Liar, the main lesson of\nthe Liar is that LEM ‘fails’ in some sense. In other\nwords: the Liar teaches us that some sentences (notably, Liars!)\n‘neither hold nor do not hold’ (in some sense), and so are\nneither true nor false. As a result, the logic of truth is\nnon-classical. \nThis idea is perhaps most natural in response to the simple-falsity\nLiar. There, it is tempting to say that there is some status other\nthan truth and falsity, and the Liar sentence \\(L\\) has it. But this\nwill not suffice, for instance, for the simple-untruth Liar. This says\nnothing about falsity. Rather, in some way the basic reasoning\nreviewed in\n §2.3\n must fail, and the culprit, in the paracomplete view, is LEM.\nLiar-instances of LEM ‘fail’ (in some sense) according to\nthe paracomplete approach; such sentences fall into the\n‘gap’ between truth and falsity (to use a common\nmetaphor). \nThere have been many proposals for using such non-classical logics to\naddress the Liar. An early example is van Fraassen (1968, 1970). But\nKripke’s work has been the most influential in recent times, not\nonly to approaches to the Liar based on non-classical logic, but a\nrange of other approaches we will survey in\n §4.2\n as well. Thus, we pause to describe at least a little of\nKripke’s framework. \nLogics where LEM fails are not themselves hard to come by. Among many\nsuch logics are a number of three-valued logics that allow sentences\nto take a third value over and above true and false. Sentences like\nLiar sentences take the third value. One of the most commonly applied\nlogics is the Strong Kleene logic \\(K_3\\). We do not go into the\ndetails of \\(K_3\\) here, but only note the properties of \\(K_3\\) we\nneed. (For more details, see the entry on\n many-valued logic,\n or Priest 2008.) First and foremost,\nwe have: \n\n\\[\\not\\vdash_{K3} A \\vee \\neg A.\\]\n\n LEM fails. In fact, there are no logical truths\n(or valid sentences) according to \\(K_3\\). (We return to this on the\ntopic of a ‘suitable conditional’ below.) \nThe challenge to using \\(K_3\\) to flesh out a paracomplete theory is\nto explain how anything like (even rule-form) capture and release\nhold, and if you follow the deflationist line, how full unrestricted\ncapture and release hold. One way of understanding the important work\nof Kripke (1975) (and related work of Martin and Woodruff 1975) is as\na way of achieving just that. \nKripke begins with a fully classical language \\(\\mathcal{L}_0\\)\ncontaining no truth predicate (or more generally, no semantic terms).\n(Recall, we are assuming a language comes equipped with a valuation\nscheme. For \\(\\mathcal{L}_0\\) it is classical.) He then considers\nextending it to a language \\(\\mathcal{L}^{+}_0\\) which contains a\ntruth predicate \\(\\Tr\\). The predicate \\(\\Tr\\) is taken to apply to\nevery sentence of the expanded language \\(\\mathcal{L}^{+}_0\\),\nincluding those of the original \\(\\mathcal{L}_0\\). Thus, it is a\nself-applicative truth predicate (as the deflationist-inspired picture\nwe mentioned must require), even though we begin with a language\nwithout a truth predicate. \nWe can think of \\(\\mathcal{L}_0\\) as interpreted by a classical model\n\\(\\mathcal{M}_0\\). Kripke shows us how to build an interpretation\n\\(\\mathcal{M}^{+}_0\\) for the expanded language. The main innovation\nis to see the truth predicate as partial. Rather than simply\nhaving an extension, it has an extension (set of things of which it is\ntrue), and an anti-extension (set of things of which it is false). The\nextension and anti-extension are mutually exclusive, but they need not\njointly exhaust the domain of \\(\\mathcal{M}_0\\). Pathological\nsentences like \\(L\\) fall in neither in the extension or the\nanti-extension of \\(\\Tr\\). (Actually, we could have interpreted the\nbase language \\(\\mathcal{L}_0\\) by a partial model as well, but the\nintended application sees partiality as only arising with semantic\npredicates like \\(\\Tr\\).) \nFalling into neither the extension or the anti-extension of \\(\\Tr\\)\nacts like having a third value, and we can interpret\n\\(\\mathcal{L}^{+}_0\\) as acting like a language with a \\(K_3\\)\nvaluation scheme. Treating the language this way, Kripke shows how to\nbuild up a very plausible extension and anti-extension for \\(\\Tr\\),\ntypically written \\(\\mathcal{E}\\) and \\(\\mathcal{A}\\). The important\nproperty of the new extended model \\(\\langle \\mathcal{M}_0,\\langle\n\\mathcal{E},\\mathcal{A}\\rangle \\rangle\\) is that the truth value of\nany sentence \\(A\\) and \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) are\nexactly the same. \\(A\\) is true, false, or neither, just in case\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) is. Furthermore, interpreting\nthe expanded language \\(\\mathcal{L}^{+}_0\\) as a \\(K_3\\) language, we\nhave for \\(K_3\\) consequence \\(A \\dashv \\vdash \\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\), just as we desired. \nKripke shows how to build up \\(\\mathcal{E}\\) and \\(\\mathcal{A}\\) by an\ninductive process. One starts with an ‘approximation’ of\nthe extension and anti-extension of \\(\\Tr\\), and successively improves\nit until the improvement process ceases to be productive (it reaches a\n‘fixed point’). In fact, for the \\(K_3\\)-based solution,\nthe natural thing to do is start with an empty extension and\nanti-extension, and throw in sentences that are true at successive\nstages of the process. \nKripke’s construction can be applied to a number of different\nlogics, including other many-valued logics such as the ‘Weak\nKleene’ logic, and supervaluation logics. See, for instance,\nBurgess 1986 and McGee 1991 for discussion. Kripke-style constructions\nengage a fair bit of mathematical subtlety. For an accessible overview\nof more of the details, see Soames 1999. For a more mathematically\nrich exposition, see McGee 1991. \nLogics like \\(K_3\\) suffer from the lack of a natural or\n‘suitable’ conditional (in particular, one that satisfies\n\\(A,A \\rightarrow B \\vdash B\\) and \\(\\vdash A \\rightarrow A)\\). This\nreveals a limitation of the Kripkean approach to the Liar. The\nlanguage \\(\\mathcal{L}^{+}_0\\) cannot report the capture and release\nproperties of truth itself in conditional form (i.e.,\nT-biconditionals): \\(\\Tr\\) is transparent on this picture, and so\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) and \\(A\\) are fully\nintersubstitutable. We don’t have \\(\\neg A \\vee A\\) true for all\nsentences \\(A\\) in this theory, and hence don’t have \\(\\neg\n\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee\\) A for all \\(A\\). But\n\\(\\neg \\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee A\\) is equivalent to\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner) \\rightarrow A\\) in the theory,\nsince (in the theory) \\(\\rightarrow\\) is just the material\nconditional. The Kripke construction at hand, then, thus fails to\nenjoy all T-biconditionals—the natural candidates for expressing\nin the theory the basic capture and release features of truth. \nA recent, major step towards supplementing Kripke’s framework\nwith a suitable conditional is that of Field (2008). Field’s\ntheory is a major advance, but complex enough to be beyond the scope\nof this (very basic) introduction. Readers should consult\nField’s own discussion for a taste of how such a modification\nmight proceed. See Field (2008), and further discussion in Beall\n(2009). \nOne important use for conditionals in logic is in formalizing\nrestricted universal quantification, expressing the\nconnection between \\(A\\) and \\(B\\) in ‘All \\(A\\)s are\n\\(B\\)s’. This has recently played a key role in a number of\ndiscussions of conditionals and paradoxes; see for example Beall et\nal. (2006); Beall (2011); Field (2014); and Ripley (2015). \nAs we mentioned, two important approaches to the Liar paradox that\nfocus on non-classical logics are paracomplete and paraconsistent\napproaches. We sketched a paracomplete option above. We now turn to a\nparaconsistent option. Here, the basic idea is to allow the\ncontradiction (e.g., up to and including step 4 of the derivation in\n §2.3.3),\n but alter the logic by rejecting EFQ—and, hence, avoid the\nabsurdity involved in step 5. \nLike the paracomplete approach we just surveyed, paraconsistent\napproaches to the Liar find easy, natural motivation in transparency\nor otherwise suitably ‘minimalist’ views of truth that\nrequire full intersubstitutability of \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\), and thus cannot restrict capture and release. But\nparaconsistent approaches have also found motivation in a\nDummett-inspired anti-deflationist view, which takes the role of truth\nas the aim of assertion seriously (cf. Dummett 1959). Indeed, Priest\n(2006) argues that this (non-transparency) view of truth motivates\nboth the T-schema and LEM, and that this implies that the Liar\nsentence \\(L\\) is both true and not true. Hence, according to any such\ndialetheic line (according to which at least one sentence is both true\nand not true), the only option is to reject EFQ. \nPriest (1984, 2006) has been one of the leading voices in advocating a\nparaconsistent approach to solving the Liar paradox. He has proposed a\nparaconsistent (and non-paracomplete) logic now known as LP\n(for Logic of Paradox), which retains LEM, but not\n EFQ.[10]\n It has the distinctive feature of allowing true contradictions. This\nis what Priest calls the dialetheic approach to truth. (See the entry\non\n dialetheism\n for a more extensive discussion.) \nFormally, LP can be seen as a three-valued logic; but where\n\\(K_3\\) has truth-value gaps, LP has truth-value\ngluts. Thus, sentences in LP can be both true and\nfalse. However, as we discuss further in\n section 4.1.3,\n just how to describe both gaps and gluts is a delicate matter. For\nnow, we only make the rough observation that in the same sense that\n\\(K_3\\), in virtue of having a third truth value, can be said to have\ngaps, LP correspondingly has gluts. \nLikewise, Kripke-style techniques can be applied to produce an\ninterpretation for a truth predicate, starting with a classical\nlanguage \\(\\mathcal{L}_0\\) not containing a truth predicate. Again, an\nextension and anti-extension are assigned to \\(\\Tr\\). Whereas\nKripke’s original construction had the extension and\nanti-extension disjoint but not exhausting the domain, in this case we\nallow the extension and anti-extension to overlap, but suppose that\nthe two together exhaust the domain of the model. This implements the\nidea of gluts, as the earlier version implemented the idea of gaps.\nRelated techniques to Kripke’s can then be used to build an\nextension and anti-extension for \\(\\Tr\\). The result is again an\ninterpretation where \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) get the same truth value in the model. \nThis construction was not given by Kripke himself, but variants have\nbeen pursued by a number of authors, including Dowden (1984), Leitgeb\n(1999), Priest (1984, 2006), Visser (1984), and Woodruff (1984). \nThough we have identified paracomplete and paraconsistent approaches\nto the Liar as two distinct options, they are not incompatible.\nIndeed, seen as theories of negation (if one wants), one might think\nthat negation is neither exhaustive nor ‘explosive’\n– i.e., satisfies neither LEM nor EFQ. An approach like this is\nthe FDE-based (transparent) truth theory discussed in Dunn\n1969 (see\n Other Internet Resources);\n Gupta and Belnap 1993; Leitgeb 1999; Visser 1984; Woodruff 1984;\nYablo 1993a; and—in effect—Brady 1989. \n(The LP-based theories and \\(K_3\\)-based theories\nare—at least on one (standard-first-order) level—simply\nstrengthened logics of the broader FDE logic. For general\ndiscussion of such frameworks, see, e.g. Priest 2008.) \nWorking in classical logic, Tarski (1935) famously concluded from the\nLiar paradox that a language cannot define its own truth predicate.\nMore generally, he took the lesson of the Liar to be that languages\ncannot express the full range of semantic concepts that describe their\nown workings. One of the main goals of the non-classical approaches to\nthe Liar we have surveyed here is to avoid this conclusion, which many\nhave seen as far too drastic. However, how successful these approaches\nhave been in this regard remains a highly contentious issue. \nIn one sense, both the paracomplete and paraconsistent approaches\nachieve the desired result: they present languages which contain truth\npredicates which apply to sentences of that very language, and have\nthe feature that \\(A\\) and \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\)\nhave the same truth value. In this respect, they both present\nlanguages which contain their own truth predicate. \nIn the paracomplete case, the issue of whether this suffices has been\nmuch debated. The paracomplete view holds that the Liar sentence \\(L\\)\nis neither true nor false, and this is key to retaining consistency.\nBut note, the paracomplete approach we discussed above cannot state\nthis fact, as it cannot come out true that \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). If this were true, then \\(L\\) would be true, and\nthen \\(\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) would be true, bringing\nus back to contradiction. \nOne further point follows from this. As we alluded to above, this\nshows that \\(K_3\\) with a truth predicate will not state the gappy\nstatus of gaps, while LP will state both gap and glut\nproperties. Hence, as we mentioned, the status of gaps and gluts can\nbe complicated.  \nFor the issue of revenge, the key problem is simply that the\nparacomplete approach cannot accurately state its own solution to the\nLiar. Just what to make of this has been debated. It is certainly the\ncase that the set of true sentences in the kind of model Kripke\nconstructs does not include \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). Because of this, some authors, such as McGee\n(1991), T. Parsons (1984), and Soames (1999) have in effect maintained\nthat the Liar sentence failing to be true is a further fact that is\ngoes beyond what the truth predicate needs to express, and so is\nimmaterial to the success of the solution to the Liar. (Actually,\nMcGee’s view has another aspect, which we discuss in\n §4.2.3.) \nBut nonetheless, it does appear that there is an important semantic\nfact about truth in the paracomplete language, closely related to if\nnot identical to a fact about truth per se, which the\nlanguage cannot express. It thus has been argued to fail to achieve a\nfully adequate theory of truth. Kripke himself notes that there are\nsome semantic concepts that cannot be expressed, and the argument has\nbeen pressed by C. Parsons (1974). \nOne way of spelling out what is missing in the paracomplete language\nis to introduce a new notion of determinateness, so that the\nstatus of the Liar is that of not being determinately true. If so,\nthen the Kripke paracomplete language cannot express this concept of\ndeterminateness. Some approaches taking paracomplete ideas on board\nhave sought to supplement the Kripke approach by adding notions of\ndeterminate truth. McGee (1991) does so in a basically classical\nsetting. In a non-classical, paracomplete setting, Field (2008)\nsupplements the basic paracomplete approach with infinitely many\ndifferent ‘determinately’ operators, each defined in terms\nof Field’s ‘suitable conditional’, and each giving a\ndifferent (stronger) notion of ‘truth’. (See also some of\nthe papers in Beall (ed.) 2008.) \nIt is often argued in favor of paraconsistent approaches that they\nhave no trouble ‘characterizing’ the status of Liars:\nthey’re true and false (i.e., true and have true negation).\nLP theories can state this. On the other hand, some such as\nLittmann and Simmons (2004) and S. Shapiro (2004), have thought that\nthere is a dual problem: namely, characterizing ‘normal’\nsentences that are not both true and false. (Some put this alleged\nproblem as the problem of characterizing being just true.)\nWhether this is a problem is something we leave open. (For some\ndiscussion, see Field 2008 and Priest 2006.) \nOne other issue that arises here is that of so-called ‘revenge\nparadoxes’. We can illustrate this with the simple-falsity Liar.\nSuppose one starts with this as the bench-mark Liar paradox, and\nproposes a simple solution that rejects bivalence. In response one is\nshown the simple-untruth Liar, which undercuts the simple solution.\nThis is the pattern of ‘revenge’, where a solution to the\nparadox is rejected on the basis of what might be taken to be a\nslightly modified form of the paradox. Revenge paradoxes for\nparacomplete solutions are often proposed: many points where the\nparacomplete language fails to express some semantic concept offer\nways to construct a revenge problems. Failing to correctly state the\nstatus of the simple-untruth Liar is one example. Another example\ninvolves the notion of determinateness. If we take the determinateness\nroute, and assign the Liar sentence the status of not being\ndeterminately true, then one can construct a revenge problem via a\nsentence which says of itself that it is not determinately true. \nIn a similar vein, it is sometimes argued that paraconsistent\napproaches face a kind of revenge problem, as they have to treat the\nCurry paradox we discussed in\n section 1.4\n separately from the Liar. This is a somewhat difficult technical\nissue, as it depends on the nature of the conditional used to\nformulate the Curry sentence. If that conditional obeys the detachment\nproperty, then it cannot be a glut, as the Liar is in paraconsistent\nsettings. But, whether that is the correct approach to the conditional\nhas been controversial. For more discussion, see Beall (2014, 2015).\n \nWe have seen at least some approaches (e.g., McGee 1991; in some\nrespects, T. Parsons 1984 and Soames 1999) reject the revenge problem,\nwhile some seek to solve it by additional apparatus (e.g., Field\n2008). As we discuss further in\n §4.3,\n contextualist views such as those of Burge (1979), Glanzberg (2004a), and C. Parsons (1974) tend to see revenge not as a separate\nproblem, but as the core Liar phenomenon. For more discussion about\nrevenge and its nature, see the papers in Beall (ed.) (2008) and L.\nShapiro (2006). \nThere is another way to see the paradox as arising from mistaken\nassumptions built into standard logics. This way doesn’t see the\ntrouble as attaching to any particular connective or piece of\nvocabulary, but instead as attaching to some of the structural\nrules that govern the consequence relation in question. These\napproaches, based on so-called substructural logics, fall\ninto three main camps: the noncontractive, the nontransitive, and the\nnonreflexive. (There is a great deal more diversity among\nsubstructural logics than this suggests; in particular, many do not\nfall into any of these camps, or fall into more than one. But these\nare the three that seem to be best-suited for addressing the paradoxes\nwe are concerned with here.) \nThe best-developed substructural approach to paradoxes works by\nattacking the structural rule of contraction. Contraction is\nthe principle that tells us that whenever \\(\\Gamma , A, A \\vdash B\\),\nthen \\(\\Gamma , A \\vdash B\\); that is, it is the principle that tells\nus that we can use premises repeatedly while only counting them once.\nReturning to the argument given in\n section 2,\n we can see that in two cases, an assumption is used twice in reaching\na conclusion: assumption 2a is used twice on the way to 2d, and\nassumption 3a is used twice on the way to 3d. As we presented the\nargument, we did not call attention to this feature, but it is one\nplace a noncontractive approach will focus. \nThe details of the response will depend on how the connectives we have\nwritten as ‘\\(\\vee\\)’ and ‘\\(\\wedge\\)’ are\ninterpreted; in the absence of contraction, each of conjunction and\ndisjunction comes in ‘additive’ and\n‘multiplicative’ flavours, and different proponents of\nnoncontractive views differ in which of these they acknowledge. The\ndifference between additive and multiplicative conjunction is this: an\nadditive conjunction can do the work that either of its\nconjuncts can do, while a multiplicative conjunction can do the work\nthat both of its conjuncts can do together. In the presence\nof contraction, the additive conjunction suffices for the\nmultiplicative: it can be used once to fill the role of the first\nconjunct and again to fill the role of the second conjunct.\nContraction allows these two uses to count as one. Without\ncontraction, though, the additive conjunction need not suffice for the\nmultiplicative. (The multiplicative conjunction suffices for the\nadditive in the presence of a structural rule called weakening, not\notherwise discussed in this article.) The situation for disjunction is\ndual: in the presence of contraction, the additive disjunction\nsuffices for the multiplicative, but it need not otherwise.  \nThe double use pointed to above will loom largest if these connectives\nare read multiplicatively: if 2d really is to do the work of \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) and \\(\\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\) together, then it really does use two\ncopies of 2a, one for each conjunct. On an additive reading of 2d and\n3d, this seeming double use need not be troubling, since 2d itself\nonly needs to do the work of one of its conjuncts. Although this can\nbe either one, whichever conjunct it is, a single use of 2a will\nsuffice. On this additive reading, it is the principles LEM and EFQ\nthat come into question; for example, with \\(\\wedge\\) read additively\nit takes two occurrences of the same contradiction to entail\nan arbitrary sentence (since both conjuncts must be used), while the\nderivation above only yields one. (The situation for 3d and 3a is\nsimilar, in either case.) We do not here consider further details; for\nmore on these choices and noncontractive approaches in general, see\nBeall and Murzi (2013), Grishin (1982), Petersen (2000), Restall\n(1994), Ripley (2015), L. Shapiro (2011a, 2015), and Zardini (2011,\n2013). (Some of these focus on set-theoretic paradoxes rather than\ntruth-theoretic paradoxes, but many of the issues are parallel. See\nalso the entry on\n Russell’s paradox.) \nAnother kind of substructural approach works by attacking various\nstructural rules associated with transitivity of consequence.\nThe best-known of these rules is the rule of cut, which\nallows us to move from \\(\\Gamma \\vdash B\\) and \\(\\Delta , B \\vdash C\\)\nto \\(\\Delta , \\Gamma \\vdash C\\). But it can also be worth considering\nother transitivity-related properties, such as the one called\nsimple transitivity in Weir 2015, proceeding from \\(A \\vdash\nB\\) and \\(B \\vdash C\\) to \\(A \\vdash C\\). (That is, simple\ntransitivity is the special case of cut where \\(\\Delta\\) is empty and\n\\(\\Gamma\\) is a singleton.) \nSome nontransitive approaches can be understood through the same\nthree-valued models as are used for K\\(_3\\) and LP (again, we refer\nyou to the entry on\n many-valued logic\n for details). The difference is in how consequence is defined on\nthese models. In all cases, consequence amounts to the absence of a\ncountermodel, but there are different understandings available of what\na model has to be like to be a countermodel to an argument. Depending\non what understanding of countermodel is adopted, the very same\nthree-valued models can give rise to the paracomplete logic K\\(_3\\),\nthe paraconsistent logic LP, a paracomplete and paraconsistent logic\nsometimes called S\\(_3\\) or FDRM, or—our present topic—two\ndifferent logics that include counterexamples to the rule of cut, and\nhave come to be known as nontransitive.  \nOne kind of approach without cut is developed and defended in Weir\n2005, 2015 (and for naive set theory in Weir 1998, 1999), and is there\ndubbed ‘neoclassical’. On this approach, the third value\nin the models is taken to be neither true nor false, and a\ncountermodel to an argument from \\(\\Gamma\\) to \\(B\\) must either: make\nevery sentence in \\(\\Gamma\\) true and \\(B\\) untrue, or else make \\(B\\)\nfalse and every sentence but one in \\(\\Gamma\\) true, while\nmaking that remaining sentence in \\(\\Gamma\\) unfalse. The motivating\nidea is that valid arguments must preserve truth, and must also\npreserve falsity backwards in a certain sense: if a valid argument has\nall its premises but one true and its conclusion false, then the\nremaining premise must be false. This allows for counterexamples to\ncut, but not to simple transitivity, and allows for consistency to be\nmaintained. The resulting logic is weaker than classical logic. In our\nversion of the liar paradox, the trouble is at LEM: Weir’s\napproach allows for counterexamples to excluded middle. \nA different kind of approach without cut is developed and explored in\nBarrio et al. 2015; Cobreros et al. 2013, 2015; Fjellstad 2016; and\nRipley 2013a, 2015. On this approach, a countermodel to an argument\ncannot assign the third value to any sentence that occurs in the\nargument. That is, a countermodel to an argument from \\(\\Gamma\\) to\n\\(B\\) must do just what a classical countermodel does with regards to\nthe argument. If it assigns the third value to any sentence at all,\nthat sentence cannot be in \\(\\Gamma\\) and it cannot be \\(B\\). This\nallows for counterexamples to cut, and unlike Weir’s approach,\nit also allows for counterexamples to simple transitivity. It also has\nthe curious feature that every argument valid in classical logic\nremains valid. That is, all the counterexamples to cut and simple\ntransitivity involve appeal to capture, release, or some other special\nbehaviour of the truth predicate. Despite this classical flavour,\nthese approaches are also dialetheist; the claim that the liar\nsentence is both true and not true turns out to be a theorem. Such a\nclaim is forced to take the third value, and so there can be no\ncountermodel to any argument involving it. \nPerhaps because of the importance of the rule of cut in proof theory,\nnontransitive approaches are often studied via proof systems rather\nthan via models. The essential use of transitivity properties in\nparadoxical derivations was noted in Tennant 1982; an approach to\nparadoxes that rejects both cut and simple transitivity in a general\nsetting can be found in Hallnäs 1991; Hallnäs and\nSchroeder-Heister 1991; and Schroeder-Heister 2004. There are helpful\nphilosophical remarks on cut in Schroeder-Heister 1992, which also\nnotes some relations between noncontractive and nontransitive\napproaches. A third possibility for a substructural approach to\nparadoxes comes from attacking reflexivity, the principle\nthat every sentence entails itself. There is a close analogy between\nreflexivity and transitivity, as explained in Frankowski 2004; Girard\net al. 1989 (p.28); and Ripley 2012, so this kind of approach ends up\nhaving commonalities with the nontransitive family. Nonreflexive\napproaches to paradoxes have so far been less-explored, but seem to be\na promising direction for further work; see French (2016) and Meadows\n(2014) for more. See also Malinowski (1990) for general work on\nnonreflexive logics. \nWe have now seen a range of options for responding to the Liar paradox\nby reconsidering basic logic. There are also a number of approaches\nthat leave classical logic unchanged, and try to find other ways of\ndefusing the paradox. \nOne hallmark of most of these approaches is a willingness to somehow\nrestrict the range of application of capture and release, to\nblock the paradoxical reasoning. This is antithetical to the kind of\ndeflationist view of truth we discussed in\n §4.1,\n but it is consistent with another view of truth. This other view\ntakes the main feature of truth to be that it reports a non-trivial\nsemantic property of sentences (e.g., corresponding with a fact in the\nworld, or having a value in a model). Many approaches within classical\nlogic embody the idea that a proper understanding of this feature\nallows for restricted forms of capture and release, and this in turn\nallows the paradox to be blocked, without any departure from classical\nlogic. \nWe will consider a number of important approaches to the paradox\nwithin classical logic, most of which embody this idea in some form or\nanother. \nTraditionally, the main avenue for resolving the paradox within\nclassical logic is Tarski’s hierarchy of languages and\nmetalanguages. Tarski concluded from the paradox that no language\ncould contain its own truth predicate (in his terminology, no language\ncan be ‘semantically closed’). \nInstead, Tarski proposed that the truth predicate for a language is to\nbe found only in an expanded metalanguage. For instance, one starts\nwith an interpreted language \\(\\mathcal{L}_0\\) that contains no truth\npredicate. One then ‘steps up’ to an expanded language\n\\(\\mathcal{L}_1\\), which contains a truth predicate, but one that only\napplies to sentences of \\(\\mathcal{L}_0\\). With this restriction, it\nis easy enough to define a truth predicate which completely accurately\nstates the truth values of every sentence in \\(\\mathcal{L}_0\\), obeys\ncapture and release, and yields no paradox. Of course, this process\ndoes not stop. If we want to describe truth in \\(\\mathcal{L}_1\\), we\nneed to step up to \\(\\mathcal{L}_2\\) to get a truth predicate for\n\\(\\mathcal{L}_1\\). And so on. The process goes on indefinitely. At\neach stage, a new classical interpreted language is produced, which\nexpresses truth for languages below it. (For more on the mathematics\nof this sort of hierarchy of languages, see Halbach (1997).) \nWhy is there no Liar paradox in this sort of hierarchy of languages?\nBecause the restriction that no truth predicate can apply to sentences\nof its own language is enforced as a syntactic one. Any sentence \\(L\\)\nequivalent to \\(\\neg \\Tr(\\left\\ulcorner L\\right\\urcorner)\\) is not\nsyntactically well-formed. There is no Liar paradox because there is\nno Liar sentence. See the entries on\n Tarski\n and\n Tarski’s truth definitions\n for more on Tarski’s views of truth. \nTarski’s hierarchical approach has been subject to a number of\ncriticisms. One is that in light of naturally occurring cases of\nself-reference, his ruling Liar sentences syntactically not\nwell-formed seems overly drastic. Though Tarski himself was more\nconcerned to resolve the Liar for formal languages, his solution seems\nimplausible as applied to many naturally occurring uses of\n‘true’. Another important problem was highlighted by\nKripke (1975). As Kripke notes, any syntactically fixed set of levels\nwill make it extremely hard, if not impossible, to place various\nnon-paradoxical claims within the hierarchy. For instance, if Jc says\nthat everything Michael says is true, the claim has to be\nmade from a level of the hierarchy higher than everything Michael\nsays. But if among the things Michael says is that everything Jc\nsays is true, Michael’s claims must be at a higher level\nthan all of Jc’s claims. Thus, some of Michael’s claims\nmust be higher than some of Jc’s, and vice versa. This\nis impossible. It is also difficult to explain what level of the\nhierarchy an utterance winds up at when it can be coherently assigned\na level. What makes it such that it involves truth at one level rather\nthan another? \nAnother challenge Tarski’s hierarchy faces is explaining why we\ncannot just define truth for the whole hierarchy, by quantifying over\nlevels. We would thus have a predicate like ‘true at some\nlevel’. If such predicates are allowed, we are back in paradox,\nso defenders of the Tarskian hierarchy must say they are not possible.\nExplaining why is a problem for all hierarchical views. (See Glanzberg\n(2015) for further discussion.) \nIn light of these sorts of problems, many have concluded that\nTarski’s hierarchy of languages and metalanguages buys a\nsolution to the Liar paradox at the cost of implausible\nrestrictiveness. \nIn light of these sorts of criticisms of Tarski’s theory, a\nnumber of approaches to the Liar have sought to retain classical\nlogic, but have some degree of self-applicability for the truth\npredicate. We know from the reasoning in\n §2.3\n that some restrictions on capture and release will then be required.\nOne goal has been to work out which ones are well-motivated, and how\nto implement them. \nOne way to do this was suggested by Kripke himself. Rather than see\nthe Kripke apparatus we reviewed briefly in\n §4.1.1\n as part of a non-classical logical approach, one can see it as an\nintermediate step towards building a classical interpretation of a\nself-applicative \\(\\Tr\\). \nRecall that the Kripke construction starts with a classical language\n\\(\\mathcal{L}_0\\) with no truth predicate. It passes to an expanded\nlanguage \\(\\mathcal{L}^{+}_0\\), but unlike a Tarskian metalanguage,\nthis language contains a truth predicate \\(\\Tr\\) that applies to all\nof \\(\\mathcal{L}^{+}_0\\). Kripke shows how to build a partial\ninterpretation of \\(\\Tr\\), providing an extension \\(\\mathcal{E}\\) and\nan anti-extension \\(\\mathcal{A}\\). But one can then simply consider\nthe classical model \\(\\langle\n\\mathcal{M}_0,\\mathcal{E}\\rangle\\), using only the extension. This is\nthe ‘closed-off’ construction, as the gap between\nextension and anti-extension is closed off by throwing everything in\nthe gap into the false category of a classical model. \nWe know this interpretation cannot make true all of capture and\nrelease (nor the full intersubstitutability of \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner))\\). But it does make a\nrestricted form true. The following holds in the closed-off model:\n\n\\[ [\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee \\Tr(\\left\\ulcorner \\neg\nA\\right\\urcorner)] \\rightarrow[\\Tr(\\left\\ulcorner A\\right\\urcorner)\n\\leftrightarrow A].\\]\n\n This tells us that capture and release (in the form of the\nT-schema) holds for sentences that are well-behaved, in the sense of\nsatisfying \\(\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee\n\\Tr(\\left\\ulcorner \\neg A\\right\\urcorner)\\). \nWhat happens to the Liar sentence on this approach? As in the\nthree-valued case, the Liar is interpreted as falling within the gap.\n\\(L\\) is neither in \\(\\mathcal{E}\\) nor \\(\\mathcal{A}. L\\) thus falls\noutside of the domain where \\(\\Tr\\) is interpreted as well-behaved.\nBecause the situation is classical, and \\(\\left\\ulcorner\nL\\right\\urcorner\\not\\in \\mathcal{E}\\), we know that \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) is true in the closed-off\nmodel; likewise, so is \\(\\neg \\Tr(\\left\\ulcorner \\neg\nL\\right\\urcorner)\\). \nOn well-behaved sentences, we have the fixed point property that \\(A\\)\nand \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) have the same truth\nvalue, and so the semantics of \\(\\mathcal{L}^{+}_0\\) and the semantics\nit assigns to \\(\\Tr\\) correspond exactly. On pathological sentences\nlike \\(L\\), they do not, and indeed, cannot, on pain of\ntriviality. \nIn a point related to the closed-off construction, it was observed by\nFeferman (1984) that if we are careful about negation, we can dispense\nwith \\(\\mathcal{A}\\) altogether in the Kripke construction. Thus, the\nconstruction can be done without any implicit appeal to many-valued\nlogic. Related ways of thinking about Kripke’s construction are\ndiscussed by McGee (1991). \nIn\n §4.1.3\n we noted that paracomplete approaches to the paradox can be\nvulnerable to ‘revenge paradoxes’ based on some idea of\nindeterminate truth or lacking a truth value. Related issue bear in\nthe classical case. We will discuss a few in turn. \nThe closed-off Kripke construction can help fill in the idea of a\ndeterminately operator discussed in\n §4.1.3.\n Instead of an operator, it allows us to define a predicate\n\\(D(\\left\\ulcorner A\\right\\urcorner)\\) by \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner) \\vee \\Tr(\\left\\ulcorner \\neg A\\right\\urcorner). D\\)\nrepresents ‘determinately’ in the sense of applying to\nsentences that have a truth value according to \\(\\Tr\\), as it were,\n‘determined’ by the model produced by the Kripke\nconstruction. It also, as we observed, applies to all the sentences\nwhich are well-behaved in the sense of obeying the T-schema (or\ncapture and release). \nFormally, the sentences to which \\(D\\) applies in the model generated\nby the Kripke construction are those which fall in \\(\\mathcal{E}\\) or\nhave their negations fall in \\(\\mathcal{E}\\) (equivalently fall in\n\\(\\mathcal{A})\\). Kripke labeled this being\n grounded.[11] \nIt has often been noted that there is also a more informal notion of\ndeterminateness or grounding, to which the formal notion expressed by\n\\(D\\) at least roughly corresponds (cf. Herzberger 1970). The idea is\nthat the determinate sentences are the ones with well-defined semantic\nproperties. Where we have no such well-defined semantic properties, we\nshould not expect the truth predicate to report anything well-behaved,\nnor should we expect properties like capture and release to hold.\nKripke’s construction builds up \\(\\mathcal{E}\\) in stages,\nstarting with sentence with no semantic terms, and adding semantic\ncomplexity at each stage. One reaches \\(\\mathcal{E}\\) at the limit of\nthis process, which allows us to think of \\(\\mathcal{E}\\) as\nindicating the limit of where semantic values are assigned by a\nwell-defined process. Thus, the formal notion of grounding provided by\n\\(D\\) is sometimes suggested to reflect the extent to which sentences\nhave well-defined semantic properties. \nThe notion of grounding has spawned its own literature, with Leitgeb\n(2005) a key impetus. See also Bonnay and van Vugt (2015), Meadows\n(2013), and Schindler (2014). \nAnother view which makes use of a form of determinateness is advocated\nby McGee (1991). McGee’s theory, like many we have surveyed\nhere, is rich in complexity to which we cannot do justice. The theory\nhas many components, including a mathematically sophisticated\napproaches to truth related to the Kripkean ideas we have been\ndiscussing, in a setting which holds to classical logic. \nMcGee relies on two notions: truth and definite truth. Definite truth\nis a form of the idea we glossed as determinateness. But, McGee\ndescribes this idea using some very sophisticated logical techniques.\nWe will mention them briefly, for those familiar with the technical\nbackground. Formally, for McGee, definite truth is identified with\nprovability in a partially interpreted language, using an extension of\nclassical logic which takes in facts about the partial interpretation\nknown as \\(\\mathcal{A}\\)-logic. It is thus different from the\ngrounding notion we just discussed. McGee treats definitely as a\npredicate, on par with the truth predicate, and not as an\noperator on sentences as some developments do. With the right notion\nof definite truth, McGee shows that a partially interpreted language\ncontaining its own truth predicate can meet restricted forms of\ncapture and release put in terms of definite truth. Where \\(\\Def\\) is\nthe definiteness predicate, McGee show how to link truth and definite\ntruth, by showing how to validate: \nIndeed, McGee shows that these conditions can be met within a theory\nof both truth and definite truth, where truth meets appropriate forms\nof capture and release, and also where a formal statement of bivalence\nfor truth comes out definitely true. McGee thus provides a theory\nwhich has strongly self-applicative truth and definite truth, within a\nclassical setting. \nThough truth may satisfy the formal property of bivalence, it is\ncrucial to McGee’s approach that definite truth is an open-ended\nnotion, which may be strengthened (formally, by strengthening a\npartially interpreted language). Thus, definite truth meets weaker\nforms of capture and release than truth itself. (Some instances of\n\\(\\Def(\\left\\ulcorner A\\right\\urcorner) \\rightarrow A\\) fail to be\ndefinitely true, according to McGee.) Furthermore, McGee suggests that\nthis behavior of truth and definite truth makes truth a vague\npredicate. It remains disputed whether McGee’s theory avoids the\nkind of revenge problems that plague other Kripkean approaches. \nWe have now surveyed some important representatives of approaches to\nresolving the Liar within classical logic. There are a number of\nothers, many of them involving some complex mathematics. We will pause\nto mention a few of the more important of these, though given the\nmathematical complexity, we will only gesture towards them. \nThere is an important strand of work in proof theory, which has sought\nto develop axiomatic theories of self-applicative truth in classical\nlogic, including work of Cantini (1996), Feferman (1984, 1991),\nFriedman and Sheard (1987), Halbach (2011), and Horsten (2011). The\nidea is to find ways of expressing rules like capture and release that\nretain consistency. Options include more care about how\nproof-theoretic rules of inference are formulated, and more care about\nformulating restricted rules. The main ideas are discussed in the\nentry on\n axiomatic theories of truth,\n to which we will leave the details. \nKripke’s work on truth was developed in conjunction with some\nimportant ideas about inductive definitions (as we see, for instance,\nin the later parts of Kripke 1975). These connections are explored\nfurther in work of Burgess (1986) and McGee (1991). We also pause to\nmention work of Aczel (1980) combining ideas about inductive\ndefinitions and the lambda calculus. \nAnother family of proposed solutions to the Liar are contextualist\nsolutions. These also make use of classical logic, but base their\nsolutions primarily on some ideas from the philosophy of language.\nThey take the basic lesson of the Liar to be that truth predicates\nshow some form of context dependence, even in otherwise\nnon-context-dependent fragments of a language. They seek to explain\nhow this can be so, and rely on it to resolve the problems faced by\nthe Liar. \nContextualist theories share with a number of approaches we have\nalready seen the idea that there is something indeterminate or\nsemantically not well-formed about our Liar sentence \\(L\\). But,\ncontextualist views give a special role to issues of\n‘revenge’ and lack of expressive power. \nOne way of thinking about why the truth predicate is not well-behaved\non the Liar sentence is that there is not really a well-defined truth\nbearer provided by the Liar sentence. To make this vivid (as discussed\nby C. Parsons (1974)), suppose that\ntruth bearers are propositions expressed by sentences in contexts, and\nthat the Liar sentence fails to express a proposition. This is the\nbeginnings of an account of how the Liar winds up ungrounded or in\nsome sense indeterminate. At least, we should not expect \\(\\Tr\\) to be\nwell-behaved where sentences fail to express propositions. \nBut, it is an unstable proposal. We can reason that if the Liar\nsentence fails to express a proposition, it fails to express a true\nproposition. In the manner of a revenge paradox, if our Liar sentence\nhad originally said ‘this sentence does not express a true\nproposition’, then we would have our Liar sentence back. And, we\nhave shown that this sentence says something true, and so expresses a\ntrue proposition. Thus, from the assumption that the Liar sentence is\nindeterminate or lacks semantic status, we reason that it must have\nproper semantic status, and indeed say something true. We are hence\nback in paradox. \nContextualists do not see this as a new ‘revenge’ paradox,\nbut the basic problem posed by the Liar. First of all, in a setting\nwhere sentences are context dependent, the natural formulation of a\ntruth claim is always in terms of expressing a true proposition, or\nsome related semantically careful application of the truth predicate.\nBut more importantly, to the contextualist, the main issue behind the\nLiar is embodied in the reasoning on display here. It involves two key\nsteps. First, assigning the Liar semantically defective\nstatus—failing to express a proposition or being somehow\nindeterminate. Second, concluding from the first step that the Liar\nmust be true—and so not indeterminate or failing to express a\nproposition—after all. Both steps appear to be the result of\nsound reasoning, and so the conclusions reached at both must be true.\nThe main problem of the Liar, according to a contextualist, is to\nexplain how this can be, and how the second step can be\nnon-paradoxical. (Such reasoning is explored by Glanzberg (2004c) and C. Parsons (1974). For a critical discussion, see Gauker\n(2006).) \nThus, contextualists seek to explain how the Liar sentence can have\nunstable semantic status, switching from defective to non-defective in\nthe course of this sort of inference. They do so by appealing to the\nrole of context in fixing the semantic status of sentences.\nSentences can have different semantic status in different contexts.\nThus, to contextualists, there must be some non-trivial effect of\ncontext involved in the Liar sentence, and more generally, in\npredication of truth. \nOne prominent contextualist approach, advocated by Burge (1979) and\ndeveloped by Koons (1992) and Simmons (1993), starts with the idea\nthat the Tarskian hierarchy itself offers a way to see the truth\npredicate as context dependent. Tarski’s hierarchy postulates a\nhierarchy of truth predicates \\(\\Tr_i\\). What if \\(i\\) is not merely a\nmarker of level in a hierarchy, but a genuine contextual parameter? If\nso, then the Liar sentence is in fact context-dependent: it has the\nform \\(\\neg \\Tr_i (\\left\\ulcorner L\\right\\urcorner)\\), where \\(i\\) is\nset by context. Context then sets the level of the truth\npredicate. \nThis idea can be seen as an improvement on the original Tarskian\napproach in several respects. First, once we have a contextual\nparameter, the need to insist that Liar sentences are never\nwell-formed disappears. Hence, we can think of each \\(\\Tr_i\\) as\nincluding some limited range of applicability to sentences of its own\nlanguage. Using the Kripkean techniques likes the closed-off\nconstruction we reviewed above, predicates like \\(\\Tr_i\\) can be\nconstructed which have as much self-applicability as Kripke’s\nown. (Burge 1979 and the postscript to C. Parsons 1974 consider\nbriefly how Kripkean techniques could be applied in this setting.\nThough he works in a very different setting, ideas of Gaifman (1988,\n1992) can be construed as showing how even more subtle ways of\ninterpreting a context-dependent truth predicate can be\ndeveloped.) \nWith suitable care, other problems for the Tarskian hierarchy can be\navoided as well. Burge proposes that the parameter \\(i\\) in \\(\\Tr_i\\)\nis set by a Gricean pragmatic process. In effect, speakers implicate\nthat \\(i\\) is to be set to a level for which the discourse they are in\ncan be coherently interpreted (with a maximal coherent extension for\n\\(\\Tr_i)\\). Thus, truth does indeed find its own level, and so\nKripke’s objection about how to fix levels for non-paradoxical\nsentences may be countered. \nThis approach gives substance to the idea that the Liar sentence is\ncontext dependent. Any sentence containing \\(\\Tr_i\\) will be context\ndependent, inheriting a contextual parameter along the way. This\noffers a way to make sense of the arguments for the instability of the\nsemantic status of \\(L\\) that motivated contextualism. In an initial\ncontext, we fix some level \\(i\\). This is the level at which \\(L\\) is\ninterpreted. Call this interpretation \\(L_i . L_i\\) says \\(\\neg \\Tr_i\n(\\left\\ulcorner L_{i}\\right\\urcorner)\\). By the usual Liar reasoning,\nwe show that \\(L_i\\) must lack determinate semantic status—or\nfail to express a proposition. As we discussed, we then reason that\n\\(L\\) must come out true. According to the contextualist view at hand,\nthis is the claim that \\(L_i\\) is true according to some other\ncontext, where a wider truth predicate is in play. This amounts to\nbeing true at some higher level of the hierarchy. We can conclude, for\ninstance, that the Liar sentence as it was used at level \\(i\\) is true\naccording to a wider level \\(k \\gt i\\). Hence, \\(\\Tr_k (\\left\\ulcorner\nL_{i}\\right\\urcorner)\\), where \\(k \\gt i\\). \nThis form of contextualism thus maintains that once we see the\ncontext-dependent behavior of \\(\\Tr_i\\), we can make good sense of the\ninstability of \\(L\\). This can be seen as an improvement on both the\nTarskian view, and embodying some of the techniques of classical logic\nwe reviewed in\n §4.2.\n Depending how the Burge view is spelled out technically, it will\neither have full capture and release at each level, or capture and\nrelease with the same restrictions as the closed-off Kripke\nconstruction. \nThe view that posits contextual parameters on the truth predicate does\nface a number of questions. For instance, it is fair to ask why we\nthink the truth predicate really has a contextual parameter,\nespecially if we mean a truth predicate like the one we use in natural\nlanguage. Merely noting that such a parameter would avoid paradox does\nnot show that it is present in natural language. Furthermore, whether\nit is acceptable to see truth as coming in levels at all,\ncontext-based or not, remains disputed. (Not all those who advocate\ncontextual parameters on the truth predicate agree about the role of\nhierarchy. In particular, Simmons (1993) advocates a view he labels\nthe ‘singularity theory’ which he proposes avoids outright\nhierarchical structures.) Finally, the Burgean appeal to Gricean\nmechanisms to set levels of truth has been challenged. (For instance,\nGaifman (1992) asks if the Gricean process does any substantial work\nin Burge’s account.) \nContextualist approaches come in many varieties, each of which makes\nuse of slightly different apparatus. With contextualist theories the\nchoice often turns on issues in philosophy of language as well as\nlogic. We already noted a different way of developing contextualist\nideas from Gaifman (1988, 1992). We will now briefly review a few more\nalternatives. \nAnother contextualist approach, stemming from work of C. Parsons\n(1974), seeks to build up the\ncontext dependence of the Liar sentence, and ultimately the context\ndependence of the truth predicate, from more basic components. The key\nis to see the context dependence of the Liar sentence as derived from\nthe context dependence of quantifier domains. \nQuantification enters the picture when we think about how to account\nfor predication of truth when sentences display context dependence. In\nsuch an environment, it does not make good sense to predicate truth of\nsentences directly. Not all sentences will have the right kind of\ndeterminate semantic properties to be truth bearers; or, as we have\nbeen putting it, not all sentences will express propositions. But\nthen, to say that a sentence \\(S\\) is true in context \\(c\\) is to say\nthat there is a proposition \\(p\\) expressed by \\(S\\) in\n\\(c\\), and that proposition \\(p\\) is true. \nThe current contextualist proposal starts with the observation that\nquantifiers in natural language typically have context-dependent\ndomains of quantification. When we say ‘Everyone is here’,\nwe do not mean everyone in the world, but everyone in some\ncontextually provided subdomain. Context dependence enters the Liar,\naccording to this contextualist view, in the contextual effects on the\ndomain of the propositional quantifier \\(\\exists p\\). \nIn particular, this domain must expand in the course of the\nreasoning about the semantic status of the Liar. In the initial\ncontext, \\(\\exists p\\) must range over a small enough domain that\nthere is no proposition for \\(L\\) to express. In the subsequent\ncontext, the domain expands to allow \\(L\\) to express some true\nproposition. Proposals for how this expansion happens, and how to\nmodel the truth predicate and the relation of expressing a proposition\nin the presence of the Liar, have been explored by Glanzberg (2001,\n2004a), building on work of C. Parsons (1974). Defenders of this\napproach argue that it does better in locating the locus of context\ndependence than the parameters on truth predicates view. \nAnother variant on the contextualist strategy for resolving the Liar,\ndeveloped by Barwise and Etchemendy (1987) and Groeneveld (1994),\nrelies on situation theory rather than quantifier domains to\nprovide the locus of context dependence. Situation theory is a highly\ndeveloped part of philosophy of language, so we shall again give only\nthe roughest sketch of how their view works. \nA situation is a partial state the world might be in: something like\n\\(a\\) being \\(F\\). Situations are classified by what are called\nsituation types. A proposition involves classifying a situation as\nbeing of a situation type. Thus, a proposition \\(\\{s\\); [\\(\\sigma]\\}\\)\ntell us that situation \\(s\\) is of type \\(\\sigma\\). The situation\n\\(s\\) here plays a number of roles, including that of providing a\ncontext. \nWhen it comes to the Liar, Barwise and Etchemendy construe Liar\npropositions as having the form \\(f_s = \\{s\\); [\\(\\Tr,f_s\\); 0]\\(\\}\\),\nrelative to an initial situation \\(s\\). This is a proposition \\(f_s\\)\nwhich says of itself that its falsity is a fact that holds in \\(s\\).\n(In Barwise and Etchemendy’s notation, the 0 indicates falsity,\nso the situation type is that the state of affairs of the proposition\nbeing false holds. The proposition says this is a fact that holds in\n\\(s\\).) There is a sense in which this proposition cannot be\nexpressed. In particular, the state of affairs \\(\\langle \\Tr,f_s\\);\n\\(0\\rangle\\) cannot be in \\(s\\). (Actually, Barwise and Etchemendy say\nthat the proposition is expressible, but give up on what they call the\n\\(F\\)-closure of \\(s\\). But there is a core observation in common\nbetween these two points, and the details do not matter for our\npurposes here.) There is then a distinct situation \\(s' = s \\cup\n\\{\\langle \\Tr,f_s\\); \\(0\\rangle \\}\\), and the proposition \\(\\{s'\\);\n[\\(\\Tr,f_s\\); 0]\\(\\}\\) relative to this new situation—this new\n‘context’—is true. \nThis idea clearly has a lot in common with the restriction on\nquantifier domains view. In particular, both approaches seek to show\nhow the domain of contents expressible in contexts can expand, to\naccount for the instability of the Liar sentence. For discussion of\nrelations between the situation-theoretic and quantifier domain\napproaches, see Glanzberg (2004a). Barwise and Etchemendy discuss\nrelations between their situation-based and a more traditional\napproach in 1987 (Ch. 11). For a detailed match-up between the Barwise\nand Etchemendy framework and a Burgean framework of indexed truth\npredicates, see Koons (1992). \nIt is a key challenge to contextualists to provide a full and\nwell-motivated account of the source and nature of the shift in\ncontext involved in the Liar, though of course, many contextualists\nbelieve they have met this challenge. In favor of the contextualist\napproach is that it takes the revenge phenomenon to be the basic\nproblem, and so is largely immune to the kinds of revenge issues that\naffect other approaches we have considered. But, it may be that there\nis another form of revenge which might be applied. To retain\nconsistency, contextualists must apply restrictions on quantifiers to\nsuch quantifiers as ‘all contexts’. To achieve this, it\nmust presumably be denied that there are any absolutely unrestricted\nquantifiers. Glanzberg (2004b, 2006) argues this is the correct\nconclusion, but it is highly controversial. For a survey of thinking\nabout this, see the papers in Rayo and Uzquiano 2006. \nAnother approach to the Liar, advocated by Gupta (1982), Herzberger\n(1982), Gupta and Belnap (1993), and a number of others, is the\nrevision theory of truth. This approach shares some features\nwith the views we surveyed in\n §4.3,\n in that it takes classical logic for granted. We also believe it has\nan affinity with the views discussed in\n §4.4,\n as it rethinks some basic aspects of semantics. But it is a\ndistinctive approach. We will sketch some of the fundamentals of this\nview. For a discussion of the foundations of the revision theory, and\nits relations to contextualism, see L. Shapiro (2006). More details,\nand more references, may be found in the entry on\n the revision theory of truth. \nThe revision theory of truth starts with the idea that we may take the\nT-schema at face value. Indeed, Gupta and Belnap (1993) take up a\nsuggestion from Tarski (1944), that the instances of the T-schema can\nbe seen as partial definitions of truth; presumably with all the\ninstances together, for the right language or family of languages\nconstituting a complete definition. At the same time, the revision\ntheory holds fast to classical logic. Thus, we already know, we have\nthe Liar paradox for any language with enough expressive resources to\nproduce Liar sentences. \nIn response, the revision theory proposes a different way of\napproaching the semantic properties of the truth predicate. In keeping\nwith our practices here, we may begin with a classical model\n\\(\\mathcal{M}_0\\) for a language \\(\\mathcal{L}_0\\) without a truth\npredicate, and consider what happens when we add a truth predicate\n\\(\\Tr\\) to form the extended language \\(\\mathcal{L}^{+}_0\\). This\nlanguage has a full self-applicative truth predicate, and so can\ngenerate the Liar sentence \\(L\\). \nTo build a classical model for \\(\\mathcal{L}^{+}_0\\), we need an\nextension for \\(\\Tr\\). Let us pick a set: call it \\(H\\) for a\nhypothesis about what the extension of \\(\\Tr\\) might be.\n\\(H\\) may be \\(\\varnothing\\), it may be the entire domain of\n\\(\\mathcal{M}_0\\), or it may be anything else. It need not be a\nparticularly good approximation of the semantic properties of\n\\(\\Tr\\). \nEven if it is not, \\(\\langle \\mathcal{M}_0,H\\rangle\\) still provides a\nclassical model, in which we can interpret \\(\\mathcal{L}^{+}_0\\). With\nthat, we can in effect apply the T-schema, relative to our hypothesis\n\\(H\\), and see what we get. More precisely, we can let \\(\\tau(H) =\n\\{\\left\\ulcorner A\\right\\urcorner | A\\) is true in \\(\\langle\n\\mathcal{M}_0,H\\rangle \\}. \\tau(H)\\) is generally a better hypothesis\nabout what is true in our language than \\(H\\) might have been. At\nleast, clearly, if \\(H\\) made foolish guesses about the truth of\nsentence of the truth-free fragment \\(\\mathcal{L}_0\\), they are\ncorrected in \\(\\tau(H)\\), which contains everything from\n\\(\\mathcal{L}_0\\) true in \\(\\mathcal{M}_0\\). Thus, \\(\\langle\n\\mathcal{M}_0,\\tau(H)\\rangle\\) is generally a better model of\n\\(\\mathcal{L}^{+}_0\\) then \\(\\langle \\mathcal{M}_0,H\\rangle\\). \nBetter in many respects. But when it comes to paradoxical sentences\nlike \\(L\\), we see something different. As a starting hypothesis, let\nus consider \\(H = \\varnothing\\). Consider what happens to the truth of\n\\(L\\) as we apply \\(\\tau\\): \nThe Liar sentence never stabilizes under this process. We reach an\nalternation of truth values which will go on for ever. This shows,\naccording the revision theory, that truth is a circular concept. As\nsuch, it does not have an extension in the ordinary sense. Rather, it\nhas a rule for revising extensions, which never stabilizes. \nIn the terminology of the revision theory, \\(\\tau\\) is a revision\nrule. It takes us from one hypothesis about the interpretation of\n\\(\\Tr\\) to another. Sequences of values we generate by such revision\nrules, starting with a given initial hypothesis, are revision\nsequences. We leave to a more full presentation the important\nissue of the right way to define transfinite revision\nsequences. (See the entry on\n revision theories of truth.) \nThe characteristic property of paradoxical sentences like the Liar\nsentence is that they are unstable in revision sequences: there is no\npoint in the sequence at which they reach a stable truth value. This\nclassifies sentences as stably true, stably false, and unstable. The\nrevision theory develops notions of consequence based on these, and\nrelated notions. See the entry on\n revision theories of truth\n for further exposition of this rich theory. \nIn\n §2.3.3\n we saw that the Liar paradox, in the presence of unrestricted capture\nand release and classical logic, leads to contradiction. So long as we\nhave EFQ (as classical logic does), this results in triviality. Most\nof the proposed solutions we have considered (with the exception of\nthe revision theory) try to avoid this result somehow, either by\nrestricting capture and release or departing from classical logic. But\nthere is another idea that has occasionally been argued, that the Liar\nparadox simply shows that the kinds of languages we speak, which\ncontain their own truth predicates, are inconsistent. \nThis is not an easy view to formulate. Though Tarski himself seemed to\nsuggest something along these lines (for natural languages,\nspecifically), it was argued by Herzberger (1967) that it is\nimpossible to have an inconsistent language. \nIn contrast, Eklund (2002) takes seriously the idea that our semantic\nintuitions, expressed, for instance, by unrestricted capture and\nrelease, really are inconsistent. Eklund grants that this does not\nmake sense if these intuitions have their source simply in our grasp\nof the truth conditions of sentences. But he suggests an alternative\npicture of semantic competence which does make sense of it (closely\nrelated to conceptual role views of meaning). He suggests that we\nthink of semantic competence in terms of a range of principles\nspeakers are disposed to accept in virtue of knowing a language. Those\nprinciples may be inconsistent. But even so, they determine semantic\nvalues. Semantic values will be whatever comes closest to satisfying\nthe principles—whatever makes them maximally correct—even\nif nothing can satisfy all of them due to an underlying\ninconsistency. \nEklund thus supports an idea suggested by Chihara (1979).\nChihara’s main aim is to provide what he calls a\ndiagnosis of the paradox, which should explain why the\nparadox arises and why it appears compelling. But along the way, he\nsuggests that the source of the paradox is our acceptance of the\nT-schema (by convention, he suggests), in spite of its\ninconsistency. \nA related, though distinct, view is defended by Patterson (2007,\n2009). Patterson argues that competence with a language puts one in a\ncognitive state relating to an inconsistent theory—one including\nthe unrestricted T-schema and governed by classical logic. He goes on\nto explore how such a cognitive state could allow us to successfully\ncommunicate, in spite of relating us to a false theory. \nA different sort of inconsistency theory is advocated by Scharp\n(2013). Scharp argues that truth is an inconsistent concept, like the\npre-relativistic concept of mass. As such, it is unsuitable for\ncareful theorizing. What we need to do, according to Scharp, is\nreplace the inconsistent concept of truth with a family of consistent\nconcepts that work better. Scharp develops just such a family of\nconcepts, and offers a theory of them. \nThere is much more to say about the Liar paradox than we have covered\nhere: there are more approaches to the Liar variants we have\nmentioned, and more related paradoxes like those of denotation,\nproperties, etc. There are also more important technical results, and\nmore important philosophical implications and applications. Our goal\nhere has been to be more suggestive than exhaustive, and we hope to\nhave given the reader an indication of what the Liar paradox is, and\nwhat its consequences might be.","contact.mail":"m-glanzberg@northwestern.edu","contact.domain":"northwestern.edu"},{"date.published":"2011-01-20","date.changed":"2016-12-12","url":"https://plato.stanford.edu/entries/liar-paradox/","author1":"Jc Beall","author1.info":"http://entailments.net","author2.info":"http://www.philosophy.northwestern.edu/people/faculty/glanzberg.html","entry":"liar-paradox","body.text":"\n\n\nThe first sentence in this essay is a lie. There is something odd\nabout saying so, as has been known since ancient times. To see why,\nremember that all lies are untrue. Is the first sentence true? If it\nis, then it is a lie, and so it is not true. Conversely, suppose that\nit is not true. We (viz., the authors) have said it, and normally\nthings are said with the intention of being believed. Saying something\nthat way when it is untrue is a lie. But then, given what the sentence\nsays, it is true after all!\n\n\nThat there is some sort of puzzle to be found with sentences like the\nfirst one of this essay has been noted frequently throughout the\nhistory of philosophy. It was discussed in classical times, notably by\nthe Megarians, but it was also mentioned by Aristotle and by Cicero.\nAs one of the insolubilia, it was the subject of extensive\ninvestigation by medieval logicians such as Buridan. More recently,\nwork on this problem has been an integral part of the development of\nmodern mathematical logic, and it has become a subject of extensive\nresearch in its own right. The paradox is sometimes called the\n‘Epimenides paradox’ as the tradition attributes a\nsentence like the first one in this essay to Epimenides of Crete, who\nis reputed to have said that all Cretans are always liars. That some\nCretan has said so winds up in no less a source than New\n Testament![1]\n \n\nLying is a complicated matter, but what’s puzzling about\nsentences like the first one of this essay isn’t essentially\ntied to intentions, social norms, or anything like that. Rather, it\nseems to have something to do with truth, or at least, some semantic\nnotion related to truth. The puzzle is usually named ‘the Liar\nparadox’, though this really names a family of paradoxes that\nare associated with our type of puzzling sentence. The family is aptly\nnamed one of paradoxes, as they seem to lead to incoherent\nconclusions, such as: “everything is true”. Indeed, the\nLiar seems to allow us to reach such conclusions on the basis of\nlogic, plus some very obvious principles that have sometimes been\ncounted as principles of logic. Thus, we have the rather surprising\nsituation of something near or like logic alone leading us to\nincoherence. This is perhaps the most virulent strain of paradox, and\ndealing with it has been an important task in logic for about as long\nas there has been logic.\n\n\nIn this essay, we will review the important members of the family of\nLiar paradoxes, and some of the important ideas about how these\nparadoxes might be resolved. The past few thousand years have yielded\na great number of proposals, and we will not be able to examine all of\nthem; instead, we will focus on a few that have, in recent\ndiscussions, proved to be important.\n\nConsider a sentence named ‘FLiar’, which says of itself\n(i.e., says of FLiar) that it is false. \nThis seems to lead to contradiction as follows. If the sentence\n‘FLiar is false’ is true, then given what it says, FLiar\nis false. But FLiar just is the sentence ‘FLiar is false’,\nso we can conclude that if FLiar is true, then FLiar is false.\nConversely, if FLiar is false, then the sentence ‘FLiar is\nfalse’ is true. Again, FLiar just is the sentence ‘FLiar\nis false’, so we can conclude that if FLiar is false, then FLiar\nis true. We have thus shown that FLiar is false if and only if FLiar\nis true. But, now, if every sentence is true or false, FLiar itself is\neither true or false, in which case—given our reasoning\nabove—it is both true and false. This is a contradiction.\nContradictions, according to many logical theories (e.g., classical\nlogic, intuitionistic logic, and much more) imply\nabsurdity—triviality, that is, that every sentence is true. \nAn obvious response is to deny that every sentence is true or false,\ni.e., to deny the principle of bivalence. As we will discuss in\n §4,\n some descendants of this idea remain important in current work on the\nLiar. Even so, a simple variant Liar sentence shows that this\nimmediate answer is not all there is to the story. \nRather than work with falsehood, we can construct a Liar sentence with\nthe complex predicate ‘not\n true’.[2]\n Consider a sentence named ‘ULiar’ (for\n‘un-true’), which says of itself that it is not true. \nThe argument towards contradiction is similar to the FLiar case. In\nshort: if ULiar is true, then it is not true; and if it is not true,\nthen it is true. But, now, if every sentence is true or not true,\nULiar itself is true or not true, in which case it is both true and\nnot true. This is a contradiction. According to many logical theories,\na contradiction implies absurdity—triviality. \nThe two forms of the Liar paradox we have so far reviewed rely on some\nexplicit self-reference—sentences talking directly about\nthemselves. Such explicit self-reference can be avoided, as is shown\nby our next family of Liar paradoxes. \nConsider a very concise (viz., one-sentence-each) dialog between\nsiblings Max and Agnes. \nWhat Max said is true if and only if what Agnes said is true. But what\nAgnes said (viz., ‘Max’s claim is not true’) is true\nif and only if what Max said is not true. Hence, what Max said is true\nif and only if what Max said is not true. But, now, if what Max said\nis true or not true, then it is both true and not true. And this, as\nin the FLiar and ULiar cases, is a contradiction, implying, according\nto many logical theories, absurdity. \nLiar paradoxes can also be formed using more complex sentence\nstructure, rather than complex modes of reference. One that has been\nimportant involves Boolean compounds. \nBoolean compounds can enter into Liar sentences in many ways. One\nrelatively simple one is as follows. Consider the following sentence\nnamed ‘DLiar’ (for ‘Disjunctive’). \nFirst, observe that if DLiar is not true, then it must be true. If\nDLiar is not true, then by similar reasoning to what we saw above, we\nhave that the left disjunct of DLiar is true. But a disjunction is\ntrue if one of its disjuncts is, so DLiar is true. Thus, if DLiar is\nnot true, it is true and not true, and we have a contradiction. By\nreductio, then, it must be true; so one of its disjuncts must be true.\nIf it’s the first one, we have a contradiction, so it must be\nthe second one; we can conclude that \\(1 = 0\\). We have thus proved\nthat \\(1 = 0\\). Moreover, the sentence ‘\\(1 = 0\\)’ played\nno real role in the above reasoning. We could replace it with any\nother sentence to get a proof of that sentence.  \nWe pause to mention DLiar as it is connected with another important\nparadox: Curry’s paradox, which involves conditionals that say\nof themselves only that if they (the conditional itself) are true, so\ntoo is some absurdity (e.g., ‘if this sentence is true, then \\(1\n= 0\\)’ or ‘if this sentence is true, everything is\ntrue’ or so on). At least in languages where the conditional is\nthe material conditional, and so \\(A \\supset B\\) is equivalent to\n\\(\\neg A \\vee B\\), DLiar is equivalent to the Curry sentence\n‘DLiar is true \\(\\supset 1 = 0\\)’. Though this may set up\nsome relations between the Liar and Curry’s paradox, we pause to\nnote an important difference. For the Curry paradox is most important\nwhere the conditional is more than the material conditional (or some\nmodalized variant of it). In such settings, the Curry paradox does not\nwear negation on its sleeve, as DLiar does. For more information,\nconsult the entry on\n Curry’s paradox. \nThe question of whether the Liar paradox really requires some sort of\ncircularity has been the subject of extensive debate. Liar cycles\n(e.g., the Max–Agnes dialog) show that explicit self-reference\nis not necessary, but it is clear that such cycles themselves involve\ncircular reference. Yablo (1993b) has argued that a more complicated\nkind of multi-sentence paradox produces a Liar without\ncircularity. \nYablo’s paradox relies on an infinite sequence of claims\n\\(A_0\\), \\(A_1\\), \\(A_2\\), …, where each \\(A_i\\) says that all\nof the ‘greater’ \\(A_k\\) (i.e., the \\(A_k\\) such that \\(k\n\\gt i)\\) are untrue. (In other words, each claim says of the rest that\nthey’re all untrue.) Since we have an infinite sequence, this\nversion of the Liar paradox appears to avoid the sort of circularity\napparent in the previous examples; however, contradiction still seems\nto emerge. If \\(A_0\\) is true, then all of the ‘greater’\n\\(A_k\\) are untrue, and a fortiori \\(A_1\\) is untrue. But,\nthen, there is at least one true \\(A_k\\) greater than \\(A_1\\) (i.e.,\nsome \\(A_k\\) such that \\(k \\gt 1)\\), which contradicts \\(A_0\\).\nConversely, if \\(A_0\\) is untrue, then there’s at least one true\n\\(A_k\\) greater than \\(A_0\\). Letting \\(A_m\\) be such a one (i.e., a\ntruth greater than \\(A_0)\\), we have it that \\(A_{m+1}\\) is untrue, in\nwhich case there’s some truth greater than \\(A_{m+1}\\). But this\ncontradicts \\(A_m\\). What we have, then, is that if \\(A_0\\) (the first\nclaim in the infinite sequence) is true or untrue, then it is both.\nAnd this, as in the other cases, is a contradiction. \nWhether Yablo’s paradox really avoids self-reference is\nmuch-debated. See, for instance, Barrio (2012), Beall (2001), Cook\n(2006, 2014), Ojea (2012), Picollo (2012), Priest (1997), Sorensen\n(1998), and Teijeiro (2012). \nWe have already seen a kind of characteristic reasoning that goes with\nthe Liar. We have also seen some common structure across all our\nexample Liar paradoxes, such as the presence of truth predicates, and\nsomething like negation. We pause here to discuss these ingredients of\nthe paradox, focusing on the basic Liars. Just what creates\nthe Liar paradox, and just which of the puzzles we just surveyed is\n‘basic’, is a contentious matter; different approaches to\nsolving the Liar view these matters differently. Hence, our goal is\nmerely to illuminate some common themes across different Liars, not to\noffer a full diagnosis of the source of the paradox. \nWe highlight three aspects of the Liar: the role of truth predicates,\nthe kinds of principles for reasoning about truth that are needed, and\nthe way that a paradox can be derived given these resources. \nThe first ingredient in building a Liar is a truth predicate, which we\nwrite here as \\(\\Tr\\). We follow the usual custom in logic of treating\nthis as a predicate of sentences. However, especially as we come to\nconsider some ways of resolving the Liar, it should be remembered that\nthis treatment can be seen as more for convenience in exposition than\na serious commitment to what truth bearers are. \nWe assume that we have, along with the truth predicate, appropriate\nnames of sentences. For a given sentence \\(A\\), suppose that\n\\(\\left\\ulcorner A\\right\\urcorner\\) is a name for it. A predication of\ntruth to \\(A\\) then looks like \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\). \nWe shall say that a predicate \\(\\Tr(x)\\) is a truth predicate for\nlanguage \\(\\mathcal{L}\\) only if \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) is well-formed for every sentence \\(A\\) of\n\\(\\mathcal{L}\\). We typically expect \\(\\Tr\\) to obey some principles\ngoverning its behavior on sentences of a given language. It is to\nthose we now\n turn.[3] \nThe tradition, going back to Tarski (1935), is that the behavior of\nthe truth predicate \\(\\Tr\\) is described by the following\nbiconditional. \nIndeed, Tarski took the biconditional here to be the material\nbiconditional of classical logic. This is usually called the\nT-schema. For more on the T-schema, and Tarski’s views\nof truth, see the entries on\n Alfred Tarski\n and\n Tarski’s truth definitions. \nThe Liar paradox has been a locus of thinking about non-classical\nlogics (as we already saw a taste of, for instance, in the idea that\nbivalence might be rejected as part of a solution to the Liar). Thus,\nwe should stop to consider what principles should govern the truth\npredicate \\(\\Tr\\) if classical logic is not to hold. \nThe leading idea for what might replace the T-schema points to two\nsorts of ‘rules’ (e.g., two sorts of ‘inference\nrules’ in some sense) or principles that are characteristic of\nthe truth predicate. If you have a sentence \\(A\\), you can infer\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\), that is, you can\n‘capture’ \\(A\\) with the truth predicate. Conversely, if\nyou have \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\), you can infer\n\\(A\\), that is, you can ‘release’ \\(A\\) from the truth\npredicate. In some logics, capture and release wind up being\nequivalent to the T-schema, but it is often helpful to break these\nup: \nImplies here is a logical notion, though just which one, and\nwhat the options are, depends on what background logic is assumed. For\nour discussion, we think of it in so-called rule form: that the\nargument from \\(A\\) to \\(B\\) is valid, which we record (as above) via\nthe turnstile. In some logical settings (e.g., classical logic, in\nwhich a certain so-called deduction theorem holds), this is equivalent\nto the provability of a conditional, but in some settings, it is not.\nEither way, capture and release jointly make \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) logically equivalent in the\nsense of being inter-derivable. In strong forms, capture and release\ncan lead to the full intersubstitutability of \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) in extensional contexts. As\nwe discuss more in\n section 4.1,\n this is important to some views of the nature of truth. Thus,\n\\(\\vdash\\) is being used here as a schematic placeholder for a range\nof different logical notions, each of which will provide some notion\nof valid inference in some logical theory. \n(There are a number of logical subtleties here that we will not\npursue, especially about how to formulate rules, and which rules are\nconsistent. Different formulations of rules vary significantly in\nlogical strength as\n well.[4]\n See the entry on\n axiomatic theories of truth\n for more on how consistent forms of capture and release can be\nformulated in classical logic. In the terminology of Friedman and\nSheard (1987), the rule forms of capture and release are called\n‘T-Intro’ and ‘T-Elim’, and the conditional\nforms ‘T-In’ and ‘T-Out’. We prefer the\nbroader terminology, since it highlights a general form of behavior\ncommon to a great variety of predicates and operators, e.g.,\nknowledge releases but doesn’t capture;\npossibility captures but doesn’t release; and so on;\nand truth is special in doing both.) \nThe Liar paradox begins with a language containing a truth predicate,\nwhich obeys some form of capture and release. We now explore more\ncarefully how a paradox results from these assumptions. \nPutting aside Yablo-type paradoxes, the Liar relies on some form of\nself-reference, either direct, as in in the simple Liars above, or\nindirect, as in Liar cycles. Most natural languages have little\ntrouble generating self-reference. The first sentence of this essay is\none example. Self-reference can be accidental, as in the case where\nsomeone writes ‘The only sentence on the blackboard in room 101\nis not true’, by chance writing this in room 101 itself (as C.\nParsons (1974) noted). \nIn formal languages, self-reference is also very easy to come by. Any\nlanguage capable of expressing some basic syntax can generate\nself-referential sentences via so-called diagonalization (or more\nproperly, any language together with an appropriate theory of syntax\nor\n arithmetic).[5]\n A language containing a truth predicate and this basic syntax will\nthus have a sentence \\(L\\) such that \\(L\\) implies \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) and vice versa: \nThis is a ‘fixed point’ of (the compound predicate)\n\\(\\neg\\Tr\\), and is, in effect, our simple-untruth Liar. \n(Technically, it is simplest to put the fixed point property in terms\nof implications, as we have done here. But intuitively, the idea is\nthat somehow \\(L\\) ‘just is’ \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). This can be made more precise, if we think of\nthe Liar sentence \\(L\\) arising from a name \\(c\\) that\ndenotes the sentence \\(\\neg \\Tr(c)\\). In this way, we can think of the\nexistence of the Liar as being reflected in the identity \\(c =\n\\left\\ulcorner \\neg \\Tr(c)\\right\\urcorner\\). For more on the details\nof this approach, see Heck 2012.) \nOther conspicuous ingredients in common Liar paradoxes concern logical\nbehavior of basic connectives or features of implication. A few of the\nrelevant principles are: \n(This is not to suggest that these are the only logical\nfeatures involved in common Liar paradoxes, but they’re arguably\nthe most important of the salient ones.) \nGiven the foregoing ingredients, we can now give a slightly more\nabstract form of the paradox. (Our hope is to use this abstract form\nto highlight different responses to the paradox.) We suppose that we\nhave a language \\(\\mathcal{L}\\) with a truth predicate \\(\\Tr\\), and\nthat \\(\\mathcal{L}\\) allows enough syntax to construct a sentence\n\\(L\\) such that \\(L \\dashv \\vdash \\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). We also suppose that the logic of \\(\\mathcal{L}\\)\nenjoys LEM and EFQ and satisfies DP and adjunction. \nAn argument that our Liar sentence \\(L\\) implies a contradiction runs\nas follows. \nThis version of the Liar is one of many. With a little more\ncomplexity, for instance, either capture or release can be avoided in\nfavor of some other background assumptions. Intuitionistic variants of\nthe Liar are also available, though we shall not explore\nintuitionistic logic\n here.[8] \nWe have so far shown that with the given ingredients our Liar sentence\n\\(L\\) implies a contradiction (thus formalizing the reasoning in\nULiar). From here, it is one short step to all-out absurdity—if\nthe lone contradiction weren’t already absurd enough. We invoke\nEFQ to finish the proof. (Well, we also assume that \\(A \\wedge B\\)\nimplies \\(A\\) and \\(B\\), i.e., that simplification is valid in\n\\(\\mathcal{L}\\); but in fact this assumption is not really\nnecessary.) \n\\(B\\), here, may be any—every—sentence that you like (or\ndon’t like, as the case may be)! EFQ is the principle that every\nsentence follows from a contradiction; it sanctions the step from a\nsingle contradiction to outright triviality of logic. \nIn the face of such absurdity (triviality), we conclude that something\nis wrong in the foregoing Liar reasoning. The question is: what? This,\nin the end, is the question that the Liar paradox raises.  \nWe have now seen that with some elementary assumptions about truth and\nlogic, a logical disaster ensues. What is the wider significance of\nsuch a result? \nFrom time to time, the Liar has been argued to show us something\nfar-reaching about philosophy. For instance, Grim (1991) has argued\nthat it shows the world to be essentially ‘incomplete’ in\nsome sense, and that there can be no omniscient being. McGee (1991)\nand others suggest that the Liar shows the notion of truth to be a\nvague notion. Glanzberg (2001) holds that the Liar shows us something\nimportant about the nature of context dependence in language, while\nEklund (2002) holds that it shows us something important about the\nnature of semantic competence and the languages we speak. Gupta and\nBelnap (1993) claim that it reveals important properties of the\ngeneral notion of definition. And there are other lessons, and\nvariations on such lessons, that have been drawn. \nOf more immediate concern, at least for our purposes here, is what the\nLiar shows us about the basic principles governing truth, and about\nlogic. In a skeptical vein, Tarski himself (1935, 1944) seems to have\nthought the Liar shows the ordinary notion of truth to be incoherent,\nand in need of replacement with a more scientifically respectable one.\n(For more on Tarski, see the entries on\n Tarski\n and\n Tarski’s truth definitions.\n For more on Tarski’s aims and purposes, see Heck 1997.) More\ncommon, and perhaps the dominant thread in the solutions to the Liar,\nis the idea that the basic principles governing truth are more subtle\nthan the T-schema reflects. \nThe Liar has also formed the core of arguments against classical\nlogic, as it is some key features of classical logic that allow\ncapture and release to result in absurdity. Notable among these are\nthe arguments for logics that are paracomplete (e.g., Kripke 1975;\nField 2008) and paraconsistent (e.g., Asenjo 1966; Priest 1984, 2006).\nHowever, Ripley (2013b) argues that classical logic can be maintained\nwhile shedding the features in question. \nIn many cases inspired by wider views of the significance of the\nparadox, there have been a number of attempts to one way or another\nresolve the paradox. It is to these proposed solutions that we now\nturn. \nIn this section, we briefly survey some approaches to resolving the\nLiar paradox. We group proposed solutions into families, and try to\nexplain the basic ideas behind them. In many cases, a full exposition\nwould involve a great deal of technical material, that we will not go\ninto here. Interested readers are encouraged to follow the references\nwe provide for each basic idea. \nOne of the leading ideas for how to resolve the Liar paradox is that\nit shows us something about logic, in fact, something far-reaching\nabout logic. The main idea is that the principles of capture and\nrelease are the fundamental conceptual principles governing truth, and\ncannot be modified. Instead, basic logic must be non-classical, to\navoid a logical disaster of the kind we reviewed in\n §2. \nOne important way to motivate non-classical solutions is to appeal to\na form of deflationism about truth. Such views take something\nakin to the T-schema to be the defining characteristic of truth, and\nas such, not open to modification (see, e.g., Horwich 1990). Most\nstrictly, so-called transparency or ‘see-through’ or\n‘pure disquotational’ conceptions of truth (e.g., Field\n1994, 2008; Beall 2005) take the defining property of truth to\nbe intersubstitutability of \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) in all non-opaque contexts. This makes capture and\nrelease, in unrestricted form applying to all sentences of a language,\na requirement for truth (at least where we have \\(A \\vdash A\\) or,\nmore strongly, \\(\\vdash A \\rightarrow\n A)\\).[9]\n See the entry on\n truth\n for further discussion. \nHolding capture and release fixed, and applying it to all sentences\nwithout restriction, yields triviality unless the logic is\nnon-classical. There are two main sub-families of non-classical\n(transparency) truth theories: paracomplete and\nparaconsistent. We sketch the main ideas of each. \nAccording to paracomplete approaches to the Liar, the main lesson of\nthe Liar is that LEM ‘fails’ in some sense. In other\nwords: the Liar teaches us that some sentences (notably, Liars!)\n‘neither hold nor do not hold’ (in some sense), and so are\nneither true nor false. As a result, the logic of truth is\nnon-classical. \nThis idea is perhaps most natural in response to the simple-falsity\nLiar. There, it is tempting to say that there is some status other\nthan truth and falsity, and the Liar sentence \\(L\\) has it. But this\nwill not suffice, for instance, for the simple-untruth Liar. This says\nnothing about falsity. Rather, in some way the basic reasoning\nreviewed in\n §2.3\n must fail, and the culprit, in the paracomplete view, is LEM.\nLiar-instances of LEM ‘fail’ (in some sense) according to\nthe paracomplete approach; such sentences fall into the\n‘gap’ between truth and falsity (to use a common\nmetaphor). \nThere have been many proposals for using such non-classical logics to\naddress the Liar. An early example is van Fraassen (1968, 1970). But\nKripke’s work has been the most influential in recent times, not\nonly to approaches to the Liar based on non-classical logic, but a\nrange of other approaches we will survey in\n §4.2\n as well. Thus, we pause to describe at least a little of\nKripke’s framework. \nLogics where LEM fails are not themselves hard to come by. Among many\nsuch logics are a number of three-valued logics that allow sentences\nto take a third value over and above true and false. Sentences like\nLiar sentences take the third value. One of the most commonly applied\nlogics is the Strong Kleene logic \\(K_3\\). We do not go into the\ndetails of \\(K_3\\) here, but only note the properties of \\(K_3\\) we\nneed. (For more details, see the entry on\n many-valued logic,\n or Priest 2008.) First and foremost,\nwe have: \n\n\\[\\not\\vdash_{K3} A \\vee \\neg A.\\]\n\n LEM fails. In fact, there are no logical truths\n(or valid sentences) according to \\(K_3\\). (We return to this on the\ntopic of a ‘suitable conditional’ below.) \nThe challenge to using \\(K_3\\) to flesh out a paracomplete theory is\nto explain how anything like (even rule-form) capture and release\nhold, and if you follow the deflationist line, how full unrestricted\ncapture and release hold. One way of understanding the important work\nof Kripke (1975) (and related work of Martin and Woodruff 1975) is as\na way of achieving just that. \nKripke begins with a fully classical language \\(\\mathcal{L}_0\\)\ncontaining no truth predicate (or more generally, no semantic terms).\n(Recall, we are assuming a language comes equipped with a valuation\nscheme. For \\(\\mathcal{L}_0\\) it is classical.) He then considers\nextending it to a language \\(\\mathcal{L}^{+}_0\\) which contains a\ntruth predicate \\(\\Tr\\). The predicate \\(\\Tr\\) is taken to apply to\nevery sentence of the expanded language \\(\\mathcal{L}^{+}_0\\),\nincluding those of the original \\(\\mathcal{L}_0\\). Thus, it is a\nself-applicative truth predicate (as the deflationist-inspired picture\nwe mentioned must require), even though we begin with a language\nwithout a truth predicate. \nWe can think of \\(\\mathcal{L}_0\\) as interpreted by a classical model\n\\(\\mathcal{M}_0\\). Kripke shows us how to build an interpretation\n\\(\\mathcal{M}^{+}_0\\) for the expanded language. The main innovation\nis to see the truth predicate as partial. Rather than simply\nhaving an extension, it has an extension (set of things of which it is\ntrue), and an anti-extension (set of things of which it is false). The\nextension and anti-extension are mutually exclusive, but they need not\njointly exhaust the domain of \\(\\mathcal{M}_0\\). Pathological\nsentences like \\(L\\) fall in neither in the extension or the\nanti-extension of \\(\\Tr\\). (Actually, we could have interpreted the\nbase language \\(\\mathcal{L}_0\\) by a partial model as well, but the\nintended application sees partiality as only arising with semantic\npredicates like \\(\\Tr\\).) \nFalling into neither the extension or the anti-extension of \\(\\Tr\\)\nacts like having a third value, and we can interpret\n\\(\\mathcal{L}^{+}_0\\) as acting like a language with a \\(K_3\\)\nvaluation scheme. Treating the language this way, Kripke shows how to\nbuild up a very plausible extension and anti-extension for \\(\\Tr\\),\ntypically written \\(\\mathcal{E}\\) and \\(\\mathcal{A}\\). The important\nproperty of the new extended model \\(\\langle \\mathcal{M}_0,\\langle\n\\mathcal{E},\\mathcal{A}\\rangle \\rangle\\) is that the truth value of\nany sentence \\(A\\) and \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) are\nexactly the same. \\(A\\) is true, false, or neither, just in case\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) is. Furthermore, interpreting\nthe expanded language \\(\\mathcal{L}^{+}_0\\) as a \\(K_3\\) language, we\nhave for \\(K_3\\) consequence \\(A \\dashv \\vdash \\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\), just as we desired. \nKripke shows how to build up \\(\\mathcal{E}\\) and \\(\\mathcal{A}\\) by an\ninductive process. One starts with an ‘approximation’ of\nthe extension and anti-extension of \\(\\Tr\\), and successively improves\nit until the improvement process ceases to be productive (it reaches a\n‘fixed point’). In fact, for the \\(K_3\\)-based solution,\nthe natural thing to do is start with an empty extension and\nanti-extension, and throw in sentences that are true at successive\nstages of the process. \nKripke’s construction can be applied to a number of different\nlogics, including other many-valued logics such as the ‘Weak\nKleene’ logic, and supervaluation logics. See, for instance,\nBurgess 1986 and McGee 1991 for discussion. Kripke-style constructions\nengage a fair bit of mathematical subtlety. For an accessible overview\nof more of the details, see Soames 1999. For a more mathematically\nrich exposition, see McGee 1991. \nLogics like \\(K_3\\) suffer from the lack of a natural or\n‘suitable’ conditional (in particular, one that satisfies\n\\(A,A \\rightarrow B \\vdash B\\) and \\(\\vdash A \\rightarrow A)\\). This\nreveals a limitation of the Kripkean approach to the Liar. The\nlanguage \\(\\mathcal{L}^{+}_0\\) cannot report the capture and release\nproperties of truth itself in conditional form (i.e.,\nT-biconditionals): \\(\\Tr\\) is transparent on this picture, and so\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) and \\(A\\) are fully\nintersubstitutable. We don’t have \\(\\neg A \\vee A\\) true for all\nsentences \\(A\\) in this theory, and hence don’t have \\(\\neg\n\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee\\) A for all \\(A\\). But\n\\(\\neg \\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee A\\) is equivalent to\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner) \\rightarrow A\\) in the theory,\nsince (in the theory) \\(\\rightarrow\\) is just the material\nconditional. The Kripke construction at hand, then, thus fails to\nenjoy all T-biconditionals—the natural candidates for expressing\nin the theory the basic capture and release features of truth. \nA recent, major step towards supplementing Kripke’s framework\nwith a suitable conditional is that of Field (2008). Field’s\ntheory is a major advance, but complex enough to be beyond the scope\nof this (very basic) introduction. Readers should consult\nField’s own discussion for a taste of how such a modification\nmight proceed. See Field (2008), and further discussion in Beall\n(2009). \nOne important use for conditionals in logic is in formalizing\nrestricted universal quantification, expressing the\nconnection between \\(A\\) and \\(B\\) in ‘All \\(A\\)s are\n\\(B\\)s’. This has recently played a key role in a number of\ndiscussions of conditionals and paradoxes; see for example Beall et\nal. (2006); Beall (2011); Field (2014); and Ripley (2015). \nAs we mentioned, two important approaches to the Liar paradox that\nfocus on non-classical logics are paracomplete and paraconsistent\napproaches. We sketched a paracomplete option above. We now turn to a\nparaconsistent option. Here, the basic idea is to allow the\ncontradiction (e.g., up to and including step 4 of the derivation in\n §2.3.3),\n but alter the logic by rejecting EFQ—and, hence, avoid the\nabsurdity involved in step 5. \nLike the paracomplete approach we just surveyed, paraconsistent\napproaches to the Liar find easy, natural motivation in transparency\nor otherwise suitably ‘minimalist’ views of truth that\nrequire full intersubstitutability of \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\), and thus cannot restrict capture and release. But\nparaconsistent approaches have also found motivation in a\nDummett-inspired anti-deflationist view, which takes the role of truth\nas the aim of assertion seriously (cf. Dummett 1959). Indeed, Priest\n(2006) argues that this (non-transparency) view of truth motivates\nboth the T-schema and LEM, and that this implies that the Liar\nsentence \\(L\\) is both true and not true. Hence, according to any such\ndialetheic line (according to which at least one sentence is both true\nand not true), the only option is to reject EFQ. \nPriest (1984, 2006) has been one of the leading voices in advocating a\nparaconsistent approach to solving the Liar paradox. He has proposed a\nparaconsistent (and non-paracomplete) logic now known as LP\n(for Logic of Paradox), which retains LEM, but not\n EFQ.[10]\n It has the distinctive feature of allowing true contradictions. This\nis what Priest calls the dialetheic approach to truth. (See the entry\non\n dialetheism\n for a more extensive discussion.) \nFormally, LP can be seen as a three-valued logic; but where\n\\(K_3\\) has truth-value gaps, LP has truth-value\ngluts. Thus, sentences in LP can be both true and\nfalse. However, as we discuss further in\n section 4.1.3,\n just how to describe both gaps and gluts is a delicate matter. For\nnow, we only make the rough observation that in the same sense that\n\\(K_3\\), in virtue of having a third truth value, can be said to have\ngaps, LP correspondingly has gluts. \nLikewise, Kripke-style techniques can be applied to produce an\ninterpretation for a truth predicate, starting with a classical\nlanguage \\(\\mathcal{L}_0\\) not containing a truth predicate. Again, an\nextension and anti-extension are assigned to \\(\\Tr\\). Whereas\nKripke’s original construction had the extension and\nanti-extension disjoint but not exhausting the domain, in this case we\nallow the extension and anti-extension to overlap, but suppose that\nthe two together exhaust the domain of the model. This implements the\nidea of gluts, as the earlier version implemented the idea of gaps.\nRelated techniques to Kripke’s can then be used to build an\nextension and anti-extension for \\(\\Tr\\). The result is again an\ninterpretation where \\(A\\) and \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner)\\) get the same truth value in the model. \nThis construction was not given by Kripke himself, but variants have\nbeen pursued by a number of authors, including Dowden (1984), Leitgeb\n(1999), Priest (1984, 2006), Visser (1984), and Woodruff (1984). \nThough we have identified paracomplete and paraconsistent approaches\nto the Liar as two distinct options, they are not incompatible.\nIndeed, seen as theories of negation (if one wants), one might think\nthat negation is neither exhaustive nor ‘explosive’\n– i.e., satisfies neither LEM nor EFQ. An approach like this is\nthe FDE-based (transparent) truth theory discussed in Dunn\n1969 (see\n Other Internet Resources);\n Gupta and Belnap 1993; Leitgeb 1999; Visser 1984; Woodruff 1984;\nYablo 1993a; and—in effect—Brady 1989. \n(The LP-based theories and \\(K_3\\)-based theories\nare—at least on one (standard-first-order) level—simply\nstrengthened logics of the broader FDE logic. For general\ndiscussion of such frameworks, see, e.g. Priest 2008.) \nWorking in classical logic, Tarski (1935) famously concluded from the\nLiar paradox that a language cannot define its own truth predicate.\nMore generally, he took the lesson of the Liar to be that languages\ncannot express the full range of semantic concepts that describe their\nown workings. One of the main goals of the non-classical approaches to\nthe Liar we have surveyed here is to avoid this conclusion, which many\nhave seen as far too drastic. However, how successful these approaches\nhave been in this regard remains a highly contentious issue. \nIn one sense, both the paracomplete and paraconsistent approaches\nachieve the desired result: they present languages which contain truth\npredicates which apply to sentences of that very language, and have\nthe feature that \\(A\\) and \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\)\nhave the same truth value. In this respect, they both present\nlanguages which contain their own truth predicate. \nIn the paracomplete case, the issue of whether this suffices has been\nmuch debated. The paracomplete view holds that the Liar sentence \\(L\\)\nis neither true nor false, and this is key to retaining consistency.\nBut note, the paracomplete approach we discussed above cannot state\nthis fact, as it cannot come out true that \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). If this were true, then \\(L\\) would be true, and\nthen \\(\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) would be true, bringing\nus back to contradiction. \nOne further point follows from this. As we alluded to above, this\nshows that \\(K_3\\) with a truth predicate will not state the gappy\nstatus of gaps, while LP will state both gap and glut\nproperties. Hence, as we mentioned, the status of gaps and gluts can\nbe complicated.  \nFor the issue of revenge, the key problem is simply that the\nparacomplete approach cannot accurately state its own solution to the\nLiar. Just what to make of this has been debated. It is certainly the\ncase that the set of true sentences in the kind of model Kripke\nconstructs does not include \\(\\neg \\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\). Because of this, some authors, such as McGee\n(1991), T. Parsons (1984), and Soames (1999) have in effect maintained\nthat the Liar sentence failing to be true is a further fact that is\ngoes beyond what the truth predicate needs to express, and so is\nimmaterial to the success of the solution to the Liar. (Actually,\nMcGee’s view has another aspect, which we discuss in\n §4.2.3.) \nBut nonetheless, it does appear that there is an important semantic\nfact about truth in the paracomplete language, closely related to if\nnot identical to a fact about truth per se, which the\nlanguage cannot express. It thus has been argued to fail to achieve a\nfully adequate theory of truth. Kripke himself notes that there are\nsome semantic concepts that cannot be expressed, and the argument has\nbeen pressed by C. Parsons (1974). \nOne way of spelling out what is missing in the paracomplete language\nis to introduce a new notion of determinateness, so that the\nstatus of the Liar is that of not being determinately true. If so,\nthen the Kripke paracomplete language cannot express this concept of\ndeterminateness. Some approaches taking paracomplete ideas on board\nhave sought to supplement the Kripke approach by adding notions of\ndeterminate truth. McGee (1991) does so in a basically classical\nsetting. In a non-classical, paracomplete setting, Field (2008)\nsupplements the basic paracomplete approach with infinitely many\ndifferent ‘determinately’ operators, each defined in terms\nof Field’s ‘suitable conditional’, and each giving a\ndifferent (stronger) notion of ‘truth’. (See also some of\nthe papers in Beall (ed.) 2008.) \nIt is often argued in favor of paraconsistent approaches that they\nhave no trouble ‘characterizing’ the status of Liars:\nthey’re true and false (i.e., true and have true negation).\nLP theories can state this. On the other hand, some such as\nLittmann and Simmons (2004) and S. Shapiro (2004), have thought that\nthere is a dual problem: namely, characterizing ‘normal’\nsentences that are not both true and false. (Some put this alleged\nproblem as the problem of characterizing being just true.)\nWhether this is a problem is something we leave open. (For some\ndiscussion, see Field 2008 and Priest 2006.) \nOne other issue that arises here is that of so-called ‘revenge\nparadoxes’. We can illustrate this with the simple-falsity Liar.\nSuppose one starts with this as the bench-mark Liar paradox, and\nproposes a simple solution that rejects bivalence. In response one is\nshown the simple-untruth Liar, which undercuts the simple solution.\nThis is the pattern of ‘revenge’, where a solution to the\nparadox is rejected on the basis of what might be taken to be a\nslightly modified form of the paradox. Revenge paradoxes for\nparacomplete solutions are often proposed: many points where the\nparacomplete language fails to express some semantic concept offer\nways to construct a revenge problems. Failing to correctly state the\nstatus of the simple-untruth Liar is one example. Another example\ninvolves the notion of determinateness. If we take the determinateness\nroute, and assign the Liar sentence the status of not being\ndeterminately true, then one can construct a revenge problem via a\nsentence which says of itself that it is not determinately true. \nIn a similar vein, it is sometimes argued that paraconsistent\napproaches face a kind of revenge problem, as they have to treat the\nCurry paradox we discussed in\n section 1.4\n separately from the Liar. This is a somewhat difficult technical\nissue, as it depends on the nature of the conditional used to\nformulate the Curry sentence. If that conditional obeys the detachment\nproperty, then it cannot be a glut, as the Liar is in paraconsistent\nsettings. But, whether that is the correct approach to the conditional\nhas been controversial. For more discussion, see Beall (2014, 2015).\n \nWe have seen at least some approaches (e.g., McGee 1991; in some\nrespects, T. Parsons 1984 and Soames 1999) reject the revenge problem,\nwhile some seek to solve it by additional apparatus (e.g., Field\n2008). As we discuss further in\n §4.3,\n contextualist views such as those of Burge (1979), Glanzberg (2004a), and C. Parsons (1974) tend to see revenge not as a separate\nproblem, but as the core Liar phenomenon. For more discussion about\nrevenge and its nature, see the papers in Beall (ed.) (2008) and L.\nShapiro (2006). \nThere is another way to see the paradox as arising from mistaken\nassumptions built into standard logics. This way doesn’t see the\ntrouble as attaching to any particular connective or piece of\nvocabulary, but instead as attaching to some of the structural\nrules that govern the consequence relation in question. These\napproaches, based on so-called substructural logics, fall\ninto three main camps: the noncontractive, the nontransitive, and the\nnonreflexive. (There is a great deal more diversity among\nsubstructural logics than this suggests; in particular, many do not\nfall into any of these camps, or fall into more than one. But these\nare the three that seem to be best-suited for addressing the paradoxes\nwe are concerned with here.) \nThe best-developed substructural approach to paradoxes works by\nattacking the structural rule of contraction. Contraction is\nthe principle that tells us that whenever \\(\\Gamma , A, A \\vdash B\\),\nthen \\(\\Gamma , A \\vdash B\\); that is, it is the principle that tells\nus that we can use premises repeatedly while only counting them once.\nReturning to the argument given in\n section 2,\n we can see that in two cases, an assumption is used twice in reaching\na conclusion: assumption 2a is used twice on the way to 2d, and\nassumption 3a is used twice on the way to 3d. As we presented the\nargument, we did not call attention to this feature, but it is one\nplace a noncontractive approach will focus. \nThe details of the response will depend on how the connectives we have\nwritten as ‘\\(\\vee\\)’ and ‘\\(\\wedge\\)’ are\ninterpreted; in the absence of contraction, each of conjunction and\ndisjunction comes in ‘additive’ and\n‘multiplicative’ flavours, and different proponents of\nnoncontractive views differ in which of these they acknowledge. The\ndifference between additive and multiplicative conjunction is this: an\nadditive conjunction can do the work that either of its\nconjuncts can do, while a multiplicative conjunction can do the work\nthat both of its conjuncts can do together. In the presence\nof contraction, the additive conjunction suffices for the\nmultiplicative: it can be used once to fill the role of the first\nconjunct and again to fill the role of the second conjunct.\nContraction allows these two uses to count as one. Without\ncontraction, though, the additive conjunction need not suffice for the\nmultiplicative. (The multiplicative conjunction suffices for the\nadditive in the presence of a structural rule called weakening, not\notherwise discussed in this article.) The situation for disjunction is\ndual: in the presence of contraction, the additive disjunction\nsuffices for the multiplicative, but it need not otherwise.  \nThe double use pointed to above will loom largest if these connectives\nare read multiplicatively: if 2d really is to do the work of \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) and \\(\\Tr(\\left\\ulcorner\nL\\right\\urcorner)\\) together, then it really does use two\ncopies of 2a, one for each conjunct. On an additive reading of 2d and\n3d, this seeming double use need not be troubling, since 2d itself\nonly needs to do the work of one of its conjuncts. Although this can\nbe either one, whichever conjunct it is, a single use of 2a will\nsuffice. On this additive reading, it is the principles LEM and EFQ\nthat come into question; for example, with \\(\\wedge\\) read additively\nit takes two occurrences of the same contradiction to entail\nan arbitrary sentence (since both conjuncts must be used), while the\nderivation above only yields one. (The situation for 3d and 3a is\nsimilar, in either case.) We do not here consider further details; for\nmore on these choices and noncontractive approaches in general, see\nBeall and Murzi (2013), Grishin (1982), Petersen (2000), Restall\n(1994), Ripley (2015), L. Shapiro (2011a, 2015), and Zardini (2011,\n2013). (Some of these focus on set-theoretic paradoxes rather than\ntruth-theoretic paradoxes, but many of the issues are parallel. See\nalso the entry on\n Russell’s paradox.) \nAnother kind of substructural approach works by attacking various\nstructural rules associated with transitivity of consequence.\nThe best-known of these rules is the rule of cut, which\nallows us to move from \\(\\Gamma \\vdash B\\) and \\(\\Delta , B \\vdash C\\)\nto \\(\\Delta , \\Gamma \\vdash C\\). But it can also be worth considering\nother transitivity-related properties, such as the one called\nsimple transitivity in Weir 2015, proceeding from \\(A \\vdash\nB\\) and \\(B \\vdash C\\) to \\(A \\vdash C\\). (That is, simple\ntransitivity is the special case of cut where \\(\\Delta\\) is empty and\n\\(\\Gamma\\) is a singleton.) \nSome nontransitive approaches can be understood through the same\nthree-valued models as are used for K\\(_3\\) and LP (again, we refer\nyou to the entry on\n many-valued logic\n for details). The difference is in how consequence is defined on\nthese models. In all cases, consequence amounts to the absence of a\ncountermodel, but there are different understandings available of what\na model has to be like to be a countermodel to an argument. Depending\non what understanding of countermodel is adopted, the very same\nthree-valued models can give rise to the paracomplete logic K\\(_3\\),\nthe paraconsistent logic LP, a paracomplete and paraconsistent logic\nsometimes called S\\(_3\\) or FDRM, or—our present topic—two\ndifferent logics that include counterexamples to the rule of cut, and\nhave come to be known as nontransitive.  \nOne kind of approach without cut is developed and defended in Weir\n2005, 2015 (and for naive set theory in Weir 1998, 1999), and is there\ndubbed ‘neoclassical’. On this approach, the third value\nin the models is taken to be neither true nor false, and a\ncountermodel to an argument from \\(\\Gamma\\) to \\(B\\) must either: make\nevery sentence in \\(\\Gamma\\) true and \\(B\\) untrue, or else make \\(B\\)\nfalse and every sentence but one in \\(\\Gamma\\) true, while\nmaking that remaining sentence in \\(\\Gamma\\) unfalse. The motivating\nidea is that valid arguments must preserve truth, and must also\npreserve falsity backwards in a certain sense: if a valid argument has\nall its premises but one true and its conclusion false, then the\nremaining premise must be false. This allows for counterexamples to\ncut, but not to simple transitivity, and allows for consistency to be\nmaintained. The resulting logic is weaker than classical logic. In our\nversion of the liar paradox, the trouble is at LEM: Weir’s\napproach allows for counterexamples to excluded middle. \nA different kind of approach without cut is developed and explored in\nBarrio et al. 2015; Cobreros et al. 2013, 2015; Fjellstad 2016; and\nRipley 2013a, 2015. On this approach, a countermodel to an argument\ncannot assign the third value to any sentence that occurs in the\nargument. That is, a countermodel to an argument from \\(\\Gamma\\) to\n\\(B\\) must do just what a classical countermodel does with regards to\nthe argument. If it assigns the third value to any sentence at all,\nthat sentence cannot be in \\(\\Gamma\\) and it cannot be \\(B\\). This\nallows for counterexamples to cut, and unlike Weir’s approach,\nit also allows for counterexamples to simple transitivity. It also has\nthe curious feature that every argument valid in classical logic\nremains valid. That is, all the counterexamples to cut and simple\ntransitivity involve appeal to capture, release, or some other special\nbehaviour of the truth predicate. Despite this classical flavour,\nthese approaches are also dialetheist; the claim that the liar\nsentence is both true and not true turns out to be a theorem. Such a\nclaim is forced to take the third value, and so there can be no\ncountermodel to any argument involving it. \nPerhaps because of the importance of the rule of cut in proof theory,\nnontransitive approaches are often studied via proof systems rather\nthan via models. The essential use of transitivity properties in\nparadoxical derivations was noted in Tennant 1982; an approach to\nparadoxes that rejects both cut and simple transitivity in a general\nsetting can be found in Hallnäs 1991; Hallnäs and\nSchroeder-Heister 1991; and Schroeder-Heister 2004. There are helpful\nphilosophical remarks on cut in Schroeder-Heister 1992, which also\nnotes some relations between noncontractive and nontransitive\napproaches. A third possibility for a substructural approach to\nparadoxes comes from attacking reflexivity, the principle\nthat every sentence entails itself. There is a close analogy between\nreflexivity and transitivity, as explained in Frankowski 2004; Girard\net al. 1989 (p.28); and Ripley 2012, so this kind of approach ends up\nhaving commonalities with the nontransitive family. Nonreflexive\napproaches to paradoxes have so far been less-explored, but seem to be\na promising direction for further work; see French (2016) and Meadows\n(2014) for more. See also Malinowski (1990) for general work on\nnonreflexive logics. \nWe have now seen a range of options for responding to the Liar paradox\nby reconsidering basic logic. There are also a number of approaches\nthat leave classical logic unchanged, and try to find other ways of\ndefusing the paradox. \nOne hallmark of most of these approaches is a willingness to somehow\nrestrict the range of application of capture and release, to\nblock the paradoxical reasoning. This is antithetical to the kind of\ndeflationist view of truth we discussed in\n §4.1,\n but it is consistent with another view of truth. This other view\ntakes the main feature of truth to be that it reports a non-trivial\nsemantic property of sentences (e.g., corresponding with a fact in the\nworld, or having a value in a model). Many approaches within classical\nlogic embody the idea that a proper understanding of this feature\nallows for restricted forms of capture and release, and this in turn\nallows the paradox to be blocked, without any departure from classical\nlogic. \nWe will consider a number of important approaches to the paradox\nwithin classical logic, most of which embody this idea in some form or\nanother. \nTraditionally, the main avenue for resolving the paradox within\nclassical logic is Tarski’s hierarchy of languages and\nmetalanguages. Tarski concluded from the paradox that no language\ncould contain its own truth predicate (in his terminology, no language\ncan be ‘semantically closed’). \nInstead, Tarski proposed that the truth predicate for a language is to\nbe found only in an expanded metalanguage. For instance, one starts\nwith an interpreted language \\(\\mathcal{L}_0\\) that contains no truth\npredicate. One then ‘steps up’ to an expanded language\n\\(\\mathcal{L}_1\\), which contains a truth predicate, but one that only\napplies to sentences of \\(\\mathcal{L}_0\\). With this restriction, it\nis easy enough to define a truth predicate which completely accurately\nstates the truth values of every sentence in \\(\\mathcal{L}_0\\), obeys\ncapture and release, and yields no paradox. Of course, this process\ndoes not stop. If we want to describe truth in \\(\\mathcal{L}_1\\), we\nneed to step up to \\(\\mathcal{L}_2\\) to get a truth predicate for\n\\(\\mathcal{L}_1\\). And so on. The process goes on indefinitely. At\neach stage, a new classical interpreted language is produced, which\nexpresses truth for languages below it. (For more on the mathematics\nof this sort of hierarchy of languages, see Halbach (1997).) \nWhy is there no Liar paradox in this sort of hierarchy of languages?\nBecause the restriction that no truth predicate can apply to sentences\nof its own language is enforced as a syntactic one. Any sentence \\(L\\)\nequivalent to \\(\\neg \\Tr(\\left\\ulcorner L\\right\\urcorner)\\) is not\nsyntactically well-formed. There is no Liar paradox because there is\nno Liar sentence. See the entries on\n Tarski\n and\n Tarski’s truth definitions\n for more on Tarski’s views of truth. \nTarski’s hierarchical approach has been subject to a number of\ncriticisms. One is that in light of naturally occurring cases of\nself-reference, his ruling Liar sentences syntactically not\nwell-formed seems overly drastic. Though Tarski himself was more\nconcerned to resolve the Liar for formal languages, his solution seems\nimplausible as applied to many naturally occurring uses of\n‘true’. Another important problem was highlighted by\nKripke (1975). As Kripke notes, any syntactically fixed set of levels\nwill make it extremely hard, if not impossible, to place various\nnon-paradoxical claims within the hierarchy. For instance, if Jc says\nthat everything Michael says is true, the claim has to be\nmade from a level of the hierarchy higher than everything Michael\nsays. But if among the things Michael says is that everything Jc\nsays is true, Michael’s claims must be at a higher level\nthan all of Jc’s claims. Thus, some of Michael’s claims\nmust be higher than some of Jc’s, and vice versa. This\nis impossible. It is also difficult to explain what level of the\nhierarchy an utterance winds up at when it can be coherently assigned\na level. What makes it such that it involves truth at one level rather\nthan another? \nAnother challenge Tarski’s hierarchy faces is explaining why we\ncannot just define truth for the whole hierarchy, by quantifying over\nlevels. We would thus have a predicate like ‘true at some\nlevel’. If such predicates are allowed, we are back in paradox,\nso defenders of the Tarskian hierarchy must say they are not possible.\nExplaining why is a problem for all hierarchical views. (See Glanzberg\n(2015) for further discussion.) \nIn light of these sorts of problems, many have concluded that\nTarski’s hierarchy of languages and metalanguages buys a\nsolution to the Liar paradox at the cost of implausible\nrestrictiveness. \nIn light of these sorts of criticisms of Tarski’s theory, a\nnumber of approaches to the Liar have sought to retain classical\nlogic, but have some degree of self-applicability for the truth\npredicate. We know from the reasoning in\n §2.3\n that some restrictions on capture and release will then be required.\nOne goal has been to work out which ones are well-motivated, and how\nto implement them. \nOne way to do this was suggested by Kripke himself. Rather than see\nthe Kripke apparatus we reviewed briefly in\n §4.1.1\n as part of a non-classical logical approach, one can see it as an\nintermediate step towards building a classical interpretation of a\nself-applicative \\(\\Tr\\). \nRecall that the Kripke construction starts with a classical language\n\\(\\mathcal{L}_0\\) with no truth predicate. It passes to an expanded\nlanguage \\(\\mathcal{L}^{+}_0\\), but unlike a Tarskian metalanguage,\nthis language contains a truth predicate \\(\\Tr\\) that applies to all\nof \\(\\mathcal{L}^{+}_0\\). Kripke shows how to build a partial\ninterpretation of \\(\\Tr\\), providing an extension \\(\\mathcal{E}\\) and\nan anti-extension \\(\\mathcal{A}\\). But one can then simply consider\nthe classical model \\(\\langle\n\\mathcal{M}_0,\\mathcal{E}\\rangle\\), using only the extension. This is\nthe ‘closed-off’ construction, as the gap between\nextension and anti-extension is closed off by throwing everything in\nthe gap into the false category of a classical model. \nWe know this interpretation cannot make true all of capture and\nrelease (nor the full intersubstitutability of \\(A\\) and\n\\(\\Tr(\\left\\ulcorner A\\right\\urcorner))\\). But it does make a\nrestricted form true. The following holds in the closed-off model:\n\n\\[ [\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee \\Tr(\\left\\ulcorner \\neg\nA\\right\\urcorner)] \\rightarrow[\\Tr(\\left\\ulcorner A\\right\\urcorner)\n\\leftrightarrow A].\\]\n\n This tells us that capture and release (in the form of the\nT-schema) holds for sentences that are well-behaved, in the sense of\nsatisfying \\(\\Tr(\\left\\ulcorner A\\right\\urcorner) \\vee\n\\Tr(\\left\\ulcorner \\neg A\\right\\urcorner)\\). \nWhat happens to the Liar sentence on this approach? As in the\nthree-valued case, the Liar is interpreted as falling within the gap.\n\\(L\\) is neither in \\(\\mathcal{E}\\) nor \\(\\mathcal{A}. L\\) thus falls\noutside of the domain where \\(\\Tr\\) is interpreted as well-behaved.\nBecause the situation is classical, and \\(\\left\\ulcorner\nL\\right\\urcorner\\not\\in \\mathcal{E}\\), we know that \\(\\neg\n\\Tr(\\left\\ulcorner L\\right\\urcorner)\\) is true in the closed-off\nmodel; likewise, so is \\(\\neg \\Tr(\\left\\ulcorner \\neg\nL\\right\\urcorner)\\). \nOn well-behaved sentences, we have the fixed point property that \\(A\\)\nand \\(\\Tr(\\left\\ulcorner A\\right\\urcorner)\\) have the same truth\nvalue, and so the semantics of \\(\\mathcal{L}^{+}_0\\) and the semantics\nit assigns to \\(\\Tr\\) correspond exactly. On pathological sentences\nlike \\(L\\), they do not, and indeed, cannot, on pain of\ntriviality. \nIn a point related to the closed-off construction, it was observed by\nFeferman (1984) that if we are careful about negation, we can dispense\nwith \\(\\mathcal{A}\\) altogether in the Kripke construction. Thus, the\nconstruction can be done without any implicit appeal to many-valued\nlogic. Related ways of thinking about Kripke’s construction are\ndiscussed by McGee (1991). \nIn\n §4.1.3\n we noted that paracomplete approaches to the paradox can be\nvulnerable to ‘revenge paradoxes’ based on some idea of\nindeterminate truth or lacking a truth value. Related issue bear in\nthe classical case. We will discuss a few in turn. \nThe closed-off Kripke construction can help fill in the idea of a\ndeterminately operator discussed in\n §4.1.3.\n Instead of an operator, it allows us to define a predicate\n\\(D(\\left\\ulcorner A\\right\\urcorner)\\) by \\(\\Tr(\\left\\ulcorner\nA\\right\\urcorner) \\vee \\Tr(\\left\\ulcorner \\neg A\\right\\urcorner). D\\)\nrepresents ‘determinately’ in the sense of applying to\nsentences that have a truth value according to \\(\\Tr\\), as it were,\n‘determined’ by the model produced by the Kripke\nconstruction. It also, as we observed, applies to all the sentences\nwhich are well-behaved in the sense of obeying the T-schema (or\ncapture and release). \nFormally, the sentences to which \\(D\\) applies in the model generated\nby the Kripke construction are those which fall in \\(\\mathcal{E}\\) or\nhave their negations fall in \\(\\mathcal{E}\\) (equivalently fall in\n\\(\\mathcal{A})\\). Kripke labeled this being\n grounded.[11] \nIt has often been noted that there is also a more informal notion of\ndeterminateness or grounding, to which the formal notion expressed by\n\\(D\\) at least roughly corresponds (cf. Herzberger 1970). The idea is\nthat the determinate sentences are the ones with well-defined semantic\nproperties. Where we have no such well-defined semantic properties, we\nshould not expect the truth predicate to report anything well-behaved,\nnor should we expect properties like capture and release to hold.\nKripke’s construction builds up \\(\\mathcal{E}\\) in stages,\nstarting with sentence with no semantic terms, and adding semantic\ncomplexity at each stage. One reaches \\(\\mathcal{E}\\) at the limit of\nthis process, which allows us to think of \\(\\mathcal{E}\\) as\nindicating the limit of where semantic values are assigned by a\nwell-defined process. Thus, the formal notion of grounding provided by\n\\(D\\) is sometimes suggested to reflect the extent to which sentences\nhave well-defined semantic properties. \nThe notion of grounding has spawned its own literature, with Leitgeb\n(2005) a key impetus. See also Bonnay and van Vugt (2015), Meadows\n(2013), and Schindler (2014). \nAnother view which makes use of a form of determinateness is advocated\nby McGee (1991). McGee’s theory, like many we have surveyed\nhere, is rich in complexity to which we cannot do justice. The theory\nhas many components, including a mathematically sophisticated\napproaches to truth related to the Kripkean ideas we have been\ndiscussing, in a setting which holds to classical logic. \nMcGee relies on two notions: truth and definite truth. Definite truth\nis a form of the idea we glossed as determinateness. But, McGee\ndescribes this idea using some very sophisticated logical techniques.\nWe will mention them briefly, for those familiar with the technical\nbackground. Formally, for McGee, definite truth is identified with\nprovability in a partially interpreted language, using an extension of\nclassical logic which takes in facts about the partial interpretation\nknown as \\(\\mathcal{A}\\)-logic. It is thus different from the\ngrounding notion we just discussed. McGee treats definitely as a\npredicate, on par with the truth predicate, and not as an\noperator on sentences as some developments do. With the right notion\nof definite truth, McGee shows that a partially interpreted language\ncontaining its own truth predicate can meet restricted forms of\ncapture and release put in terms of definite truth. Where \\(\\Def\\) is\nthe definiteness predicate, McGee show how to link truth and definite\ntruth, by showing how to validate: \nIndeed, McGee shows that these conditions can be met within a theory\nof both truth and definite truth, where truth meets appropriate forms\nof capture and release, and also where a formal statement of bivalence\nfor truth comes out definitely true. McGee thus provides a theory\nwhich has strongly self-applicative truth and definite truth, within a\nclassical setting. \nThough truth may satisfy the formal property of bivalence, it is\ncrucial to McGee’s approach that definite truth is an open-ended\nnotion, which may be strengthened (formally, by strengthening a\npartially interpreted language). Thus, definite truth meets weaker\nforms of capture and release than truth itself. (Some instances of\n\\(\\Def(\\left\\ulcorner A\\right\\urcorner) \\rightarrow A\\) fail to be\ndefinitely true, according to McGee.) Furthermore, McGee suggests that\nthis behavior of truth and definite truth makes truth a vague\npredicate. It remains disputed whether McGee’s theory avoids the\nkind of revenge problems that plague other Kripkean approaches. \nWe have now surveyed some important representatives of approaches to\nresolving the Liar within classical logic. There are a number of\nothers, many of them involving some complex mathematics. We will pause\nto mention a few of the more important of these, though given the\nmathematical complexity, we will only gesture towards them. \nThere is an important strand of work in proof theory, which has sought\nto develop axiomatic theories of self-applicative truth in classical\nlogic, including work of Cantini (1996), Feferman (1984, 1991),\nFriedman and Sheard (1987), Halbach (2011), and Horsten (2011). The\nidea is to find ways of expressing rules like capture and release that\nretain consistency. Options include more care about how\nproof-theoretic rules of inference are formulated, and more care about\nformulating restricted rules. The main ideas are discussed in the\nentry on\n axiomatic theories of truth,\n to which we will leave the details. \nKripke’s work on truth was developed in conjunction with some\nimportant ideas about inductive definitions (as we see, for instance,\nin the later parts of Kripke 1975). These connections are explored\nfurther in work of Burgess (1986) and McGee (1991). We also pause to\nmention work of Aczel (1980) combining ideas about inductive\ndefinitions and the lambda calculus. \nAnother family of proposed solutions to the Liar are contextualist\nsolutions. These also make use of classical logic, but base their\nsolutions primarily on some ideas from the philosophy of language.\nThey take the basic lesson of the Liar to be that truth predicates\nshow some form of context dependence, even in otherwise\nnon-context-dependent fragments of a language. They seek to explain\nhow this can be so, and rely on it to resolve the problems faced by\nthe Liar. \nContextualist theories share with a number of approaches we have\nalready seen the idea that there is something indeterminate or\nsemantically not well-formed about our Liar sentence \\(L\\). But,\ncontextualist views give a special role to issues of\n‘revenge’ and lack of expressive power. \nOne way of thinking about why the truth predicate is not well-behaved\non the Liar sentence is that there is not really a well-defined truth\nbearer provided by the Liar sentence. To make this vivid (as discussed\nby C. Parsons (1974)), suppose that\ntruth bearers are propositions expressed by sentences in contexts, and\nthat the Liar sentence fails to express a proposition. This is the\nbeginnings of an account of how the Liar winds up ungrounded or in\nsome sense indeterminate. At least, we should not expect \\(\\Tr\\) to be\nwell-behaved where sentences fail to express propositions. \nBut, it is an unstable proposal. We can reason that if the Liar\nsentence fails to express a proposition, it fails to express a true\nproposition. In the manner of a revenge paradox, if our Liar sentence\nhad originally said ‘this sentence does not express a true\nproposition’, then we would have our Liar sentence back. And, we\nhave shown that this sentence says something true, and so expresses a\ntrue proposition. Thus, from the assumption that the Liar sentence is\nindeterminate or lacks semantic status, we reason that it must have\nproper semantic status, and indeed say something true. We are hence\nback in paradox. \nContextualists do not see this as a new ‘revenge’ paradox,\nbut the basic problem posed by the Liar. First of all, in a setting\nwhere sentences are context dependent, the natural formulation of a\ntruth claim is always in terms of expressing a true proposition, or\nsome related semantically careful application of the truth predicate.\nBut more importantly, to the contextualist, the main issue behind the\nLiar is embodied in the reasoning on display here. It involves two key\nsteps. First, assigning the Liar semantically defective\nstatus—failing to express a proposition or being somehow\nindeterminate. Second, concluding from the first step that the Liar\nmust be true—and so not indeterminate or failing to express a\nproposition—after all. Both steps appear to be the result of\nsound reasoning, and so the conclusions reached at both must be true.\nThe main problem of the Liar, according to a contextualist, is to\nexplain how this can be, and how the second step can be\nnon-paradoxical. (Such reasoning is explored by Glanzberg (2004c) and C. Parsons (1974). For a critical discussion, see Gauker\n(2006).) \nThus, contextualists seek to explain how the Liar sentence can have\nunstable semantic status, switching from defective to non-defective in\nthe course of this sort of inference. They do so by appealing to the\nrole of context in fixing the semantic status of sentences.\nSentences can have different semantic status in different contexts.\nThus, to contextualists, there must be some non-trivial effect of\ncontext involved in the Liar sentence, and more generally, in\npredication of truth. \nOne prominent contextualist approach, advocated by Burge (1979) and\ndeveloped by Koons (1992) and Simmons (1993), starts with the idea\nthat the Tarskian hierarchy itself offers a way to see the truth\npredicate as context dependent. Tarski’s hierarchy postulates a\nhierarchy of truth predicates \\(\\Tr_i\\). What if \\(i\\) is not merely a\nmarker of level in a hierarchy, but a genuine contextual parameter? If\nso, then the Liar sentence is in fact context-dependent: it has the\nform \\(\\neg \\Tr_i (\\left\\ulcorner L\\right\\urcorner)\\), where \\(i\\) is\nset by context. Context then sets the level of the truth\npredicate. \nThis idea can be seen as an improvement on the original Tarskian\napproach in several respects. First, once we have a contextual\nparameter, the need to insist that Liar sentences are never\nwell-formed disappears. Hence, we can think of each \\(\\Tr_i\\) as\nincluding some limited range of applicability to sentences of its own\nlanguage. Using the Kripkean techniques likes the closed-off\nconstruction we reviewed above, predicates like \\(\\Tr_i\\) can be\nconstructed which have as much self-applicability as Kripke’s\nown. (Burge 1979 and the postscript to C. Parsons 1974 consider\nbriefly how Kripkean techniques could be applied in this setting.\nThough he works in a very different setting, ideas of Gaifman (1988,\n1992) can be construed as showing how even more subtle ways of\ninterpreting a context-dependent truth predicate can be\ndeveloped.) \nWith suitable care, other problems for the Tarskian hierarchy can be\navoided as well. Burge proposes that the parameter \\(i\\) in \\(\\Tr_i\\)\nis set by a Gricean pragmatic process. In effect, speakers implicate\nthat \\(i\\) is to be set to a level for which the discourse they are in\ncan be coherently interpreted (with a maximal coherent extension for\n\\(\\Tr_i)\\). Thus, truth does indeed find its own level, and so\nKripke’s objection about how to fix levels for non-paradoxical\nsentences may be countered. \nThis approach gives substance to the idea that the Liar sentence is\ncontext dependent. Any sentence containing \\(\\Tr_i\\) will be context\ndependent, inheriting a contextual parameter along the way. This\noffers a way to make sense of the arguments for the instability of the\nsemantic status of \\(L\\) that motivated contextualism. In an initial\ncontext, we fix some level \\(i\\). This is the level at which \\(L\\) is\ninterpreted. Call this interpretation \\(L_i . L_i\\) says \\(\\neg \\Tr_i\n(\\left\\ulcorner L_{i}\\right\\urcorner)\\). By the usual Liar reasoning,\nwe show that \\(L_i\\) must lack determinate semantic status—or\nfail to express a proposition. As we discussed, we then reason that\n\\(L\\) must come out true. According to the contextualist view at hand,\nthis is the claim that \\(L_i\\) is true according to some other\ncontext, where a wider truth predicate is in play. This amounts to\nbeing true at some higher level of the hierarchy. We can conclude, for\ninstance, that the Liar sentence as it was used at level \\(i\\) is true\naccording to a wider level \\(k \\gt i\\). Hence, \\(\\Tr_k (\\left\\ulcorner\nL_{i}\\right\\urcorner)\\), where \\(k \\gt i\\). \nThis form of contextualism thus maintains that once we see the\ncontext-dependent behavior of \\(\\Tr_i\\), we can make good sense of the\ninstability of \\(L\\). This can be seen as an improvement on both the\nTarskian view, and embodying some of the techniques of classical logic\nwe reviewed in\n §4.2.\n Depending how the Burge view is spelled out technically, it will\neither have full capture and release at each level, or capture and\nrelease with the same restrictions as the closed-off Kripke\nconstruction. \nThe view that posits contextual parameters on the truth predicate does\nface a number of questions. For instance, it is fair to ask why we\nthink the truth predicate really has a contextual parameter,\nespecially if we mean a truth predicate like the one we use in natural\nlanguage. Merely noting that such a parameter would avoid paradox does\nnot show that it is present in natural language. Furthermore, whether\nit is acceptable to see truth as coming in levels at all,\ncontext-based or not, remains disputed. (Not all those who advocate\ncontextual parameters on the truth predicate agree about the role of\nhierarchy. In particular, Simmons (1993) advocates a view he labels\nthe ‘singularity theory’ which he proposes avoids outright\nhierarchical structures.) Finally, the Burgean appeal to Gricean\nmechanisms to set levels of truth has been challenged. (For instance,\nGaifman (1992) asks if the Gricean process does any substantial work\nin Burge’s account.) \nContextualist approaches come in many varieties, each of which makes\nuse of slightly different apparatus. With contextualist theories the\nchoice often turns on issues in philosophy of language as well as\nlogic. We already noted a different way of developing contextualist\nideas from Gaifman (1988, 1992). We will now briefly review a few more\nalternatives. \nAnother contextualist approach, stemming from work of C. Parsons\n(1974), seeks to build up the\ncontext dependence of the Liar sentence, and ultimately the context\ndependence of the truth predicate, from more basic components. The key\nis to see the context dependence of the Liar sentence as derived from\nthe context dependence of quantifier domains. \nQuantification enters the picture when we think about how to account\nfor predication of truth when sentences display context dependence. In\nsuch an environment, it does not make good sense to predicate truth of\nsentences directly. Not all sentences will have the right kind of\ndeterminate semantic properties to be truth bearers; or, as we have\nbeen putting it, not all sentences will express propositions. But\nthen, to say that a sentence \\(S\\) is true in context \\(c\\) is to say\nthat there is a proposition \\(p\\) expressed by \\(S\\) in\n\\(c\\), and that proposition \\(p\\) is true. \nThe current contextualist proposal starts with the observation that\nquantifiers in natural language typically have context-dependent\ndomains of quantification. When we say ‘Everyone is here’,\nwe do not mean everyone in the world, but everyone in some\ncontextually provided subdomain. Context dependence enters the Liar,\naccording to this contextualist view, in the contextual effects on the\ndomain of the propositional quantifier \\(\\exists p\\). \nIn particular, this domain must expand in the course of the\nreasoning about the semantic status of the Liar. In the initial\ncontext, \\(\\exists p\\) must range over a small enough domain that\nthere is no proposition for \\(L\\) to express. In the subsequent\ncontext, the domain expands to allow \\(L\\) to express some true\nproposition. Proposals for how this expansion happens, and how to\nmodel the truth predicate and the relation of expressing a proposition\nin the presence of the Liar, have been explored by Glanzberg (2001,\n2004a), building on work of C. Parsons (1974). Defenders of this\napproach argue that it does better in locating the locus of context\ndependence than the parameters on truth predicates view. \nAnother variant on the contextualist strategy for resolving the Liar,\ndeveloped by Barwise and Etchemendy (1987) and Groeneveld (1994),\nrelies on situation theory rather than quantifier domains to\nprovide the locus of context dependence. Situation theory is a highly\ndeveloped part of philosophy of language, so we shall again give only\nthe roughest sketch of how their view works. \nA situation is a partial state the world might be in: something like\n\\(a\\) being \\(F\\). Situations are classified by what are called\nsituation types. A proposition involves classifying a situation as\nbeing of a situation type. Thus, a proposition \\(\\{s\\); [\\(\\sigma]\\}\\)\ntell us that situation \\(s\\) is of type \\(\\sigma\\). The situation\n\\(s\\) here plays a number of roles, including that of providing a\ncontext. \nWhen it comes to the Liar, Barwise and Etchemendy construe Liar\npropositions as having the form \\(f_s = \\{s\\); [\\(\\Tr,f_s\\); 0]\\(\\}\\),\nrelative to an initial situation \\(s\\). This is a proposition \\(f_s\\)\nwhich says of itself that its falsity is a fact that holds in \\(s\\).\n(In Barwise and Etchemendy’s notation, the 0 indicates falsity,\nso the situation type is that the state of affairs of the proposition\nbeing false holds. The proposition says this is a fact that holds in\n\\(s\\).) There is a sense in which this proposition cannot be\nexpressed. In particular, the state of affairs \\(\\langle \\Tr,f_s\\);\n\\(0\\rangle\\) cannot be in \\(s\\). (Actually, Barwise and Etchemendy say\nthat the proposition is expressible, but give up on what they call the\n\\(F\\)-closure of \\(s\\). But there is a core observation in common\nbetween these two points, and the details do not matter for our\npurposes here.) There is then a distinct situation \\(s' = s \\cup\n\\{\\langle \\Tr,f_s\\); \\(0\\rangle \\}\\), and the proposition \\(\\{s'\\);\n[\\(\\Tr,f_s\\); 0]\\(\\}\\) relative to this new situation—this new\n‘context’—is true. \nThis idea clearly has a lot in common with the restriction on\nquantifier domains view. In particular, both approaches seek to show\nhow the domain of contents expressible in contexts can expand, to\naccount for the instability of the Liar sentence. For discussion of\nrelations between the situation-theoretic and quantifier domain\napproaches, see Glanzberg (2004a). Barwise and Etchemendy discuss\nrelations between their situation-based and a more traditional\napproach in 1987 (Ch. 11). For a detailed match-up between the Barwise\nand Etchemendy framework and a Burgean framework of indexed truth\npredicates, see Koons (1992). \nIt is a key challenge to contextualists to provide a full and\nwell-motivated account of the source and nature of the shift in\ncontext involved in the Liar, though of course, many contextualists\nbelieve they have met this challenge. In favor of the contextualist\napproach is that it takes the revenge phenomenon to be the basic\nproblem, and so is largely immune to the kinds of revenge issues that\naffect other approaches we have considered. But, it may be that there\nis another form of revenge which might be applied. To retain\nconsistency, contextualists must apply restrictions on quantifiers to\nsuch quantifiers as ‘all contexts’. To achieve this, it\nmust presumably be denied that there are any absolutely unrestricted\nquantifiers. Glanzberg (2004b, 2006) argues this is the correct\nconclusion, but it is highly controversial. For a survey of thinking\nabout this, see the papers in Rayo and Uzquiano 2006. \nAnother approach to the Liar, advocated by Gupta (1982), Herzberger\n(1982), Gupta and Belnap (1993), and a number of others, is the\nrevision theory of truth. This approach shares some features\nwith the views we surveyed in\n §4.3,\n in that it takes classical logic for granted. We also believe it has\nan affinity with the views discussed in\n §4.4,\n as it rethinks some basic aspects of semantics. But it is a\ndistinctive approach. We will sketch some of the fundamentals of this\nview. For a discussion of the foundations of the revision theory, and\nits relations to contextualism, see L. Shapiro (2006). More details,\nand more references, may be found in the entry on\n the revision theory of truth. \nThe revision theory of truth starts with the idea that we may take the\nT-schema at face value. Indeed, Gupta and Belnap (1993) take up a\nsuggestion from Tarski (1944), that the instances of the T-schema can\nbe seen as partial definitions of truth; presumably with all the\ninstances together, for the right language or family of languages\nconstituting a complete definition. At the same time, the revision\ntheory holds fast to classical logic. Thus, we already know, we have\nthe Liar paradox for any language with enough expressive resources to\nproduce Liar sentences. \nIn response, the revision theory proposes a different way of\napproaching the semantic properties of the truth predicate. In keeping\nwith our practices here, we may begin with a classical model\n\\(\\mathcal{M}_0\\) for a language \\(\\mathcal{L}_0\\) without a truth\npredicate, and consider what happens when we add a truth predicate\n\\(\\Tr\\) to form the extended language \\(\\mathcal{L}^{+}_0\\). This\nlanguage has a full self-applicative truth predicate, and so can\ngenerate the Liar sentence \\(L\\). \nTo build a classical model for \\(\\mathcal{L}^{+}_0\\), we need an\nextension for \\(\\Tr\\). Let us pick a set: call it \\(H\\) for a\nhypothesis about what the extension of \\(\\Tr\\) might be.\n\\(H\\) may be \\(\\varnothing\\), it may be the entire domain of\n\\(\\mathcal{M}_0\\), or it may be anything else. It need not be a\nparticularly good approximation of the semantic properties of\n\\(\\Tr\\). \nEven if it is not, \\(\\langle \\mathcal{M}_0,H\\rangle\\) still provides a\nclassical model, in which we can interpret \\(\\mathcal{L}^{+}_0\\). With\nthat, we can in effect apply the T-schema, relative to our hypothesis\n\\(H\\), and see what we get. More precisely, we can let \\(\\tau(H) =\n\\{\\left\\ulcorner A\\right\\urcorner | A\\) is true in \\(\\langle\n\\mathcal{M}_0,H\\rangle \\}. \\tau(H)\\) is generally a better hypothesis\nabout what is true in our language than \\(H\\) might have been. At\nleast, clearly, if \\(H\\) made foolish guesses about the truth of\nsentence of the truth-free fragment \\(\\mathcal{L}_0\\), they are\ncorrected in \\(\\tau(H)\\), which contains everything from\n\\(\\mathcal{L}_0\\) true in \\(\\mathcal{M}_0\\). Thus, \\(\\langle\n\\mathcal{M}_0,\\tau(H)\\rangle\\) is generally a better model of\n\\(\\mathcal{L}^{+}_0\\) then \\(\\langle \\mathcal{M}_0,H\\rangle\\). \nBetter in many respects. But when it comes to paradoxical sentences\nlike \\(L\\), we see something different. As a starting hypothesis, let\nus consider \\(H = \\varnothing\\). Consider what happens to the truth of\n\\(L\\) as we apply \\(\\tau\\): \nThe Liar sentence never stabilizes under this process. We reach an\nalternation of truth values which will go on for ever. This shows,\naccording the revision theory, that truth is a circular concept. As\nsuch, it does not have an extension in the ordinary sense. Rather, it\nhas a rule for revising extensions, which never stabilizes. \nIn the terminology of the revision theory, \\(\\tau\\) is a revision\nrule. It takes us from one hypothesis about the interpretation of\n\\(\\Tr\\) to another. Sequences of values we generate by such revision\nrules, starting with a given initial hypothesis, are revision\nsequences. We leave to a more full presentation the important\nissue of the right way to define transfinite revision\nsequences. (See the entry on\n revision theories of truth.) \nThe characteristic property of paradoxical sentences like the Liar\nsentence is that they are unstable in revision sequences: there is no\npoint in the sequence at which they reach a stable truth value. This\nclassifies sentences as stably true, stably false, and unstable. The\nrevision theory develops notions of consequence based on these, and\nrelated notions. See the entry on\n revision theories of truth\n for further exposition of this rich theory. \nIn\n §2.3.3\n we saw that the Liar paradox, in the presence of unrestricted capture\nand release and classical logic, leads to contradiction. So long as we\nhave EFQ (as classical logic does), this results in triviality. Most\nof the proposed solutions we have considered (with the exception of\nthe revision theory) try to avoid this result somehow, either by\nrestricting capture and release or departing from classical logic. But\nthere is another idea that has occasionally been argued, that the Liar\nparadox simply shows that the kinds of languages we speak, which\ncontain their own truth predicates, are inconsistent. \nThis is not an easy view to formulate. Though Tarski himself seemed to\nsuggest something along these lines (for natural languages,\nspecifically), it was argued by Herzberger (1967) that it is\nimpossible to have an inconsistent language. \nIn contrast, Eklund (2002) takes seriously the idea that our semantic\nintuitions, expressed, for instance, by unrestricted capture and\nrelease, really are inconsistent. Eklund grants that this does not\nmake sense if these intuitions have their source simply in our grasp\nof the truth conditions of sentences. But he suggests an alternative\npicture of semantic competence which does make sense of it (closely\nrelated to conceptual role views of meaning). He suggests that we\nthink of semantic competence in terms of a range of principles\nspeakers are disposed to accept in virtue of knowing a language. Those\nprinciples may be inconsistent. But even so, they determine semantic\nvalues. Semantic values will be whatever comes closest to satisfying\nthe principles—whatever makes them maximally correct—even\nif nothing can satisfy all of them due to an underlying\ninconsistency. \nEklund thus supports an idea suggested by Chihara (1979).\nChihara’s main aim is to provide what he calls a\ndiagnosis of the paradox, which should explain why the\nparadox arises and why it appears compelling. But along the way, he\nsuggests that the source of the paradox is our acceptance of the\nT-schema (by convention, he suggests), in spite of its\ninconsistency. \nA related, though distinct, view is defended by Patterson (2007,\n2009). Patterson argues that competence with a language puts one in a\ncognitive state relating to an inconsistent theory—one including\nthe unrestricted T-schema and governed by classical logic. He goes on\nto explore how such a cognitive state could allow us to successfully\ncommunicate, in spite of relating us to a false theory. \nA different sort of inconsistency theory is advocated by Scharp\n(2013). Scharp argues that truth is an inconsistent concept, like the\npre-relativistic concept of mass. As such, it is unsuitable for\ncareful theorizing. What we need to do, according to Scharp, is\nreplace the inconsistent concept of truth with a family of consistent\nconcepts that work better. Scharp develops just such a family of\nconcepts, and offers a theory of them. \nThere is much more to say about the Liar paradox than we have covered\nhere: there are more approaches to the Liar variants we have\nmentioned, and more related paradoxes like those of denotation,\nproperties, etc. There are also more important technical results, and\nmore important philosophical implications and applications. Our goal\nhere has been to be more suggestive than exhaustive, and we hope to\nhave given the reader an indication of what the Liar paradox is, and\nwhat its consequences might be.","contact.mail":"davewripley@gmail.com","contact.domain":"gmail.com"}]
