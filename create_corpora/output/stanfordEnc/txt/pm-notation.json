[{"date.published":"2004-08-19","date.changed":"2021-02-10","url":"https://plato.stanford.edu/entries/pm-notation/","author1":"Bernard Linsky","author1.info":"https://www.ualberta.ca/arts/about/people-collection/bernard-linsky","entry":"pm-notation","body.text":"\n\n\nPrincipia Mathematica [PM] by A.N. Whitehead and Bertrand\nRussell, published 1910–1913 in three volumes by Cambridge\nUniversity Press, contains a derivation of large portions of\nmathematics using notions and principles of symbolic logic. The\nnotation in that work has been superseded by the subsequent\ndevelopment of logic during the 20th century, to the extent\nthat the beginner has trouble reading PM at all. This article provides\nan introduction to the symbolism of PM, showing how that symbolism can\nbe translated into a more contemporary notation which should be\nfamiliar to anyone who has had a first course in symbolic logic. This\ntranslation is offered as an aid to learning the original notation,\nwhich itself is a subject of scholarly dispute, and embodies\nsubstantive logical doctrines so that it cannot simply be replaced by\ncontemporary symbolism. Learning the notation, then, is a first step\nto learning the distinctive logical doctrines of Principia\nMathematica. \n\nPrincipia Mathematica [PM] was written jointly by Alfred\nNorth Whitehead and Bertrand Russell over several years, and published\nin three volumes, which appeared between 1910 and 1913. It presents a\nsystem of symbolic logic and then turns to the foundations of\nmathematics to carry out the logicist project of defining mathematical\nnotions in terms of logical notions and proving the fundamental axioms\nof mathematics as theorems of logic. While hugely important in the\ndevelopment of logic, philosophy of mathematics and more broadly of\n“Early Analytic Philosophy”, the work itself is no longer\nstudied for these topics. As a result the very notation of the work\nhas become alien to contemporary students of logic, and that has\nbecome a barrier to the study of Principia Mathematica. We\ninclude a series of definitions of notions such as transfinite\ncardinal numbers, well-orderings, rational and real numbers. These\nare defined differently in the theory of types of PM than than in\naxiomatic set theory.  \nThis entry is intended to assist the student of PM in reading the\nsymbolic portion of the work. What follows is a partial translation of\nthe symbolism into a more contemporary notation, which should be\nfamiliar from other articles in this Encyclopedia, and which is quite\nstandard in contemporary textbooks of symbolic logic. No complete\nalgorithm is supplied, rather various suggestions are intended to help\nthe reader learn the symbolism of PM. Many issues of interpretation\nwould be prejudged by only using contemporary notation, and many\ndetails that are unique to PM depend on that notation. It will be seen\nbelow, with some of the more contentious aspects of the notation, that\ndoctrines of substance are built into the notation of PM. Replacing\nthe notation with a more modern symbolism would drastically alter the\nvery content of the book. \nBelow the reader will find, in the order in which they are introduced\nin PM, the following symbols, which are briefly described. More detail\nis provided in what follows: \n[These were used by Peano. More recently, \\(\\forall\\) has been added\nfor symmetry with \\(\\exists\\). Some scholars see the quantfiers\n\\((\\phi)\\) and \\((\\exists \\phi\\)) as substitutional.] \nAn immediate obstacle to reading PM is the unfamiliar use of dots for\npunctuation, instead of the more common parentheses and brackets. The\nsystem is precise, and can be learned with just a little practice. The\nuse of dots for punctuation is not unique to PM. Originating with\nPeano, it was later used in works by Alonzo Church, W.V.O. Quine, and\nothers, but it has now largely disappeared. (The use of dots of some\nhistorical interest, as Alan Turing made a study of the use of dots\nfrom a computational point of view in 1942, presumably in his spare\ntime after a day's work at Bletchley Park breaking the codes of the\nEnigma Machine.) The best way to learn to use it is to look at a few\nsamples which are translated to formulae using parentheses, and thus\nto get the feel for it. What follows is an explanation as presented in\nPM, pages 9–10, followed by a number of examples which\nillustrate each of its clauses: \nConsider the following series of extended examples, in which we\nexamine propositions in PM and then discuss how to translate them step\nby step into modern notation. (Symbols below are sometimes used as\nnames for themselves, thus avoiding some otherwise needed quotation\nmarks. Russell is often accused of confusing use and mention, so there\nmay well be some danger in this practice.)\n \nThis is the second assertion of “star” 1. It is in fact an\naxiom or “Primitive Proposition” as indicated by the\n‘\\(\\Pp\\)’. That this is an assertion (axiom or theorem)\nand not a definition is indicated by the use of\n“\\(\\vdash\\)”. (By contrast, a definition would omit the\nassertion sign but conclude with a “\\(\\Df\\)” sign.) Now\nthe first step in the process of translating ∗1·2 into modern\nnotation is to note the colon. Recall, from the above quoted passage,\nthat “a larger number of dots indicates an outside bracket, a\nsmaller number indicates an inside bracket”. Thus, the colon\nhere (which consists of a larger number of dots than the single dots\noccurring on the line in ∗1·2) represents an outside bracket.\nSo, the first step is to translate ∗1·2 to:  \nSo the brackets “[” and “]” represent the\ncolon in ∗1·2. The scope of the colon thus extends past\nany smaller number of dots (i.e., one dot) to the end of the\nformula. Since formulas are read from left to right the expression\n“past” means “to the right of”. \nNext, the dots around the “\\(\\supset\\)” are represented in\nmodern notation by the parenthesis around the antecedent and\nconsequent. Recall, in the above passage, we find “… dots\nonly work away from the adjacent sign of disjunction, implication, or\nequivalence …”. Thus, the next step in the translation\nprocess is to move to the formula: \n\n\\[\n\\vdash [(p \\lor p) \\supset(p)]\n\\]\n\n  \nFinally, standard modern conventions allow us to delete the outer\nbrackets and the parentheses around single letters, yielding: \nOur next example involves conjunction, which is indicated by simple\njuxtaposition of atomic sentences, or with a dot when a substitution\ninstance might be considered, as in the definition of conjunction in\nthe following: \nHere we have a case in which dots occur indicate both a “logical\nproduct” (i.e., conjunction) and delimiting brackets. As a first\nstep in translating ∗3·01 into modern notation, we replace the\nfirst dot by an ampersand (and its corresponding scope delimiters) and\nreplace “\\(\\ldot {=} \\ldot\\)” by “\\(=_{df}\\)”,\nto yield:  \nThe above step clearly illustrates how a “dot indicating a\nlogical product has a scope which works both backwards and\nforwards”. Note that the first dot in ∗3·01, i.e.,\nbetween the \\(p\\) and \\(q\\), is really optional, given the above\nquotation from PM. However, since we may sometimes want to substitute\nentire formulas for \\(p\\) and \\(q\\), the dot indicates the extent of\nthe substituted formulas. Thus, we might have, as a substitution\ninstance: \\(r \\lor s \\sdot q \\supset s\\) (in PM notation) or \\((r \\lor\ns) \\amp(q \\supset s)\\) (in contemporary symbols). \nFinally, our modern conventions allow us to eliminate the outer\nparentheses from the definiendum and the brackets “[” and\n“]” from the definiens, yielding:  \nNotice that the scope of the negation sign “\\(\\osim\\)” in\n∗3·01 is not indicated with dots, even in the PM system, but\nrather requires parentheses. \nIf we apply the rule “dots only work away from the adjacent sign\nof disjunction, implication, or equivalence, or forward from the\nadjacent symbol of one of the other kinds enumerated in Group\nII” (where Group II includes “\\((\\exists x)\\)”),\nthen the modern equivalent would be: \n\n\\[\n\\osim (x)\\phi x =_{df} (\\exists x)\\osim \\phi x\n\\]\n\n or \n\n\\[\n\\osim \\forall x\\phi x =_{df} \\exists x\\osim \\phi x\n\\] \nThe ranking of connectives in terms of relative “force”,\nor scope, is a standard convention in contemporary logic. If\nthere are no explicit parentheses to indicate the scope of a\nconnective those which have precedence in the ranking are presumed to\nbe the principal connective, and so on for subformulas. Thus, instead\nformulating the following DeMorgan’s law as the cumbersome: \nwe nowadays write it as: \nThis simpler formulation is natural because \\(\\equiv\\) takes\nprecedence over (has wider “scope” than) \\(\\lor\\) and\n&, and the latter take precedence over \\(\\osim\\). Indeed\nparentheses are often unneeded around \\(\\equiv\\), given a further\nconvention on which \\(\\equiv\\) takes precedence over \\(\\supset\\).\nThus, the formula \\(p \\supset q \\equiv\\osim p\\lor q\\) becomes\nunambiguous. We might represent these conventions by listing the\nconnectives in groups with those with widest scope at the top:  \nFor Whitehead and Russell, however, the symbols \\(\\supset\\),\n\\(\\equiv\\), \\(\\lor\\) and \\(\\ldots =\\ldots \\Df\\), in Group I, are of\nequal force. Group II consists of the variable binding expressions,\nquantifiers and scope indicators for definite descriptions, and Group\nIII consists of conjunctions. Negation is below all of these. So the\nranking in PM would be: \nThis is what Whitehead and Russell seem to mean when they say\n“Group I is of greater force than Group II, and Group II than\nGroup III.” Consider the following: \nThis theorem illustrates how to read multiple uses of the same number\nof dots within one formula. Grouping “associates to the\nleft” both for dots and for a series of disjunctions, following\nthe convention of reading from left to right and the definition: \nSo, in ∗3·12, the first two dots around the \\(\\lor\\)\nsimply “work away” from the connective. The second\n“extends” until it meets with the next of the same number\n(the third single dot). That third dot, and the fourth “work\naway” from the second \\(\\lor\\), and the final dot indicates a\nconjunction with narrowest scope. The result, formulated with all\npossible punctuation for maximum explicitness, is: \nIf we employ all the standard conventions for dropping parentheses,\nthis becomes: \nThis illustrates the passage in the above quotation which says\n“The scope of the bracket indicated by any collection of dots\nextends backwards or forwards beyond any smaller number of dots, or\nany equal number from a group of less force, until we reach either the\nend of the asserted proposition or a greater number of dots or an\nequal number belonging to a group of equal or superior\nforce.” \nBefore we look at a wider range of examples, a detailed example\ninvolving quantified variables will prove to be instructive. Whitehead\nand Russell follow Peano’s practice of expressing universally\nquantified conditionals (such as “All \\(\\phi\\)s are\n\\(\\psi\\)s”) with the bound variable subscripted under the\nconditional sign. Similarly with universally quantified biconditionals\n(“All and only \\(\\phi\\)s are \\(\\psi\\)s”). That is, the\nexpressions “\\(\\phi x \\supset_x \\psi x\\)” and\n“\\(\\phi x \\equiv_x \\psi x\\)” are defined as follows: \nand correspond to the following more modern formulas,\nrespectively: \nAs an exercise the reader might be inclined to formulate a rigorous\nalgorithm for converting PM into a particular contemporary symbolism\n(with conventions for dropping parentheses), but the best way to learn\nthe system is to look over a few more examples of translations, and\nthen simply begin to read formulae directly. \nIn the examples below, each formula number is followed first by\nPrincipia notation and then its modern translation. Notice\nthat in ∗1·5 parentheses are used for punctuation in addition\nto dots. (Primitive Propositions ∗1·2, ∗1·3,\n∗1·4, ∗1·5, and ∗1·6 together constitute the\naxioms for propositional logic in PM.) Proposition ∗1·5 was\nshown to be redundant by Paul Bernays in 1926. It can be derived from\nappropriate instances of the others and the rule of modus ponens. \nThere are two kinds of functions in PM. Propositional functions such\nas “\\(\\hat{x}\\) is a natural number” are to be\ndistinguished from the more familiar mathematical functions, which are\ncalled “descriptive functions” (PM, Chapter \\(\\ast\\)31). Descriptive\nfunctions are defined using relations and definite descriptions.\nExamples of descriptive functions are \\(x + y\\) and “the\nsuccessor of \\(n\\)”. \nFocusing on propositional functions, Whitehead and Russell distinguish\nbetween expressions with a free variable (such as “\\(x\\) is\nhurt”) and names of functions (such as “\\(\\hat{x}\\) is\nhurt”) (PM, 14–15). The propositions which result from the\nformula by assigning allowable values to the free variable\n“x” are said to be the “ambiguous values” of\nthe function. Expressions using the circumflex notation, such as\n\\(\\phi \\hat{x}\\) only occur in the introductory material in the\ntechnical sections of PM and not in the technical sections themselves\n(with the exception of the sections on the theory of classes),\nprompting some scholars to say that such expressions do not really\noccur in the formal system of PM. This issue is distinct from that\nsurrounding the interpretation of such symbols. Are they\n“term-forming operators” which turn an open formula into a\nname for a function, or simply a syntactic device, a placeholder, for\nindicating the variable for which a substitution can made in an open\nformula? If they are to be treated as term-forming operators, the\nmodern notation for \\(\\phi \\hat{x}\\) would be “\\(\\lambda x\\phi\nx\\)”. The \\(\\lambda\\)-notation has the advantage of clearly\nrevealing that the variable \\(x\\) is bound by the\nterm-forming operator \\(\\lambda\\), which takes a predicate \\(\\phi\\)\nand yields a term \\(\\lambda x\\phi x\\) (which in some logics is a\nsingular term that can occur in the subject position of a sentence,\nwhile in other logics is a complex predicative expression). Unlike\n\\(\\lambda\\)-notation, the PM notation using the circumflex cannot\nindicate scope. The function expression\n“\\(\\phi(\\hat{x},\\hat{z}\\))” is ambiguous between\n“\\(\\lambda x\\lambda y\\phi xy\\)” and “\\(\\lambda\ny\\lambda x\\phi xy\\)”, without some further convention. Indeed,\nWhitehead and Russell specified this convention for relations in\nextension (on p. 200 in the introductory material of ∗21, in terms of\nthe order of the variables), but the ambiguity it brought out most\nclearly by using \\(\\lambda\\) notation: the first denotes the relation\nof being an \\(x\\) and \\(y\\) such that \\(\\phi xy\\) and the second\ndenotes the converse relation of being a \\(y\\) and \\(x\\) such that\n\\(\\phi xy\\). \nThis section explains notation that is not in Principia\nMathematica. Except for some notation for “relative”\ntypes in \\(\\ast 63\\), and again in early parts of Volume II, there are famously no symbols for types in\nPrincipia Mathematica! Sentences are generally to be taken as\n“typically ambiguous” and so standing for expressions of a\nwhole range of types and so just as there are no individual or\npredicate constants, there are no particular functions of any specific\ntype. So not only does one not see how to symbolize the argument: \nAll men are mortal\n\nSocrates is a man\n\nTherefore, Socrates is mortal\n \nbut also there is no indication of the logical type of the function\n“\\(\\hat{x}\\) is mortal”. The project of PM is to reduce\nmathematics to logic, and part of the view of logic behind this\nproject is that logical truths are all completely general. The\nderivation of truths of mathematics from definitions and truths of\nlogic will thus not involve any particular constants other than those\nintroduced by definition from purely logical notion. As a result no\nnotation is included in PM for describing those types. Those of us who\nwish to consider PM as a logic which can be applied, must supplement\nit with some indication of types. \nReaders should note that the explanation of types outlined below is\nnot going to correspond with the statements about types in the text of\nPM. Alonzo Church [1976] developed a simple, rational reconstruction\nof the notation for both the simple and ramified theory of types as\nimplied by the text of PM. (There are alternative, equivalent\nnotations for the theory of types.) The full theory can be seen as a\ndevelopment of the simple theory of types.  \nA definition of the simple types can be given as follows: \nHere are some intuitive ways to understand the definition of type.\nSuppose that “Socrates” names an individual. (We are here\nignoring Russell’s considered opinion that such ordinary\nindividuals are in fact classes of classes of sense data, and so of a\nmuch higher type.) Then the individual constant “Socrates”\nwould be of type \\(\\iota\\). A monadic propositional function which\ntakes individuals as arguments is of type \\((\\iota)\\). Suppose that\n“is mortal” is a predicate expressing such a function. The\nfunction “\\(\\hat{x}\\) is mortal” will also be of type\n\\((\\iota)\\). A two-place or binary relation between\nindividuals is of type \\((\\iota,\\iota)\\). Thus, a relation expression\nlike “parent of” and the function “\\(\\hat{x}\\) is a\nparent of \\(\\hat{z}\\)” will be of type \\((\\iota,\\iota)\\).  \nPropositional functions of type \\((\\iota)\\) are often called\n“first order”; hence the name “first order\nlogic” for the familiar logic where the variables only range\nover arguments of first order functions. A monadic function of\narguments of type \\(\\tau\\) are of type \\((\\tau)\\) and so functions of\nsuch functions are of type \\(((\\tau))\\). “Second order\nlogic” will have variables for the arguments of such functions\n(as well as variables for individuals). Binary relations between\nfunctions of type \\(\\tau\\) are of type \\((\\tau,\\tau)\\), and so on, for\nrelations of having more than 2 arguments. Mixed types are defined by\nthe above. A relation between an individual and a proposition (such as\n“\\(\\hat{x}\\) believes that \\(\\hat{P}\\)”) will be of type\n\\((\\iota\\),( )). \nTo construct a notation for the full ramified theory of types of PM,\nanother piece of information must be encoded in the symbols. Church\ncalls the resulting system one of r-types. The key idea of\nramified types is that any function defined using quantification over\nfunctions of some given type has to be of a higher “order”\nthan those functions. To use Russell’s example: \n\\(\\hat{x}\\) has all the qualities that great generals have\n \nis a function true of persons (i.e., individuals), and from the point\nof view of simple type theory, it has the same simple logical\ntype as particular qualities of individuals (such as bravery and\ndecisiveness). However, in ramified type theory, the above function\nwill be of a higher order than those particular qualities of\nindividuals, since unlike those particular qualities, it involves a\nquantification over those qualities. So, whereas the expression\n“\\(\\hat{x}\\) is brave” denotes a function of r-type\n\\((\\iota)/1\\), the expression “\\(\\hat{x}\\) has all the qualities\nthat great generals have” will have r-type \\((\\iota)/2\\). In\nthese r-types, the number after the “/” indicates the\nlevel of the function. The order of the functions will be\ndefined and computed given the following definitions. \nChurch defines the r-types as follows: \nThe order of an entity is defined as follows (here we no\nlonger follow Church, for he defines orders for variables, i.e.,\nexpressions, instead of orders for the things the variables range\nover): \nThese two definitions are supplemented with a principle which\nidentifies the levels of particular defined functions, namely, that\nthe level of a defined function should be one higher than the highest\norder entity having a name or variable that appears in the definition\nof that function. \nTo see how these definitions and principles can be used to compute the\norder of the function “\\(\\hat{x}\\) has all the qualities that\ngreat generals have”, note that the function can be represented\nas follows, where “\\(x, y\\)” are variables ranging over\nindividuals of r-type \\(\\iota\\) (order 0),\n“GreatGeneral\\((y)\\)” is a predicate denoting a\npropositional function of r-type \\((\\iota)/1\\) (and so of order 1),\nand “\\(\\phi\\)” is a variable ranging over propositional\nfunctions of r-type \\((\\iota)/1\\) (and so of order 1) such as\ngreat general, bravery, leadership,\nskill, foresight, etc.: \nWe first note that given the above principle, the r-type of this\nfunction is \\((\\iota)/2\\); the level is 2 because the level of the\nr-type of this function has to be one higher than the highest order of\nany entity named (or in the range of a variable used) in the\ndefinition. In this case, the denotation of GreatGeneral, and the\nrange of the variable “\\(\\phi\\)”, is of order 1, and no\nother expression names or ranges over an entity of higher order. Thus,\nthe level of the function named above is defined to be 2. Finally, we\ncompute the order of the function denoted above as it was defined: the\nsum of the level plus the greatest of the orders of the arguments of\nthe above function. Since the only arguments in the above function are\nindividuals (of order 0), the order of our function is just 2.  \nQuantifying over functions of r-type \\((\\tau)/n\\) of order \\(k\\) in a\ndefinition of a new function yields a function of r-type\n\\((\\tau)/n+1\\), and so a function of order one higher, \\(k+1\\). Two\nkinds of functions, then, can be of the second order: (1)\nfunctions of first-order functions of individuals, of r-type\n\\(((\\iota)/1)/1\\), and (2) functions of r-type \\((\\iota)/2\\), such as\nour example “\\(\\hat{x}\\) has all the qualities that great\ngenerals have”. This latter will be a function true of\nindividuals such as Napoleon, but of a higher order than simple\nfunctions such as “\\(\\hat{x}\\) is brave”, which are of\nr-type \\((\\iota)/1\\). \nLogicians today use a different notion of “order”. Today,\nfirst-order logic is a logic with only variables for individuals.\nSecond order logic is a logic with variables for both individuals and\nproperties of individuals. Third-order logic is a logic with variables\nfor individuals, properties of individuals, and properties of\nproperties of individuals. And so forth. By contrast, Church would\ncall these logics, respectively, the logic of functions of the types\n\\((\\iota)/1\\) and \\((\\iota,\\ldots,\\iota)/1\\), the logic of functions\nof the types \\(((\\iota)/1)/1\\) and\n\\(((\\iota,\\ldots,\\iota)/1,\\ldots,(\\iota,\\ldots,\\iota)/1)/1\\), and the\nlogic of functions of the types \\((((\\iota)/1)/1)/1\\) etc. (i.e., the\nlevel-one functions of the functions of the preceding type). Given\nChurch’s definitions, these are logics of first-, second- and\nthird-order functions, respectively, thus coinciding with the modern\nterminology of “\\(n\\)th-order logic”. \nAs mentioned previously, there are no individual or predicate\nconstants in the formal system of PM, only variables. The\nIntroduction, however, makes use of the example “\\(a\\) standing\nin the relation \\(R\\) to \\(b\\)” in a discussion of atomic facts\n(PM, 43). Although “\\(R\\)” is later used as a variable\nthat ranges over relations in extension, and\n“\\(a,b,c,\\ldots\\)” are individual variables, let us\ntemporarily add them to the system as predicate and individual\nconstants, respectively, in order to discuss the use of variables in\nPM. \nPM makes special use of the distinction between “real”, or\nfree, variables and “apparent”, or bound, variables. Since\n“\\(x\\)” is a variable, “\\(xRy\\)” will be an\natomic formula in our extended language, with “\\(x\\)” and\n“\\(y\\)” real variables. When such formulae are combined\nwith the propositional connectives \\(\\osim\\), \\(\\lor\\), etc., the\nresult is a matrix. For example, “\\(aRx \\ldot {\\lor}\n\\ldot xRy\\)” would be a matrix. \nAs we saw earlier, there are also variables which range over\nfunctions: “\\(\\phi\\), \\(\\psi\\), \\(\\ldots,f, g\\)”, etc. The\nexpression “\\(\\phi x\\)” thus contains two variables and\nstands for a proposition, in particular, the result of applying the\nfunction \\(\\phi\\) to the individual \\(x\\). \nTheorems are stated with real variables, which gives them a special\nsignificance with regard to the theory. For example, \nis a fundamental axiom of the quantificational theory of PM. In this\nPrimitive Proposition the variables “\\(\\phi\\)” and\n“\\(y\\)” are real (free), and the “\\(x\\)” is\napparent (bound). As there are no constants in the system, this is the\nclosest that PM comes to a rule of universal instantiation. \nWhitehead and Russell interpret “\\((x) \\sdot \\phi x\\)” as\n“the proposition which asserts all the values for\n\\(\\phi \\hat{x}\\)” (PM 41). The use of the word “all”\nhas special significance within the theory of types. They present the\n“vicious circle principle”, which underlies the theory of\ntypes, as asserting that \nSpecifically, then, a quantified expression, since it talks about\n“all” the members of a totality, must range over a\nspecific logical type in order to observe the vicious circle\nprinciple. Thus, when interpreting a bound variable, we must assume\nthat it ranges over a specific type of entity, and so types must be\nassigned to the other entities represented by expressions in the\nformula, in observance with the theory of types. \nA question arises, however, once one realizes that the statements of\nprimitive propositions and theorems in PM such as ∗10·1 are\ntaken to be “typically ambiguous” (i.e., ambiguous with\nrespect to type). These statements are actually schematic and\nrepresent all the possible specific assertions which can be derived\nfrom them by interpreting types appropriately. But if statements like\n∗10·1 are schemata and yet have bound variables, how do we\nassign types to the entities over which the bound variables range? The\nanswer is to first decide which type of thing the free variables in\nthe statement range over. For example, assuming that the variable\n\\(y\\) in ∗10·1 ranges over individuals (of type \\(\\iota)\\),\nthen the variable \\(\\phi\\) must range over functions of type\n\\((\\iota)/n\\), for some \\(n\\). Then the bound variable \\(x\\) will also\nrange over individuals. If, however, we assume that the variable \\(y\\)\nin ∗10·1 ranges over functions of type \\((\\iota)/1\\),\nthen the variable \\(\\phi\\) must range over functions of type\n\\(((\\iota)/1)/m\\), for some \\(m\\). In this case, the bound variable\n\\(x\\) will range over functions of type \\((\\iota)/1\\). \nSo \\(y\\) and \\(\\phi\\) are called “real” variables in\n∗10·1 not only because they are free but also because they can\nrange over any type. Whitehead and Russell frequently say that real\nvariables are taken to ambiguously denote “any” of their\ninstances, while bound variables (which also ambiguously denote) range\nover “all” of their instances (within a legitimate\ntotality, i.e. type). \nThe exclamation mark “!” following a variable for a\nfunction and preceding the argument, as in “\\(f\\bang\n\\hat{x}\\)”, “\\(\\phi \\bang x\\)”, “\\(\\phi\\bang\n\\hat{x}\\)”, indicates that the function is predicative,\nthat is, of the lowest order which can apply to its arguments. In\nChurch’s notation, this means that predicative functions are all\nof the first level, with types of the form \\((\\ldots)/1\\). As a\nresult, predicative functions will be of order one more than the\nhighest order of any of their arguments. This analysis is based on\nquotations like the following, in the Introduction to PM:\n \nUnfortunately in the summary of ∗12, we find “A predicative\nfunction is one which contains no apparent variables, i.e., is a\nmatrix” [PM, 167]. Reconciling this statement with that\ndefinition in the Introduction is a problem for scholars.\n \nTo see the shriek notation in action, consider the following\ndefinition of identity:  \nThat is, \\(x\\) is identical with \\(y\\) if and only if \\(y\\) has every\npredicative function \\(\\phi\\) which is possessed by \\(x\\). (Of course\nthe second occurrence of “=” indicates a definition, and\ndoes not independently have meaning. It is the first occurrence,\nrelating individuals \\(x\\) and \\(y\\), which is defined.)  \nTo see how this definition reduces to the more familiar definition of\nidentity (on which objects are identical iff they share the same\nproperties), we need the Axiom of Reducibility. The Axiom of\nReducibility states that for any function there is an equivalent\nfunction (i.e., one true of all the same arguments) which is\npredicative: \nTo see how this axiom implies the more familiar definition of\nidentity, note that the more familiar definition of identity is: \nfor \\(\\phi\\) of “any” type. (Note that this differs from\n∗13·01 in that the shriek no longer appears.) Now to prove\nthis, assume both ∗13·01 and the Axiom of Reducibility, and\nsuppose, for proof by reductio, that \\(x = y\\), and \\(\\phi\nx\\), and not \\(\\phi y\\), for some function \\(\\phi\\) of arbitrary type.\nThen, the Axiom of Reducibility ∗12·1 guarantees that there\nwill be a predicative function \\(\\psi \\bang\\), which is coextensive\nwith \\(\\phi\\) such that \\(\\psi \\bang x\\) but not \\(\\psi \\bang y\\),\nwhich contradicts ∗13·01. \nThe inverted Greek letter iota “\\(\\atoi\\)” is used in PM,\nalways followed by a variable, to begin a definite description.\n\\((\\atoi x) \\phi x\\) is read as “the \\(x\\) such that \\(x\\) is\n\\(\\phi\\)”, or more simply, as “the \\(\\phi\\)”. Such\nexpressions may occur in subject position, as in \\(\\psi(\\atoi x) \\phi\nx\\), read as “the \\(\\phi\\) is \\(\\psi\\)”. The formal part\nof Russell’s famous “theory of definite\ndescriptions” consists of a definition of all formulas\n“…\\(\\psi(\\atoi x) \\phi x\\)…” in which a\ndescription occurs. To distinguish the portion \\(\\psi\\) from the rest\nof a larger sentence (indicated by the ellipses above) in which the\nexpression \\(\\psi(\\atoi x) \\phi x\\) occurs, the scope of the\ndescription is indicated by repeating the definite description within\nbrackets: \nThe notion of scope is meant to explain a distinction which Russell\nfamously discusses in “On Denoting” (1905). Russell says\nthat the sentence “The present King of France is not bald”\nis ambiguous between two readings: (1) the reading where it says of\nthe present King of France that he is not bald, and (2) the reading on\nwhich denies that the present King of France is bald. The former\nreading requires that there be a unique King of France on the list of\nthings that are not bald, whereas the latter simply says that there is\nnot a unique King of France that appears on the list of bald things.\nRussell says the latter, but not the former, can be true in a\ncircumstance in which there is no King of France. Russell analyzes\nthis difference as a matter of the scope of the definite description,\nthough as we shall see, some modern logicians tend to think of this\nsituation as a matter of the scope of the negation sign. Thus, Russell\nintroduces a method for indicating the scope of the definite\ndescription. \nTo see how Russell’s method of scope works for this case, we\nmust understand the definition which introduces definite descriptions\n(i.e., the inverted iota operator). Whitehead and Russell define: \nThis kind of definition is called a contextual definition,\nwhich are to be contrasted with explicit definitions. An\nexplicit definition of the definition description would have to look\nsomething like the following: \nwhich would allow the definite description to be replaced in any\ncontext by whichever defining expression fills in the ellipsis. By\ncontrast, ∗14·01 shows how a sentence, in which there is\noccurrence of a description \\((\\atoi x)(\\phi x)\\) in a context\n\\(\\psi\\), can be replaced by some other sentence (involving \\(\\phi\\)\nand \\(\\psi\\)) which is equivalent. To develop an instance of this\ndefinition, start with the following example: \nExample.\n\nThe present King of France is bald.\n \nUsing \\(PKFx\\) to represent the propositional function of being a\npresent King of France and \\(B\\) to represent the propositional\nfunction of being bald, Whitehead and Russell would represent the\nabove claim as: \nwhich by ∗14·01 means: \nIn words, there is one and only one \\(b\\) which is a present King of\nFrance and which is bald. In modern symbols, using \\(b\\)\nnon-standardly, as a variable, this becomes:  \nNow we return to the example which shows how the scope of the\ndescription makes a difference: \nExample.\n\nThe present King of France is not bald.\n \nThere are two options for representing this sentence. \nand \nIn the first, the description has “wide” scope, and in the\nsecond, the description has “narrow” scope. Russell says\nthat the description has “primary occurrence” in the\nformer, and “secondary occurrence” in the latter. Given\nthe definition ∗14·01, the two PM formulas immediately above\nbecome expanded into primitive notation as: \nIn modern notation these become: \nThe former says that there is one and only one object which is a\npresent King of France and which is not bald; i.e., there is exactly\none present King of France and he is not bald. This reading is false,\ngiven that there is no present King of France. The latter says it is\nnot the case that there is exactly one present King of France which is\nbald. This reading is true.  \nAlthough Whitehead and Russell take the descriptions in these examples\nto be the expressions which have scope, the above readings in both\nexpanded PM notation and in modern notation suggest why some modern\nlogicians take the difference in readings here to be a matter of the\nscope of the negation sign.  \nThe circumflex “ˆ” over a variable preceding a\nformula is used to indicate a class, thus \\(\\hat{x} \\psi x\\) is the\nclass of things \\(x\\) which are such that \\(\\psi x\\). In modern\nnotation we represent this class as \\(\\{x \\mid \\psi x\\}\\), which is\nread: the class of \\(x\\) which are such that \\(x\\) has \\(\\psi\\).\nRecall that “\\(\\phi \\hat{x}\\)”, with the circumflex over a\nvariable after the predicate variable, expresses the propositional\nfunction of being an \\(x\\) such that \\(\\phi x\\). In the type theory of\nPM, the class \\(\\hat{x} \\phi x\\) has the same logical type as the\nfunction \\(\\phi \\hat{x}\\). This makes it appropriate to use the\nfollowing contextual definition, which allows one to eliminate the\nclass term \\(\\hat{x} \\psi x\\) from occurrences in the context \\(f\\):\n\n\\[\n\\tag*{∗20·01} \n f\\{ \\hat{z}(\\psi z)\\} \\ldot {=} \\colon (\\exists \\phi) \\colon \\phi \\bang x \\ldot  {\\equiv_x} \\ldot  \\psi x \\colon f \\{ \\phi\\bang \\hat{z}\\}  \\quad\\Df\n\\]\n\n or in modern notation: \n\n\\[\nf\\{z \\mid \\psi z\\} =_{df} \\exists \\phi[\\forall x(\\phi x \\equiv \\psi x) \\amp f(\\lambda x \\phi x)]\n\\]\n\n where \\(\\phi\\) is a\npredicative function of \\(x\\) \nNote that \\(f\\) has to be interpreted as a higher-order function which\nis predicated of the function \\(\\phi \\bang \\hat{z}\\). In the modern\nnotation used above, the language has to be a typed language in which\n\\(\\lambda\\) expressions are allowed in argument position. As was\npointed out later (Chwistek 1924, Gödel 1944, and Carnap 1947)\nthere should be scope indicators for class expressions just as there\nare for definite descriptions. (The possibility of scope ambiguities in propositions about classes is mentioned in the final sentences of the Introduction (PM I, 84)). Chwistek, for example, proposed copying\nthe notation for definite descriptions, thus replacing ∗20·01\nwith: \nContemporary formalizations of set theory make use of something like\nthese contextual definitions, when they require an\n“existence” theorem of the form \\(\\exists x\\forall y(y \\in\nx \\equiv \\ldots y\\ldots)\\), in order to justify the introduction of a\nsingular term \\(\\{y \\mid \\ldots y\\ldots \\}\\). See Suppes (1960). Given the law of\nextensionality, it follows from \\(\\exists x\\forall y(y \\in x \\equiv\n\\ldots y\\ldots)\\) that there is a unique such set. The relation of\nmembership in classes \\(\\in\\) is defined in PM by first defining a\nsimilar relationship between objects and propositional functions:\n\n\\[\n\\tag*{∗20·02}\nx \\in (\\phi\\bang \\hat{z})  \\ldot {=} \\ldot  \\phi \\bang x \\quad\\Df \n\\]\n\n or, in modern notation: \n\n\\[\nx \\in \\lambda z\\phi z =_{df} \\phi x\n\\]\n\n  \n∗20·01 and ∗20·02 together are then used to define the\nmore familiar notion of membership in a class. The formal expression\n“\\(y \\in \\{ \\hat{z}(\\phi z)\\}\\)” can now been seen as a\ncontext in which the class term occurs; it is then eliminated by the\ncontextual definition ∗20·01. (Exercise) \nPM also has Greek letters for classes: \\(\\alpha, \\beta, \\gamma\\), etc.\nThese will appear as bound (real) variables, apparent (free) variables\nand in abstracts for propositional functions true of classes, as in\n\\(\\phi \\hat{\\alpha}\\). Only definitions of the bound Greek variables\nappear in the body of the text, the others are informally defined in\nthe Introduction: \n\n\\[\n\\tag*{∗20·07}  \n(\\alpha) \\sdot f \\alpha \\ldot {=} \\ldot  (\\phi) \\sdot  f \\{ \\hat{z}(\\phi\\bang z)\\} \\quad\\Df\n\\]\n\n or, in modern notation,\n\n\\[\n\\forall \\alpha\\, f\\alpha =_{df} \\forall \\phi f\\{z\\mid\\phi z\\}\n\\]\n\n where \\(\\phi\\) is a predicative function.  \nThus universally quantified class variables are defined in terms of\nquantifiers ranging over predicative functions. Likewise for\nexistential quantification: \n\n\\[\n\\tag*{∗20·071} \n (\\exists \\alpha) \\sdot f \\alpha \\ldot {=} \\ldot  (\\exists \\phi) \\sdot  f \\{ \\hat{z}(\\phi\\bang z)\\} \\quad\\Df\n\\]\n\n or, in modern notation,\n\n\\[\n\\exists \\alpha\\, f\\alpha =_{df} \\exists \\phi f\\{z\\mid\\phi z\\}\n\\]\n\n where \\(\\phi\\) is a predicative function.  \nExpressions with a Greek variable to the left of \\(\\in\\) are defined:\n\n\\[\n\\tag*{∗20·081}\n\\alpha \\in \\psi\\bang \\hat{\\alpha} \\ldot {=} \\ldot  \\psi \\bang \\alpha  \\quad\\Df\n\\]\n\n  \nThese definitions do not cover all possible occurrences of Greek\nvariables. In the Introduction to PM, further definitions of \\(f\n\\alpha\\) and \\(f \\hat{\\alpha}\\) are proposed, but it is remarked that the\ndefinitions are in some way peculiar and they do not appear in the\nbody of the work. The definition considered for \\(f \\hat{\\alpha}\\)\nis: \nor, in modern notation, \nThat is, \\(f \\hat{\\alpha}\\) is an expression naming the function which\ntakes a function \\(\\phi\\) to a proposition which asserts \\(f\\) of the\nclass of \\(\\phi\\)s. (The modern notation shows that in the proposed\ndefinition of \\(f \\hat{\\alpha}\\) in PM notation, we shouldn’t\nexpect \\(\\alpha\\) in the definiens, since it is really a bound\nvariable in \\(f \\hat{\\alpha}\\); similarly, we shouldn’t expect\n\\(\\phi\\) in the definiendum because it is a bound variable in the\ndefiniens.) One might also expect definitions like ∗20·07 and\n∗20·071 to hold for cases in which the Roman letter\n“\\(z\\)” is replaced by a Greek letter. The definitions in\nPM are thus not complete, but it is possible to guess at how they\nwould be extended to cover all occurrences of Greek letters. This\nwould complete the project of the “no-classes” theory of\nclasses by showing how all talk of classes can be reduced to the\ntheory of propositional functions. \nAlthough students of philosophy usually read no further than ∗20 in\nPM, this is in fact the point where the “construction” of\nmathematics really begins. ∗21 presents the “General Theory of\nRelations” (the theory of relations in extension; in\ncontemporary logic these are treated as sets of ordered pairs,\nfollowing Wiener). \\(\\hat{x} \\hat{y} \\psi(x, y)\\) is the relation\nbetween \\(x\\) and \\(y\\) which obtains when \\(\\psi(x, y)\\) is true. In\nmodern notation we represent this as as the set of ordered pairs\n\\(\\{\\langle x, y \\rangle \\mid \\psi(x, y)\\}\\), which is read: the\nset of ordered pairs \\(\\langle x, y \\rangle\\) which are such that\n\\(x\\) bears the relation \\(\\psi\\) to \\(y\\).  \nThe following contextual definition (∗21·01) allows one\nto eliminate the relation term \\(\\hat{x} \\hat{y}\\psi (x, y)\\) from\noccurrences in the context \\(f\\):  \nor in modern notation:  \nwhere \\(\\phi\\) is a predicative function of \\(u\\) and \\(v\\). \nPrincipia does not analyze relations (or mathematical\nfunctions) in terms of sets of ordered pairs, but rather takes the\nnotion of propositional function as primitive and defines relations\nand functions in terms of them. The upper case letters \\({R}, {S}\\)\nand \\({T}\\), etc., are used after ∗21 to stand for these\n“relations in extension”, and are distinguished from\npropositional functions by being written between the arguments. Thus\nit is \\(\\psi(x,y)\\) with arguments after the propositional function\nsymbol, but \\(xRy\\). From ∗21 functions “\\(\\phi\\) and\n\\(\\psi\\)”, etc., disappear and only relations in extension,\n\\({R}\\), \\({S}\\) and \\({T}\\), etc., appear in the pages of \nPrincipia. While propositional functions might be true of the\nsame objects yet not be identical, no two relations in extension are\ntrue of the same objects. The logic of Principia is thus\n“extensional”, from page 200 in volume I, through to the\nend in Volume III.  \n∗22 on the “Calculus of Classes” presents the elementary\nset theory of intersections, unions and the empty set which is often\nall the set theory used in elementary mathematics of other sorts. The\nstudent looking for the set theory of Principia to compare it\nwith, say the Zermelo-Fraenkel system, will have to look at various\nnumbers later in the text. The Axiom of Choice is defined at ∗88 as\nthe “Multiplicative Axiom” and a version of the Axiom of\nInfinity appears at ∗120 in Volume II as “Infin ax”. The\nset theory of Principia comes closest to Zermelo’s\naxioms of 1908 among the various familiar axiom systems, which means\nthat it lacks the Axiom of Foundation and Axiom of Replacement of the\nnow standard Zermelo-Fraenkel axioms of set theory. \nThe system of Principia differs importantly from\nZermelo’s in that it is formulated in the simple theory of\ntypes. As a result, for example, there are no quantifiers ranging over\nall sets, and there is a set of all things (for each type).\n \n∗30 on “Descriptive Functions” provides Whitehead and\nRussell’s analysis of mathematical functions in terms of\nrelations and definite descriptions. Frege had used the notion of\nfunction, in the mathematical sense, as a basic notion in his logical\nsystem. Thus a Fregean “concept” is a function from\nobjects as arguments to one of the two “truth values” as\nits values. A concept yields the value “True” for each\nobject to which the concept applies, and “False” for all\nothers. Russell, from 1904, well before the writing of\nPrincipia had preferred to analyze functions in terms of the\nrelation between each argument and value, and the notion of\n“uniqueness”. With modern symbolism, his view would be\nexpressed as follows. For each function \\(\\lambda x f(x)\\), there will\nbe some relation (in extension) \\(R\\), such that the value of the\nfunction for an argument \\(a\\), that is \\(f(a)\\), will be the unique\nindividual which bears the relation \\(R\\) to \\(a\\). (Nowadays we\nreduce functions to a binary relation between the argument in the\nfirst place and value in the second place.) The result is that there\nare no function symbols in Principia. As Whitehead and\nRussell say, the familiar mathematical expressions such as\n“\\(\\sin \\pi/2\\)” will be analyzed with a relation and a\ndefinite description, as a “descriptive function”. The\n“descriptive function”, \\(R‘y\\) (the \\(R\\) of\n\\(y)\\), is defined as follows:  \nWe conclude this section by presenting a number of prominent examples\nfrom these remainder of Volume I, with their intuitive meaning, location\nin PM, definition in PM, and a modern equivalent. (Some of these\nnumbers are theorems rather than definitions.) Note, however, that the\nmodern equivalent will sometimes logically differ from the original\nversion in PM, such as by treating relations as sets of ordered pairs,\netc. In his account of the logic of Principia, W.V. Quine\n(1951) objects to the complexity and even redundancy of much of this\nsymbolism in comparison with axiomatic set theory.  These formulas can be worked out, however, with a step by\nstep application of the definitions.\n \nFor each formula number, we present the information in the following\nformat: \n\\(\\ast 38\\) Double descriptive functions. A range of operations between individuals, classes, or relations, that are treated as  operations  on their arguments. The operation of intersection can be represented as a higher order function of its first argument. Thus \\(\\cap \\beta ` \\alpha = \\alpha \\cap \\beta\\). Other operations correspond to \\(\\downarrow\\), \\(\\mid\\), and \\(+_c\\). The following are instances of [∗38·02] and  [∗38·03] for operations that are to be defined later.   Contemporary philosophers would consider the transition to mathematics to begin with the theory of sets, but in PM that is also a part of Mathematical Logic. The Prolegomena to Arithmetic thus begins with the definitions in terms of logic of explicitly arithmetical notions, the cardinal numbers 1 and 2.     \nThe paperback abridged edition of Principia Mathematica to\n∗56 only goes this far, so the remaining definitions have only\nbeen available to those with access to the full three volumes of\nPM. Russell did not make the decision to end the 1962 abridged version\nat this point, but the choice is understandable. It is here that\ncontemporary set theory begins to look even more different from PM.\nSet theory follows  Norbert Wiener (1914) by representing\nrelations as sets of ordered pairs, which themselves defined as sets. (Wiener's proposal of  \\(\n\\langle x, y \\rangle =_{df} \\{ \\{ \\{x \\}, \\emptyset \\}, \\{ \\{y \\} \\} \\}\n\\) has generally been replaced by Kuratowski's simpler \\(\\{ \\{x \\}, \\{ x,y \\} \\}\\)) . The remainder of PM examines the structure of relations that lead\nto the mathematics of natural and real numbers, and the portion of\nthe theory of transfinite sets that can be carried out in the theory of types. This\nlooks very different from the development of these notions in\naxiomatic set theory.  \n\\(\\ast 63\\) Relative Types of Classes.  The simple theory\nof types of classes allows for expressions relating classes of\ndifferent types. The gap between set theory and the theory of classes\nin PM comes from the lack of a cumulative theory of classes\nof any type. These restricted cases allow definitions of\nrelations between, say, individuals and classes of individuals. These\nare needed in the account of real numbers in terms of classes of\nclasses of ratios in Volume III. \n\\(\\ast 80\\) Selections. A selection function for a\nclass \\(\\kappa\\) is a function \\(f\\) making each element \\(x\\)\nof \\(\\kappa\\) to a member of \\(x\\). These are denoted by \\(\n\\in_{\\Delta} `\\kappa\\). The cardinal number of the product of two\nclasses \\(\\alpha X \\beta\\) is the cardinal number of the class of\nall pairs of members selected from \\(\\alpha\\) and \\(\\beta\\). The\nguarantee that such selections exist is called the Multiplicative\nAxiom  in PM. This is now known as the Axiom of Choice,\nwhich had been identified as an assumption used in proofs in set\ntheory by Ernst Zermelo in 1904. In PM it is defined as asserting that\nif a class \\(\\kappa\\) is a set of mutually exclusive, non-empty\nclasses, then there exists a class \\(\\mu\\) which contains exactly\none member of each element of \\(\\kappa\\). \n\\(\\ast 90\\) Inductive Relations. The concluding section of\nVolume I presents a generalization of the structure of the natural\nnumbers that underlies the principle of mathematical induction.  \nWith \\(\\ast 100\\) at the start of Volume II, Principia\nMathematica finally begins developing the theory of cardinal\nnumbers with the Frege-Russell Definition of numbers as\nclasses of equinumerous classes. \nThe reader can now appreciate why this elementary theorem is not proved until page 83 of Volume II of PM: \nWhitehead and Russell remark that “The above proposition is\noccasionally useful. It is used at least three times, in\n…”. This joke reminds us that the theory of natural\nnumbers, so central to Frege’s works, appears in PM as only a\nspecial case of a general theory of cardinal and ordinal numbers and\neven more general classes of isomorphic structures. \nThe following theorem, that the cardinality of the power set of \\(\\alpha\\) is 2 raised to the power of the cardinality of \\(\\alpha\\),  \\(\\; \\bar{\\bar{ \\wp{\\alpha} }} = 2^{\\bar{\\bar{\\alpha}}}\\), is called “Cantor's Proposition”, and is said to be “very useful” (PM II, 140):\n \nThe more familiar result, Cantor's Theorem, proves the power set of \\(\\alpha\\) is strictly larger, \\(2^{\\bar{\\bar{\\alpha}}} > \\bar{\\bar{ \\alpha }}\\).\n The notion of relation number, is the generalization of\nthe notion of a well-ordering to an arbitrary relation.  Just as a\ncardinal number is defined in PM as a class of equinumerous classes,\nan arbitrary relation number is a class of  ordinally\nsimilar  relations. \n\\(\\ast 170\\) The relation of first differences orders\nclasses on the basis of an ordering of their members. The method is a\nvariation on the notion of lexicographic ordering of classes\nas in the alphabetical ordering of words in a dictionary. See Fraenkel\n(1968). PM uses two versions of the notion. \n“Series” in PM are  linear\norderings. Volume II concludes halfway through this part, with\nVolume III beginning at \\(\\ast250\\) and the theory of\nwell-orderings. These concepts are defined in the now standard way.\nThis section is only alien to the modern reader because of the\nnotation. \n Volume III begins with \\(\\ast 250\\)\n on well-orderings. An ordinal number is then\n defined as a class of ordinary similar well-orderings.\n \n“Zermelo’s Theorem”, that the Multiplicative Axiom (Axiom\nof Choice) implies that every set can be well-ordered, is derived in\n\\(\\ast 258\\).  This was first proved in Zermelo (1904).\n\n  The last section of PM studies the rational numbers\nand real numbers. They are constructed from relations between\nentities, such as being longer than, or being heavier\nthan, that might be measured with a ruler or balance\nscale. Contemporary measurement theory studies the relations\namong entities in order to determine which scales, or systems\nof independently characterized numbers, might be assigned to them as\nrepresenting the “quantities” of various properties, such\nas length or weight, that they possess.  Notice that the real numbers are not constructed as classes of rational numbers, but are of a uniform type as “Dedekind cuts” in a series of classes of ratios.  This summary cites about 90 definitions. The last eight pages\n(667–674) of Volume I of the second edition (1925) consists of a\ncomplete list of 498 definitions from all three\nvolumes. Correspondence in the Bertrand Russell Archives confirms that\nthis was compiled by Dorothy Wrinch. Her list can be used to\ntrace every one of the other defined expressions of PM back to the\nnotation discussed in this entry.","contact.mail":"bernard.linsky@ualberta.ca","contact.domain":"ualberta.ca"}]
