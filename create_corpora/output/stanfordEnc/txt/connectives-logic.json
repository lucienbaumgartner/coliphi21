[{"date.published":"2010-05-04","date.changed":"2020-01-28","url":"https://plato.stanford.edu/entries/connectives-logic/","author1":"Lloyd Humberstone","entry":"connectives-logic","body.text":"\n\n\nNatural language sentence-linking words (like “and”,\n“or”) have traditionally had aspects of their use\nsimulated by corresponding connectives in various systems of formal\nlogic. (In fact we use the word “connective” more\ngenerously, so that there don’t have to be two or more sentences\nlinked, allowing us to consider the analogues of words like\n“not” and “necessarily” as connectives too.)\nAmong the questions this enterprise has raised are the following.\n(1) Which such naturally occurring sentence connectives call for a\ntreatment of this kind? (Which of them should be counted as\n‘logical constants’?) (2) Do the aspects of their use\nwhich are simulated in that process exhaust what we might think of as\ntheir meanings, or is there typically some mismatch here? Of\ncourse this second question depends on the particular formal treatment\ngiven, since different logics may disagree on the formal principles\naccorded to their representatives—for example in the case of\n“if”, but according to one famous line of thought\n(developed by H. P. Grice) when we focus specifically on their\ntreatment in classical propositional logic, any such apparent\ndiscrepancies can be explained away by appeal to pragmatic principles\nregulating ordinary cooperative conversation, and do not reflect\ndifferences of meaning (semantic differences).\n\n\nNeither question (1) nor question (2) will be addressed here. Instead,\nthis entry focusses on the properties of—and relations\nbetween—the formal representatives of these connectives.\nExamples of such properties include truth-functionality and a\nreplacement property called congruentiality, and of such relations\nwhat we call the subconnective relation—relating one\nconnective to another when (roughly speaking) every logical principle\nholding for the first of a pair of connectives also holds for the\nsecond. In fact, all of these concepts are subject to a further\nrelativity. For instance a connective is or is not congruential\naccording to a given logic, with a similar relativity in the\ncase of whether one connective is a subconnective of another. On the\nother hand, as truth-functionality is defined below, a connective is\nor is not truth-functional with respect to a class of\ntruth-value assignments—and various interesting further\nrelations give rise to a corresponding logic-relative version of this\nconcept depending on the different ways a class of truth-value\nassignments is linked to a logic (which in turn depends on how we\nthink of a logic—as an ordinary consequence relation, for\nexample, or as a ‘multiple conclusion’ consequence\nrelation: see further note 1 below). For some other properties, the\nfurther relativity is a bit different. For example, whether a given\nconnective is uniquely characterized—in the sense of\nbeing governed by rules which when reduplicated to govern a new\nconnective render compounds formed from the same component sentences\nusing the original and the new connective completely\ninterchangeable—is relative not just to a logic but to a\nparticular proof system (set of rules systematizing the logic).\n\n\nSection 1 introduces the idea of formal sentential languages as\n(absolutely free) algebras, their primitive connectives having the\nstatus of the fundamental operations of these algebras, and explains\nthe notion of a consequence relation on such a language. At a more\ngeneral level, Galois connections are also introduced, and a simple\nobservation made concerning what we call binary relational\nconnections, to be applied in later sections. Section 2 introduces the\nfundamental idea of a valuation for a language (a bivalent truth-value\nassignment to its formulas). Truth-functionality and a generalization\nthereof called pseudo-truth-functionality (of a connective with\nrespect to a class of valuations) are explained, as well as the idea\nof sequents and sequent-to-sequent rules. We then move to a more\ngeneral conception of sequents as originally conceived, allowing a set\nof formulas to play the conclusion role rather than just a single\nformula, as well as to the associated idea of generalized consequence\nrelations, emphasizing Carnap’s motivation for making this\ngeneralization. That motivation can be summarised with reference to\none connective. We take negation as our example. Consider the\nconsequence relation determined by the class of all valuations on\nwhich the usual negation truth-function connective is associated with\nthe negation connective. This can be regarded as the classical logic\nof negation, at least if logics are identified with consequence\nrelations. Now, there are additional valuations consistent with this\nconsequence relation on which the negation truth-function is\nnot associated with the negation connective. (The terminology\nof a valuation’s being consistent with a consequence relation is\nadapted from Dana Scott. A precise definition appears in Section 2.)\nBut when we consider instead generalized consequence relations, the\nanalogous discrepancy does not arise. Section 2 includes a statement\nof a result of D. Gabbay which isolates precisely the truth-functions\nfor which such discrepancies do not arise (roughly: generalizations of\nthe conjunction truth-function and various projection functions), as\nwell as of a result of W. Rautenberg showing that despite this\nexpressive weakness in the apparatus of consequence relations, they\nare sufficiently discriminating—without the need to pass to\ngeneralized consequence relations—to distinguish the logical\nproperties of any two truth-functions (of the same arity).\n\n\nSection 3 picks up the theme of sequent-to-sequent rules,\nconcentrating on semantic analysis in the style of J. W. Garson of\nsuch rules, and also on the existence and uniqueness of connectives\nsatisfying given rules (a topic introduced by H. Hiż). These last\ntwo are seen to be connected with what we call cut-inductivity and\nid-inductivity of specifically sequent-calculus rules, via, in the\nformer case, a proposal identifying the existence of a connective\n(with prescribed logical behaviour, given the perspective provided by\na logic not explicitly providing such a connective) with conservative\nextension (of the given logic by rules for the new connective\ndetailing that behaviour). This proposal was made by N. D. Belnap;\nsome problems for conservative extension as a sufficient condition for\ngranting the existence or intelligibility of a new connective with\nsuch-and-such logical properties are noted. Section 4 collects several\ncases of interest in which one might wonder about the existence of\nconnectives with various such properties. For instance (this being\nExample 3 out of a total of seven) one might ask if it makes sense to\nhave a 1-ary connective with the property that two applications of\nthis connective are equivalent to a single application of (classical)\nnegation. Section 5 assembles supplementary notes and references.\n\nThe connectives of the formal languages of propositional logic are\ntypically expected to exhibit salient features of the\nsentence-connecting devices of natural languages, and especially such\ndevices as are regarded as items of logical vocabulary (and,\nor, not, if–then,…), though it\nwill be no part of our concern to inquire as to what their\n‘logicality’ consists in. This is an issue which arises\nfor expressions and constructions such as quantifiers, the identity\npredicate, and so on, and not just for sentence connectives; for this\nissue the entry “Logical Constants” by John MacFarlane\n(2015) should be consulted. The formal languages concerned may be\ntaken to agree in constructing their formulas ultimately on the basis\nof the same countably infinite supply of propositional\nvariables—or ‘sentence\nletters’—p1,\np2,…, the first three of which we write for\nconvenience as p, q, r. Where they differ\nis in respect of their stock of primitive connectives. So for example,\nwe have the language L = (L, ∧,\n→, ¬, ⊥) with (set of) formulas L and\nconnectives as indicated, of arities 2, 2, 1 and 0. (We have no qualms\nin the last two cases in speaking of connectives, even when there are\nnot two or more formulas to ‘connect’. Note that 0-ary or\nnullary connectives are already formulas—sometimes called\nsentential constants—in their own right.) As the notation\nsuggests (with boldface capitals for algebras and the corresponding\nitalic capitals for their universes), we are thinking—in the\nPolish tradition—of languages as algebras, identifying the\nprimitive connectives with the fundamental operations of such\nalgebras, and in particular, as absolutely free algebras of their\nsimilarity types (in the present instance, 〈2,2,1,0〉) with\nthe pi as free generators. This allows us\nto speak in the usual fashion of the main connective of a\ngiven formula, the variables occurring in and more generally\nthe subformulas of such and such a formula, and so on,\nwithout restricting ourselves to construing the formulas as obtained\nspecifically by concatenating various symbols. \nAlongside this ‘syntactic operation’ sense of\nconnective—explained above for the primitive\nconnectives and extended to derived connectives\npresently—another use of the term is indispensable: to refer to\na connective with particular logical behaviour, as when people want to\ncompare the behaviour of intuitionistic and classical implication. In\ndue course we will see the notion of a consequence relation as one way\nof specifying such behaviour. If ⊢ is such a relation there is a\nunique language in the above sense which is the language of ⊢\nand we can think of this ‘logically loaded’ sense of\nconnective as applying to the ordered pair 〈#,\n⊢〉; thus in the case of intuitionistic implication this\nwould be 〈→,\n⊢I L〉, where\n⊢I L is the consequence relation of\nintuitionistic logic. (In fact it would be preferable to take\nequivalence classes of such pairs under a relation of translational\nequivalence but we will make no further explicit use of these ordered\npairs or any such equivalence classes, and keep this aspect of the\ndiscussion relatively informal. Instead of saying “〈#,\n⊢〉”, we will say things like “# as it behaves\naccording to ⊢”. It would be better still to use not\nconsequence relations—or the later introduced generalized\nconsequence relations—as the second coordinate of the\nrepresentatives 〈#, ⊢〉 but instead to insert here a\nreference to a proof system—a set of sequent-to-sequent rules of\nthe kind introduced below, that is—since important differences\nbetween logics fail to show up at the level which would individuate\nthem merely as consequence\n relations.[1]) \nThe ‘languages as algebras’ perspective also allows us the\nconvenience of defining matrix evaluations (see Section\n 5)\n as just homomorphisms from the algebra of formulas to the algebra of\nthe matrix in question, of defining derived connectives and\n(sentential) contexts as term functions (formerly known as polynomial\nfunctions) and algebraic functions (now commonly called polynomial\nfunctions) respectively, and so on. This treatment would need some\nemendation were the discussion to embrace infinitary connectives,\nbranching connectives, and various other exotic devices, but there\nwill be enough to consider without touching on these. \nFor example, there is the issue raised by the use of the notation\nabove for the operations of L. Such a choice suggests that\n∧, →, ¬ will represent conjunction, implication (or the\nconditional) and negation—that is, be intended to capture some\naspect of the behaviour of and, if–then, and\nnot, respectively—and that ⊥ will be some kind of\nfalsity constant. (Similarly, while we are fixing notation, if we had\nwritten “∨”, “↔”, or\n“⊤”, we would be arousing expectations of\ndisjunction, equivalence—or biconditionality—and a truth\nconstant, respectively.) We can think of this as a matter of the\ninference patterns to be sanctioned by some proof system offered for\nL, or as a matter of how the formulas of this language are to\nbe interpreted by assigning suitable semantic values to them\n(truth-values being the simplest candidates here). We refer to the\nformer as a proof-theoretic or syntactical characterization of the\nlogic and the latter as a semantical characterization. The terminology\nis somewhat unfortunate in that a perfectly respectable view in the\nphilosophy of logic (going back at least to Gentzen) has it that the\nmeanings of items of logical vocabulary, such as the\nconnectives of current concern, for a particular reasoner, are given\nby a specification of the set of primitive rules, or a\nfavoured subset thereof, governing those items in a proof system\nrepresenting that reasoner’s (perhaps idealized) inferential\n practices.[2]\n We take up some of those issues later, beginning with a reprise of\nthe semantical side of the story at the start of the following\nsection. \nWe need first some general preliminaries, and forgetting the intended\napplication(s) for a moment, let us define, given sets S and\nT, a pair of functions (f, g) to be a\nGalois connection between S and T when\n f: ℘(S) →\n℘(T) and g:\n℘(T)→ ℘(S), and for all\nS0, S1 ⊆ S,\nT0, T1 ⊆ T, we\nhave S0 ⊆\ng(f(S0)), T0\n⊆ f(g(T0)),\nS0 ⊆ S1 ⇒\nf(S1) ⊆\nf(S0), and T0\n⊆ T1 ⇒\ng(T1) ⊆\ng(T0). It is well known that the\ncomposition of g with f (respectively, f\nwith g) in such a case is a closure operation on\nS (respectively, on T) in the sense of being a\nfunction (we do the S case) C:\n℘(S) → ℘(S) satisfying,\nfor all subsets S0, S1, of\nS: \nFurther, where R ⊆ S × T, the\ntriple 〈R, S, T〉, which we may\ncall a binary relational connection (between S and\nT), induces a Galois connection (fR,gR)\nbetween S and T when we put, for all\nS0 ⊆ S, T0⊆\nT: \n(“S” and “T” here are\nmnemonic for “Source” and “Target”\nrespectively; note that we do not require S ∩ T\n= ∅, or even that S ≠ T.) Suppose we\nconsider, not the sentential languages of our opening paragraph but\nrather first-order languages, and take S as the set of closed\nformulas of such a language and T as the set of models\n(interpretations, structures,…) for that language, then with\nR as the relation holding between a closed formula φ and\na structure M when M\n⊨ φ,\nfR(S0) and\ngR(T0) are usually\ndenoted by Mod(S0) and\nTh(T0). (The labels are intended to\nsuggest “class of all models of” and “theory\nof”, respectively.) In this case the derived closure operations\nTh ○ Mod (mapping\nS0 to\nTh(Mod(S0))) and\nMod ○ Th (understood\nanalogously) on S and T respectively deliver the set\nof first-order consequences of S0 and the set of\nall models verifying all the sentences verified by every M\n∈ T0. When there is\nonly one such M in the latter case, what\nis delivered is the class of structures elementarily equivalent to\nM. (Here we are thinking of classical\nfirst-order model theory.) \nReturning to the former case: as this use of the term\n‘consequences’ reminds us, a closure operation on the set\nof formulas of some language is conventionally called a\nconsequence operation, and perhaps to use the notation\nCn(⋅) rather than simply C(⋅), though it\nis often more convenient to talk in terms of the corresponding\nconsequence relation, holding between a set of formulas\nΓ and an individual formula φ—notated in some such way\nas “Γ ⊩ φ”, “Γ ⊢\nφ”, etc.—when φ ∈ Cn(Γ); when\nthe relation has been defined semantically it is not uncommon to press\n“⊨” into service in this role. (This will occur once\nor twice below.) Certain shortcuts are usually taken with this\nnotation, so that one writes, for example “Γ, Δ,\nφ, ψ ⊢ χ” and “⊢ φ” to\nmean “Γ ∪ Δ ∪ {φ,ψ} ⊢\nχ” and “∅ ⊢ φ”, respectively.\n(For the moment, capital Greek letters range over sets of formulas.)\nThe conditions given earlier for C’s being a closure\noperation can be recast as conditions definitive of a consequence\nrelation, conditions we do not give explicitly here. A consequence\nrelation ⊢ on some language is finitary if whenever\nΓ ⊢ φ then we have Γ0 ⊢ φ\nfor some finite Γ0 ⊆ Γ; to be\nsubstitution-invariant whenever Γ ⊢ φ then\ns(Γ) ⊢ s(φ) where s is any\nsubstitution, i.e., any endomorphism of the algebra of formulas (and\ns(Γ) is {s(ψ) | ψ ∈ Γ});\nand, finally, to be congruential when φ ⊣⊢\nψ implies χ(φ) ⊣⊢ χ(ψ), in which the\nnotation is to be understood as follows. “φ ⊣⊢\nψ” abbreviates “φ ⊢\nψ and ψ⊢ φ”\n(and if we are decorating the turnstile “⊢” with\nsuperscripts or subscripts, these are written only on the ⊢ and\nnot also on the ⊣ part of the composite notation); χ is some\nformula constructed from propositional variables including at least\none, pk, say—to indicate which we\nmay sometimes write χ =\nχ(pk)—and χ(φ), for a\nformula φ, is the result of substituting φ for all occurrences\nof pk in χ. (So χ(φ) is\ns(χ) for the unique substitution s for which\ns(pi) =\npi for i ≠ k and\ns(pk) = φ.) The\nχ(⋅) notation amounts to thinking of χ as a (sentential)\ncontext, and putting φ into this context amounts to\nproducing the formula χ(φ); more generally, we can think of an\nn-ary context as a formula containing n\ndistinguished propositional variables\npk1,…,\npkn, say—and\nperhaps additional variables\n too.[3]\n If there are no additional variables, then the formula\nχ(pk1,…,\npkn) can be thought\nof as a derived or composite connective of the language under\nconsideration. Returning to the 1-ary case, when φ ⊣⊢\nψ we describe φ and ψ as equivalent according to\n⊢, and, following Smiley (1962), when for all χ(⋅), the\nformulas χ(φ) and χ(ψ) are equivalent according to\n⊢, we describe φ and ψ as synonymous (according\nto ⊢). Thus a congruential consequence relation is one for which\nany equivalent formulas are synonymous. \nThe characterization of the (classical first-order) consequence\nrelation given above was semantic, in that we described it in terms of\nthe consequence operation\nTh ○ Mod which invokes the\nstructures for the language and what is true in them. A proof system\nfor first-order logic provides a direct syntactic account of when\nφ is a consequence of Γ, in terms of derivability using\nrules (and perhaps axioms) sensitive only to the form of the formulas\ninvolved. We could discuss the properties of sentence connectives in\nterms of such quantified languages (in which open as well as closed\nsentences can be their arguments) but to avoid extraneous\ncomplications prefer the setting of the propositional languages with\nwhich we began. And, as in the discussion to this point, we will\ngenerally just say “connective”, rather than\n“sentence connective”. \nAny binary relational connection 〈R, S,\nT〉, as above, will be said to have conjunctive\ncombinations on the left (right) if for any\ns0, s1 ∈ S there\nexists s2 ∈ S such that for all\nt ∈ T, R(s2,\nt) just in case R(s0,\nt) and R(s1,\nt) (respectively, for any t0,\nt1 ∈ T there exists\nt2 ∈ T such that for all s\n∈ S, R(s, t2) just\nin case R(s, t0) and\nR(s, t1)); we call\ns2 (respectively, t2) a\nconjunctive combination of s0 and\ns1 (t0 and\nt1) in this case. Replacing the two\n“and”s after the words “just in case” by\n“or” gives the notion of disjunctive combinations\non the left and right of 〈R,\nS, T〉. Both notions admit of an obvious\ngeneralization to the case in which {s0,\ns1} is replaced by an arbitrary subset\nS0 of S, and similarly on the T\nside. We write ∏LS0 and\n∑LS0 for conjunctive and\ndisjunctive combinations, respectively, in this case, and similarly on\nthe right (with an “R” subscript), when we know\neither that such a combination is unique or that, while not unique,\nwhat is being said would be correct however a representative\ncombination were chosen. The subscript is omitted when no confusion is\nlikely. If, as above S0 = {s0,\ns1}, instead of writing\n∏S0 (respectively,\n∑S0), we write s0 ⋅\ns1 (respectively, s0 +\ns1), and similarly on the right. To illustrate\nthese concepts, consider the connection 〈R, S,\nT〉 with S some non-empty set, T its\npower set, and R the relation of membership (∈). There\nare conjunctive combinations and disjunctive combinations on the\nright, being intersections and unions respectively, but there are in\ngeneral neither conjunctive nor disjunctive combinations on the left.\nTaking the former case, a conjunctive combination of\ns0 and s1, where these are\ndistinct elements of S, would be an element of S\nbelonging to precisely those subsets of S to which each of\ns0, s1, belongs—which is\nimpossible since the unit set of this element—as with any unit\nset—contains only one element, and so not both of\ns0, s1. By analogy with the\nabove definitions of conjunctive and disjunctive combinations we can\nalso consider the existence of negative objects on the left and right\nof a relational connection, and note that again the set-theoretic\nexample just given presents is with negative objects on the right (for\nS0 ⊆ S, the corresponding negative\nobject is S ∖ S0), but not on the\nleft (“no negative individuals”, as philosophers might put\nit, and the point would stand if we switched to the case in which\nT comprised properties—rather than sets—of\nindividuals, reconstruing R accordingly). This absence of\ncombinations simultaneously on the left and right of a relational\nconnection is typical of non-degenerate cases, in that one can easily\nverify that if a relational connection has conjunctive combinations on\nthe left and disjunctive combinations on the right, or vice versa,\nthen it satisfies the following (rather strong) crossover\ncondition: \n(To see this, assume the antecedent and consider the relation\nR as it relates s0 +\ns1 and t0 ⋅\nt1—or, for the “vice versa”,\ns0 ⋅ s1 and\nt0 + t1.) \nLet us return to the propositional languages with which we began. A\nvaluation for such an L is a function from L\nto the two-element set {T, F} (of truth-values). As in the case of\nfirst-order languages touched on above, we put the set of formulas\nL in the source position (i.e. on the left) of our relational\nconnections 〈L, V, R〉, with the\nset V of all valuations for L as the target (on the\nright), and R (the “is true on” relation) relates\nφ ∈ L to v\n∈ V just in case\nv(φ) = T. In view of the one-to-correspondence between\nsets and characteristic functions, this relational connection is just\na mild variant of the ∈-based relational connection considered\nabove, in particular sharing with it the feature that it has\nconjunctive and disjunctive combinations on the right but not the\nleft, and the feature that no two elements from the left bear the\nrelation R to exactly the same elements on the right, and no\ntwo elements on the right have have exactly the same elements from the\nleft bearing the relation R to them. To get some interesting\nlogic under way, some of these features needed to be disturbed, though\nas we shall see, one of them—the existence of conjunctive\ncombinations on the right—will prove surprisingly tenacious. If\nour interest lies in classical logic, we will be especially keen to\ndiscard most of (the above) V and concentrate only on Boolean\nvaluations, in the sense to be explained now. A function from {T,\nF}n to {T, F} is called an\nn-ary truth-function, and we say that an\nn-ary truth-function f is associated with\nthe n-ary connective # of L on the valuation\nv (for L)—or alternatively, under these same\nconditions, that # is associated with f on\nv—just in case for all\nφ1,…,φn ∈\nL: \nWe describe the connective # as truth-functional with respect\nto a class U of valuations when there is some f such\nthat for each v ∈ U, f is associated\nwith # on v, and as pseudo-truth-functional with\nrespect to U when U is a union of classes of\nvaluations with respect to each of which classes # is\n truth-functional.[4]\n A valuation v is #-Boolean, speaking informally, when the\nexpected truth-function is associated with # on v. More\nspecifically, v, assumed to be a valuation for a language\nsupporting the connectives to be mentioned here, is ∧-Boolean when\nthe binary truth-function f∧ with\nf∧(x, y) = T iff x\n= y = T is associated with ∧ on v, ∨-Boolean\nwhen a similar association holds for ∨ and\nf∨ defined by f∨(x,\ny) =\nF iff x = y = F. We\nassume that the idea is now clear without providing separate\ndefinitions of “→-Boolean”,\n“↔-Boolean”, “¬-Boolean”,\n“⊥-Boolean”, etc. A Boolean valuation for L is\njust a valuation for L which is #-Boolean for each primitive\nconnective # of L for which a notion of #-Boolean valuation has\nbeen defined. (This is just a way of registering an intended\ntruth-functional interpretation for the connectives # in question.)\nSimilarly we call any connective # for which a notion of #-Boolean\nvaluation has been defined, a Boolean connective, even when discussing\nits behaviour according to a logic not determined by a class of\nBoolean valuations. (This terminology will be explained in due\ncourse.) \nA set of truth-functions is strongly functionally complete if\nevery truth-function can be obtained by composition from functions in\nthe set, together with the projection functions, and weakly\nfunctionally complete if every truth-function can be obtained\nfrom functions in the set, together with the projection functions and\nthe operation of passing from an (n+1)-ary function to an\nn-ary function by dropping an inessential argument (an\nargument on which the function does not depend, that is). This\nterminology is transferred from truth-functions to Boolean connectives\nvia the conventional association of such connectives with\ntruth-functions described in the previous paragraph. Thus for example\neach of the sets {∧,¬}, {→,¬} is weakly functionally\ncomplete, while {→,⊥} is strongly functionally complete.\nThis weak/strong distinction is not usually registered in the literature, and functional\ncompleteness simpliciter is understood as weak functional\ncompleteness. These notions also apply in matrix semantics generally\n(see Section\n 5),\n and there are analogous notions of expressive completeness tailored\nto other areas; two distinct versions of expressive completeness in\nthe area of intuitionistic logic (the distinction being orthogonal to\nthe weak/strong distinction just drawn) are contrasted in Rousseau\n(1968), for example. None of these matters will occupy us further\nhere. \nIt is often useful to take a more fine-grained look at the\ntruth-functions in play in the above discussion. Assuming the\nidentification of n-ary functions with certain\n(n+1)-ary relations and the latter with sets of ordered\n(n+1)-tuples, we use the term determinant for the\nelements of a truth-function. Thus the four determinants of the\ntruth-function f→ associated with → on\n→-Boolean valuations are 〈T, T, T〉, 〈T, F,\nF〉, 〈F, T, T〉, and 〈F, F, T〉. Note that the\nfinal entry is the ‘output’ value for the function\nconcerned. Such determinants will occupy us extensively below. \nIn saying that a consequence relation ⊢ is determined\nby a class V of valuations what is meant that Γ\n⊢ ψ if and only if for all v ∈ V,\nwhenever v(φ) = T for each φ ∈ Γ, then\nv(ψ)= T. When ⊢ has been described by means of some\nproof system (some collection of rules), then the “only\nif” (“if”) direction of this claim amounts to the\nclaim that ⊢ is sound (respectively, complete)\nwith respect to V. Take the language whose sole primitive\nconnective is ∧ and the class of ∧-Boolean valuations. A\nsimple proof system is provided by the rules indicated in the obvious\nway by the following figures: \nThe rule on the left is usually called ∧-Introduction while the\ntwo on the right are collectively known as\n∧-Elimination—thus “(∧I)” and\n“(∧E)”—because they take us, respectively, to\nand from a formula with ∧ as main connective, and they enable us\nto define a consequence relation, ⊢∧ in purely\nsyntactic terms thus: Γ ⊢∧ φ just in\ncase starting with formulas all of which lie in Γ, successive\napplication of the above rules allows us to pass eventually to the\nformula φ. And then one can show, not only that this is the\nconsequence relation determined by the class of ∧-Boolean\nvaluations—so that if one began with that class and sought a\nsyntactic codification of the logic it gave rise to, one’s\nsearch would be at an end—but further that the valuations\nconsistent with ⊢∧ are precisely the\n∧-Boolean valuations. Here we calling v consistent\nwith ⊢ when for no Γ, ψ, for which Γ\n⊢ ψ, do we have v(φ) = T for all φ ∈\nΓ while v(ψ) = F; the “but further” in\nthe preceding sentence is explained by the fact that every consequence\nrelation ⊢ is determined by the class Val(⊢) of all\nvaluations consistent with ⊢, which in the case of\n⊢∧ are precisely the ∧-Boolean valuations.\n(See the discussion of Gabbay’s result on the\nprojection-conjunction truth-functions below for the extent of this\nphenomenon, which, for example, none of ∨, →, ¬ exhibits.)\nThe significance of this is that if one started not with the class of\n∧-Boolean valuations (or any other kind of valuational semantics),\nbut with the rules (∧I) and (∧E) themselves, then that class\nof valuations would force itself on one’s attention anyway as\nthe only class of valuations, preservation of truth on each of which\ncoincided with derivability using those rules. (We return to this\ntheme below, in connection with Carnap, by which time we will have\ntraded in formula-to-formula rules for sequent-to-sequent rules,\nallowing for the convenient representation of inferences in which\nassumptions are discharged.) Moreover, the rules have a considerable\nclaim to the status of rules in accordance with which one must reason\nif one is understanding ∧ as “and”, as providing a\ncodification of the way in which conjunctive premisses and conclusions\nare reasoned from and to in natural day-to-day reasoning. \nNow, as Gerhard Gentzen observed, when we come to formulate similarly\ncompelling principles for introducing and eliminating the other\nconnectives, we find ourselves having to make reference to the\ndischarging of assumptions temporarily made for the sake of\nargument. Such is the case for instance with formulating an\nintroduction rule for → and with formulating an elimination rule\nfor ∨. In the case of the former rule, for example, Gentzen took it\nthat the way to derive φ → ψ is to assume φ and use\nthe various rules and other assumptions to derive ψ, at which\npoint the rule (also called Conditional Proof) allows us to claim that\nwe have derived φ → ψ from the remaining assumptions,\nwithout having to record this conclusion as depending on φ (as\nψ itself did before the rule was applied). Thus to extend the\npresent approach, known as natural deduction, from ∧ to\nthese and other connectives, it is necessary to keep track not only of\nwhat formulas we are dealing with at a given stage but also of the set\nof initial formulas, or assumptions, on which that formula depends. We\nwant to say, in the case of the rule just described, that it entitles\nus to pass from ψ, as depending on Γ ∪ {φ}, to φ\n→ ψ, as depending on Γ. The ordered pair of a finite\nset of formulas and an individual formula, 〈Γ, φ〉\nwhose first entry records the set of formulas on which its second\nentry depends, we write in the more suggestive notation Γ\n≻ φ, and call a sequent, or more explicitly, a\nsequent of the logical framework Set-Fmla.\nFor the variant framework Set-Fmla0,\nwe\nallow also the case in which there is no formula to the right of the\n“≻”. Some principles for reasoning about sequents\nwhich do not involve any specific connectives and were called by\nGentzen, structural rules (as opposed to operational\nrules) are the following, which are respectively a zero-premiss, a\none-premiss and a two-premiss sequent-to-sequent rule: \nAs the notation makes clear, we use the same shortcuts in formulations\ninvolving the regular turnstile (⊢) as for the current variant\n(≻), despite the difference in role played by these two symbols:\nthe former is a metalinguistic predicate and the latter a device for\nseparating the two sides of a sequent. (“≻”,\narranging formulas into sequents, is, as Lemmon (1965) says of his\ncorresponding notation, the formal analogue of the word\n“therefore”, which arranges sentences into arguments. The\nformer is, by contrast, for making comments about such\narguments—for example to the effect that they are valid. Of\ncourse there is a little slack in the analogy for Set-Fmla,\nsince we allow the\ncase where there are no premisses.) Any collection Σ of sequents\nwhich is closed under the structural rules above gives rise to a\ncorresponding (finitary) consequence relation: Γ\n⊢Σ φ iff for some finite\nΓ0 ⊆ Γ, we have Γ0≻\nφ ∈ Σ. We should also have a sequent-based analogue of\nthe notion of a valuation’s being consistent with a consequence\nrelation; accordingly we say that a sequent Γ ≻ φ\nholds on the valuation v just in case we do not have\nv(ψ) = T for each ψ ∈\nΓ while also v(φ) = F. (When Γ is empty, the\nsequent holds on v just in case v(φ) = T. It\nwould be uncouth to speak of a sequent as being true on a valuation,\nhowever, just as one would not speak of the truth of an argument. Such\nusages are on a par with, and closely allied to, the mistaken\nconception of ≻ as a kind of connective.) \nWe can now formulate the desired →-introduction rule so that the\nassumption discharge feature is visible in what happens on the left of\nthe sequent-separator as we move from premiss-sequent to\nconclusion-sequent. We write the elimination rule alongside in a\nsimilar notation; included also are the natural deduction rules for\n∨; the earlier rules for ∧ should be imagined as re-written\nalong similar lines, with assumption-dependencies made explicit: \nAlong with the ∧ rules reformulated in the above\nsequent-to-sequent style, and the structural rule\n(Id)—(Weakening) and (Cut) being derivable—these rules\nrender provable exactly those sequents in {∧,∨,→}-fragment\nof intuitionistic logic, while for the corresponding fragment of\nclassical logic, one would need to add a further principle governing\nimplication, such as the following subcontrariety rule: \n(Equivalently, in view of Weakening, one could give a formulation with\n“Δ” as a set-variable for the right sequent premiss,\nand carry both “Γ” and “Δ” down to\nthe conclusion-sequent, as in the formulation of (→E) above.) In\nthe terminology of Dummett (1991) all of the rules we have seen are\npure (their schematic formulation involves mention only of a\nsingle connective) and simple (each formulation mentions it\nonly once), this last rule is also oblique: a discharged\nassumption has the connective in question as its main connective. One\ncan trade in this obliqueness for a loss of simplicity, changing the\n→-elimination rule from the familiar Modus Ponens principle above\nto a version incorporating Peirce’s Law (“(p\n→ q) → p ≻ p”), due\nto\n Kanger:[5] \nor sacrifice purity and have a zero-premiss rule ≻ φ ∨\n(φ → ψ), or again just leave the implicational rules as\nthey are and rely on further rules (not given here) governing negation\nto make up the shortfall and render such classically but not\nintuitionistically acceptable →-sequents—such as\nPeirce’s Law above—provable with their aid. (The same\ntensions would then arise for the ¬ rules, if one regards\nobliqueness as undesirable, with “double negation\nelimination” principles abandoning simplicity, or\n“excluded middle” principles, abandoning purity. Note that\nby a ‘classically acceptable sequent’ here is meant a\nsequent holding on all Boolean valuations.) An alternative for\ncapturing the classical logic of → is to change from the logical\nframework Set-Fmla to\nSet-Set, in which\nfinite (possibly empty) sets of formulas appear on the right of the\n≻, just as on the left. Then the above →-Introduction rule\ncan be remain intact, but with a set variable to collect side-formulas\non the right: from Γ, φ≻ψ, Δ to\nΓ≻φ→ψ, Δ. (Suitable modifications\nshould also be made to the remaining rules in this case.) These\n‘multiple-succedent’ sequents are more popularly\nassociated with a different approach to logic from the natural\ndeduction approach (though they have often appeared in this setting),\nnamely the sequent calculus approach, in which instead of being\ninserted or removed from the right of the ≻, by suitable\nintroduction or elimination rules, together with the possible\ndischarge of assumptions, the rules—again, ideally, pure and\nsimple—always insert a connective, either to the left or the\nright, of the “≻”. The left insertion rules do the\nwork of the elimination rules of the natural deduction approach, while\nthe right insertion rules do the work of—indeed, are\njust—the natural deduction introduction rules. The left\ninsertion rules, (# Left) for #\n∈ {∧,∨,→} are then as follows for\nthe classical case, with the right insertion rules (#\nRight) being the natural deduction introduction rules as above,\nwith a set-variable on the right of the ≻ for the classical\nSet-Set case: \nFor formulations restricted to Set-Fmla0,\nand thus suitable for the\nintuitionistic sequent calculus, we require that Δ in (∧\nLeft) contains at most one formula, and for (∨ Left) and (→\nLeft), that Δ ∪ Δ′ contains at most one formula.\nIndeed, one easily sees that using the structural rules mentioned\nearlier and the operational rules described here, there will always be\nexactly one formula, since proofs all begin with (Id) and no rule\nremoves all formulas from the right-hand side (or\n‘succedent’) in the transition from premiss sequents to\nconclusion sequent. This changes if we add the rules for negation,\nhere giving both the left and the right insertion rules, initially for\nthe Set-Set case: \nA Set-Set sequent\nΓ≻ Δ holds on a valuation v if and only if\nit is not the case that v verifies every formula in Γ\nwhile falsifying every formula in Δ; note that this coincides\nwith the definition of “holding on v” given for\nSet-Fmla in the case\nin which Δ = {ψ} for some ψ. Similarly, we have the\nnotion of a generalized consequence relation in which\nsuitably two-sided versions of the conditions definitive of\nconsequence relations are given, which can be found in Shoesmith and\nSmiley (1978), Chapter 2, for example (under the name\n‘multiple-conclusion consequence relation’). If ⊩ is\nsuch a relation on a language L then an L-valuation\nv is said to be consistent with ⊩ when there\ndo not exist Γ, Δ, with v(φ)\n= T for all φ ∈ Γ and\nv(ψ) = F for all ψ\n∈ Δ. The class of all such\nvaluations is denoted, much as in the consequence relation case, by\nVal(⊩). Sometimes formulations appear below with the phrase\n“(generalized) consequence relation”, meaning that the\nclaim being made or considered applies both in the case of consequence\nrelations and in the case of generalized consequence relations. \nOne should distinguish sharply between logical frameworks,\nthat is, choices as to what kind of thing a sequent is (e.g., Set-Fmla\nvs. Set-Set),\non the one hand,\nand approaches to logic, that is, choices as to what kind of\nsequent-to-sequent rules are to be used (e.g., natural deduction\nvs. sequent calculus), on the other. Gentzen (1934) used\nSet-Set for a\nclassical sequent calculus and Set-Fmla\nfor the intuitionistic case. (More accurately,\nsince he had finite sequences of formulas in mind rather than sets,\nand in the latter case allowed empty but not multiple succedents, we\nshould really say something long the lines of Seq-Seq\nand Seq-Fmla0,\nrespectively. Additional structural rules are then needed to allow\npermutation of formulas in a sequence.) Rudolf Carnap (1943) had a\nrather different reason for passing from Set-Fmla\nto Set-Set,\none which is\nsemantically based rather than grounded in considerations of\nproof-theoretic elegance. \nLet us forget about → and ¬ and the rules governing them, and\nconsider the formulas constructed with the aid only of ∧ and ∨.\nOn sequents of Set-Fmla\nin this fragment, classical and intuitionistic\nlogic agree, and the consequence relation\nconcerned—⊢∧,∨, we may call it—is\nthe consequence relation determined by the class of all ∧- and\n∨-Boolean valuations. Carnap’s point is one anticipated\nearlier with the remark that every v ∈\nVal(⊢∧) is ∧-Boolean, which extends to the\ncase of ⊢∧,∨: all valuations in\nVal(⊢∧,∨) are ∧-Boolean, but they are not\nall ∨-Boolean, for the simple reason that for any consequence\nrelation ⊢, Val(⊢) is always closed under conjunctive\ncombinations, and it is easy to find ∨-Boolean u,\nv, with u ⋅ v not\n ∨-Boolean.[6]\n It is interesting to see this as an appeal to the considerations of\nSection\n 1\n as follows. Consider the binary relational connection between the set\nof formulas in a language one of whose connectives is ∨ and the\nclass of Boolean valuations, with the relation is true on. We\nhave disjunctive combinations on the left, with φ\n+ ψ as φ ∨ ψ, since the\nvaluations on the right are all ∨-Boolean; therefore we cannot in\ngeneral have conjunctive combinations on the left, since the crossover\ncondition is not satisfied for this connection. The closure claim\napplies quite generally, with ∏ V ∈\nVal(⊢) whenever V ⊆ Val(⊢). This fact\nappears in the philosophical literature in the fact that\nsupervaluations over classes of bivalent valuations deliver the same\nconsequence relation as the original valuations, which is accordingly\nclassical when the valuations are Boolean. (Supervaluations are\nsupposed to be non-bivalent, in verifying those formulas verified by\nall the underlying valuations and falsifying those formulas false on\nall the underlying valuations, with those in neither category being\nneither true nor false on the supervaluation. But everything in this\ndefinition after the words “verified by all the underlying\nvaluations” is mere rhetoric, since all that matters—for a\nsequent’s holding on a valuation or a valuation’s being\nconsistent with a consequence relation—is truth-preservation;\nsetting it to one side, we can identify the supervaluation over\nV with ∏ V. Likewise in the case of\n‘subvaluations’—as in Hyde (2005)—where it is\n∑ V that would be relevant.) A special case arises\nwith V = ∅, for which ∏ V is the\nunique valuation vT assigning T to every formula\n(of the language in question, to which the claim of uniqueness is\nunderstood as relativized). \nOne may wonder which truth-functions are like that associated (on\n∧-Boolean valuations) with ∧ in this respect. More precisely,\nlet ⊢ be the consequence relation determined by the class of\nvaluations on each of which an n-ary connective\n#f is associated with the n-ary\ntruth-function f. Our question is: for which choices of\nf does ⊢ enforce the interpretation of\n#f as f in the sense that on every\nv ∈ Val(⊢), #f is associated\nwith f. This question was answered in Dov Gabbay (1978) and\n(1981) (Chapter 1, Section 3) as follows. Say that f (as\nabove) is a projection-conjunction truth-function just in\ncase for some J ⊆ {1,…,n} we have, for\nall x1,…,xn\n(xi ∈ {T, F}): \nThen the truth-functions f for which every valuation\nconsistent with ⊢ (as above) associates #f\nwith f are precisely the projection-conjunction\ntruth-functions. (Gabbay calls #f, as it behaves\naccording to ⊢, strongly classical in these cases,\nthough his own definition is not formulated in these terms.) By way of\nexample: when n = 1, these are the identity and the\nconstant-true functions, while for n = 2, they are the first\nprojection, second projection, constant true and (Boolean) conjunction\ntruth-functions. (The constant true cases arise by taking J\nas ∅.) The remaining 12 binary truth-functions thus exhibit the\nbehaviour we saw with the disjunction truth-function; the\ncorresponding connectives are what Gabbay calls weakly\nclassical: determined by a class of valuations over which the\nconnective is associated with a certain truth-function despite the\nexistence of further consistent valuation on which it is not so\nassociated. It is easy to see that the latter phenomenon does not\narise in the case of generalized consequence relations ⊩, since\nwe can easily write down unconditional conditions on such relations\nwhich enforce the association with a particular truth-function on\nvaluations in Val(⊩). This is best seen as proceeding\ndeterminant by determinant. The unenforceable determinant in the case\nof disjunction is 〈F, F, F〉, dictating that when the\ndisjuncts have the values listed in the first two positions, the\ndisjunction has the value listed in the final position. This\ndeterminant induces in a familiar way (e.g., Segerberg 1982,\n§3.3) the following condition on ⊩: that for all φ,\nψ, we have φ ∨ ψ ⊩ φ, ψ. Alternatively\nput, in Set-Set, as\nopposed to Set-Fmla,\nthere is a set of formulas holding on precisely the ∨-Boolean\nvaluations, namely that containing, for all formulas φ, ψ, the\nsequents φ ≻ φ ∨ ψ, and ψ ≻ φ ∨\nψ, and—the new case not already available in Set-Fmla—φ\n∨\nψ ≻ φ, ψ. In view of this, we can say that in Set-Set\nthough not in Set-Fmla,\nthe class of\n∨-Boolean valuations is sequent-definable, and the same\ngoes for connectives associated with all the other truth-functions not\nmeeting the projection-conjunction test (such as negation and material\nimplication). As the ∨ example makes clear, by contrast with the\ncase of consequence relations, Val(⊩), for a generalized\nconsequence relation ⊩, need not be closed under conjunctive\n combinations.[7]\n Again, one can see this in the light of the considerations of Section\n 1,\n thinking of the relational connection between Set-Set\nsequents and\narbitrary valuations, with the relation being ‘holds on’.\nThis connection supplies disjunctive combinations on the left, with\nσ + σ′ being the least common weakening of σ\nand\n σ′.[8]\n Thus it cannot also supply conjunctive combinations on the right,\nsince it does not satisfy the crossover condition. \nThis approximately Carnapian concern with\nsequent-definability—in particular the exclusion of unwanted\nnon-Boolean valuations—can be taken to a higher level by moving\nfrom questions about sequents and the valuations they hold, to\nquestions about rules and the valuations they preserve the property of\nholding on, as we shall see in Section\n 3,\n after making some further points about the apparatus of consequence\nrelations, or logics in the framework Set-Fmla.\nThe\ndeterminant-induced conditions on generalized consequence relations\nalluded to above can be converted into conditions on consequence\nrelations in a straightforward way, illustrated here in the case of\nnegation, with the condition \n(induced by 〈T, F〉) becoming \nand the condition \n(induced by 〈F, T〉) turning into the conditional\ncondition on consequence relations ⊩: \nIn a proof system in Set-Fmla\nsuch conditional requirements emerge as\nsequent-to-sequent rules, closure under which (along with containing\nall the sequents corresponding to the unconditional requirements) will\nsuffice to secure completeness—in this case that any unprovable\nsequent fails to hold on some ¬-Boolean valuation—without\nthe strong classicality property of having the provable sequents hold\nonly on such valuations. (The process just described\ntransforms the Set-Set\ncondition, φ ∨ ψ ≻ φ,\nψ (all φ, ψ), induced by the Set-Fmla\nunenforceable ∨\ndeterminant 〈F, F, F〉, into the\nconditional condition of closure under the rule (∨E).) If\na generalized consequence relation ⊩ with a Boolean connective #\nin its language satisfies all the conditions induced by the\ndeterminants of the associated truth-function we call ⊩\n#-classical. Similarly for a consequence relation which\nsatisfies the conditions on consequence\nrelations—conditional conditions\nincluded—derived, as just described, from these\ndeterminant-induced conditions on generalized consequence relations.\n(These versions of #-classicality can often be simplified on a\ncase-by-case basis. For example, the ∧-classicality of a\nconsequence relation or generalized consequence relation—we use\nthe former notation here—is equivalent to its being the case\nthat for all φ, ψ, we have (1) φ, ψ\n⊢ φ ∧ ψ, (2) φ ∧\nψ ⊢ φ, and (3) φ ∧ ψ\n⊢ ψ. Here we see a three-part condition, instead of\nthe four-part condition comprising the conditions induced by each of\nthe four determinants.) \nConsideration of the determinant-induced conditions on generalized\nconsequence relations allows us incidentally to observe, somewhat\nsurprisingly, that consequence relations (and the Set-Fmla\nframework) manage\nto distinguish the logics of any two truth-functions of the same\narity. More precisely, suppose that f and g are\ndistinct n-ary truth-functions, # is an n-ary\nconnective, and Vf and\nVg are the classes of valuations on\nwhich, respectively, f and g are associated with #;\nthen the consequence relations determined by\nVf and Vg\nare distinct. By way of illustration, suppose that n = 3 and\nf and g differ on some determinant beginning with T,\nF, F. (Thus we are considering the case in which the first component\nof a #-compound is true on a given valuation and the second and third\nare false.) Without loss of generality, we can assume that 〈T, F,\nF, T〉 ∈ f while 〈T, F, F, F〉 ∈\ng. The conditions on a generalized consequence relation\n⊩ induced by these determinants are respectively φ\n⊩ ψ, χ, #(φ, ψ, χ)\nand φ, #(φ, ψ, χ) ⊩ ψ,\nχ. Thus in particular, taking φ as p and each\nof ψ, χ, as q, for the generalized consequence\nrelation ⊩f, say, determined by\nVf and that,\n⊩g, determined by\nVg, we have: \nNote that p, #(p, q, q)\n⊮fq, since otherwise it would\nfollow (by the ‘cut’ condition on generalized consequence\nrelations) from the first inset ⊩-statement here that p\n⊩fq, which is not the case. Thus\nin view of the second ⊩-statement, ⊩f\nand ⊩g differ on the sequent σ =\np, #(p, q, q)≻ q,\nsince σ ∈ ⊩g while σ\n∉ ⊩f. But σ is a sequent of\nSet-Fmla, so the\nconsequence relations, ⊢f and\n⊢g, say, determined respectively by\nVf and Vg\nalso differ (namely, on σ). We have worked through a simple\nillustration of the general result claimed above, but this case is\nsufficiently representative for the general proof to be\nreconstructed. \nIndeed the real moral is more general still. We did not need to use,\nin our worked example, more than the fact that there was some\ndeterminant respected by every valuation in\nVf with the opposite determinant\nrespected by every valuation in Vg, where\nV respects a determinant 〈x1,…,xn,xn+1〉\nfor # (with each xi\n∈ {T, F}) just in case for all formulas φ1,…,φn,\nv(φi) =\nxi for i\n= 1,…, n implies v(#(φ1,…,φn)\n= xn+1, and determinants are\nopposite if they differ in precisely their final positions.\n(Actually, inspection of the worked example shows that we also need\nthe classes playing the role of Vf and\nVg also to contain enough valuations to\nassign different truth-values to any pair of distinct propositional\nvariables.) Take the 1-ary connective ☐ of any familiar modal\nlogic (e.g., S5), for example. We expect it to satisfy the\ndeterminant 〈F, F〉, in the sense that the appropriate\nconsequence relation should satisfy the condition induced by this\ndeterminant, since what is necessarily true is true—and thus if\nφ is false, ☐φ should be false—while we do not\nwant any determinant of the form 〈T, x〉 to be\nsatisfied. In this case we can describe ☐ as partially\ndetermined according to the consequence relation in question. On\nthe other hand, if a consequence relation ⊢ (or a generalized\nconsequence relation ⊩) satisfies, for each n-tuple of\ntruth-values, the condition induced by exactly one determinant for the\nn-ary connective #, whose first n entries are as\ngiven by that n-tuple (the final, n+1st,\nentry being either a T or an F), then we say # is fully\ndetermined according to ⊢ (or ⊩). By the\ndeterminant-induced conditions on a consequence relation here is meant\nthe conditions on a consequence relation derived as explained (or at\nleast illustrated) above from the directly determinant-induced\nconditions on a generalized consequence relation. As one might expect,\nthis property of connectives relative to consequence relations has an\nintimate relation with the similar property introduced at the start of\nthis section: \nNote that the two occurrences of the word ‘determined’\nhere mean quite different things. “Fully determined”, as\ndefined above, is a variation on Segerberg’s terminology in his\n(1982) of ‘type-determined’, varied so as to lend itself\nto other modifications—partially determined,\ncompletely undetermined, overdetermined,…\n(though this last will not be getting attention here)—while the\nsecond occurrence of the word is the usual sound and complete\nsense of “determined”. Turning to generalized consequence\nrelations, we find the connection to be more intimate still: \nThis implies the statement given for consequence relations (putting\n“⊩” in place of “⊢”) since a\ngeneralized consequence relation, like a consequence relation, is\nalways determined by the class of all valuations consistent with it.\n(But only the weaker statement above is available for consequence\nrelations, as such cases as that of ∨ illustrates, since the\nconsequence relation determined by the class of ∨-Boolean\nvaluations—with respect to to which ∨ is by definition\ntruth-functional—is also determined by other classes of\nvaluations, with respect to it is not.) Indeed another way of putting\nthe contrast between the consequence relations claim above and the\ngeneralized consequence relations claim is that while for consequence\nrelations #‘s being fully determined according to ⊢ is\nequivalent to some class of valuations which determines\n⊢ having # truth-functional with respect to it, for generalized\nconsequence relations we can say that #‘s being fully determined\naccording to ⊩ is equivalent to every class of\nvaluations which determines ⊩ having # truth-functional with\nrespect to it. \nAlong with truth-functionality, we also included a definition of\npseudo-truth-functionality with respect to V. A simple way of\nseeing the relation between these two concepts is in an\n∀/∃ scope contrast (in which “f”\nranges over truth-functions of the same arity as #): # is\ntruth-functional with respect to V when \nwhereas # is pseudo-truth-functional with respect to V\nwhen \nIt is natural to ask after a syntactical condition related to\npseudo-truth-functionality in the same way(s) as full determination is\nrelated to truth-functionality. Say that an n-ary connective\n# is left-extensional in its ith position\n(1 ≤ i ≤ n) or right-extensional in\nits ith position, according to a generalized\nconsequence relation ⊩, when the condition\n(LEi) or (REi) is satisfied,\nrespectively, for all formulas\nφ1,…,φn,ψ in the\nlanguage of ⊩ we have: \n# is left-extensional (right-extensional) according to ⊩ if it\nis left-extensional (respectively, right-extensional) in its\nith position for each i (1\n≤ i ≤ n), and finally #\nis extensional according to ⊩ when # is both left- and\nright-extensional according to ⊩. For n = 1 we drop the\nsubscript, the above conditions reducing to (LE) and (RE): \nThus (LE) requires that each v ∈ Val(⊩)\n“treats truths alike” when they are embedded under #, in\nthe sense that when v(φ) =\nv(ψ) = T, then v(#φ)\n= v(#ψ), while (RE) requires that falsehoods be\ntreated alike in that v(φ) =\nv(ψ) = F likewise implies that v(#φ)\n= v(#ψ). (It may\nhelp to remark that for ↔-classical ⊢ together these amount\nto requiring that φ ↔ ψ ⊢ #φ\n↔ #ψ. But we are trying to keep the discussion\n‘pure’ so that definitions make sense even when the\nconnective—here #—with the property being defined is the\nsole connective in the language.) The conditions\n(LEi) already make sense as conditions on\nconsequence relations (writing ⊢ for ⊩) since there is a\nsingle formula on the right, and we will speak of # as\nleft-extensional according to ⊢ when they are all satisfied,\nwhile the conditions (REi) need to be converted\ninto conditional conditions as above in the discussion of\ndeterminant-induced conditions. We will illustrate this only for the\nn = 1 case, with (RE) becoming (RE′), understood as\ndemanding for all Γ, φ, ψ, χ: \nTaking it that the intention is clear for the general case what\n(RE′i) should be as a condition on\nconsequence relations, we say that # is right-extensional according to\n⊢ when (RE′i) is satisfied for each\ni up to the arity of #, and that # is extensional according\nto ⊢ just in case # is both left- and right-extensional\naccording to ⊢. Then paralleling the above results for\ntruth-functionality are the following for\npseudo-truth-functionality: \nWhether for consequence relations or for generalized consequence\nrelations, we have the following—in general,\nirreversible—implications for the three properties of being\nfully determined, being extensional, and being congruential (as\nexplained below) according to any given (generalized) consequence\n relation:[9] \nwhere this last concept is defined by saying that # is\ncongruential in the ith position\naccording to a consequence relation or generalized consequence\nrelation ⊢ or ⊩ (we state the condition only using the\n“⊢” notation) just in case for all formulas\nφ1,…,φn,ψ: \nand calling # congruential according to ⊢ when # is congruential\nin each of its positions according to ⊢. Clearly a consequence\nrelation is congruential in the sense of Section\n 1—which\n of course also makes sense for generalized consequence\nrelations—precisely when each primitive connective in its\nlanguage is congruential in every position according to it. A similar\nlifting of properties of connectives—‘according to’\n(generalized) consequence relations—can be made in the other\ncases too, for example calling a consequence relation fully determined\nwhen each of the primitive connectives of its language is fully\ndetermined according to it. Thus we may say that the consequence\nrelation ⊢CL of classical logic (with any\ngiven stock of primitive connectives—though we will not further\ndecorate the notation to indicate a particular fragment) is fully\ndetermined and thus also extensional (and congruential), while the\nconsequence relation ⊢I L of\nintuitionistic logic is congruential but not extensional, since for\nexample, ¬, is not right-extensional according to\n⊢I L. The consequence relation\ndetermined by the well-known three-element matrix of Łukasiewicz\nis not even congruential, since (again) ¬ is not congruential\naccording to this relation. There is a weaker property than\nextensionality as here defined (for the sake of the above connection\nwith pseudo-truth-functionality) which properly implies left\nextensionality but not right extensionality and which, unlike left\nextensionality itself, implies congruentiality. We could define #,\nhere taken for illustrative purposes again as 1-ary, to be weakly\nextensional according to a consequence relation ⊢ when for all\nΓ, φ, ψ: \nThus weak extensionality is congruentiality ‘with side\nformulas’ (collected into Γ). The obvious adaptation of\nthis notion to generalized consequence relations would be to allow\nside-formulas on the right too (replacing the\nabove“⊢” by “⊩” and adding a set\nvariable “Δ” to the right-hand sides, that is): this\nturns out to be equivalent to extensionality for generalized\nconsequence relations as defined above in terms of\n(LEi) and (REi).\n⊢I L is weakly extensional in this\nsense, and weak extensionality according to ⊢ ⊇\n⊢I L is a property of some theoretical\nsignificance for the case in which the language of ⊢ adds new\nconnectives in the spirit of the original intuitionistic \nprimitives.[10] \nReturning to the subject of extensionality, one area in which\nextensional but not fully determined connectives arises is when one\ntakes hybrids of the latter. By the hybrid of disjunction and\nconjunction, for example, understanding ∨ and ∧ to have the\ninferential powers conferred on them by a particular logic, is meant a\nbinary connective whose inferential powers are those shared ∧ and\n∨. (See Rautenberg 1989 for this example, and Rautenberg 1991\nand references therein for more in this vein.) Note that the\nconnectives hybridized and the resulting hybrid are connectives in the\n‘logically loaded’ sense of Section\n 1\n above. \nThere are various ways of defining the hybridization process depend on\nhow much generality one wants, but the following minimally general\ndefinition is the easiest to work with. Start with two (generalized)\nconsequence relations each on the same language, that language having\na single primitive connective, #, say. The hybrid connective is then #\nas it behaves according to the intersection of the (generalized)\nconsequence relations. This way of defining things requires us to\nre-notate the connectives to be hybridized. Thus sticking with the\nexample just mentioned, we consider a copy of the pure ∧ fragment\nof ⊢CL, called ⊢∧ earlier\nin this section, but writing # for ∧—but let us still call\nthis consequence relation ⊢∧—and similarly\nwith the ∨ fragment. We are then interested in the behaviour of #\naccording to ⊢∧ ∩ ⊢∨.\n(Where V∧ and V∨ are\nthe classes of valuations on which # is associated respectively with\nthe Boolean ∧ truth-function and with the Boolean ∨\ntruth-function, our intersective consequence relation is that\ndetermined by V∧ ∪\nV∨.) This behaviour includes the semilattice\nproperties of idempotence, commutativity and associativity, for\nexample, since these are common to Boolean disjunction and\nconjunction. This particular hybrid connective is partially\ndetermined, since for example φ, ψ ≻\nφ # ψ (a sequent formulation of the condition induced\non consequence relations by 〈T, T,\nT〉) belongs to ⊢∧\n∩ ⊢∨. This by itself does not show that\nthe hybrid is not fully determined, however, and to avoid\nentanglement with some issues about rules, this point is best\nillustrated in terms of the corresponding generalized consequence\nrelations and their intersection, the latter satisfying neither of the\nconditions induced by the determinants beginning T, F: for 〈T, F,\nT〉, the condition that φ, φ # ψ ⊩ ψ\n(failing for # as ∨) or the determinant 〈T, F, F〉, for\nwhich the induced condition is φ ⊩ φ #\nψ, ψ (failing for # as ∧). (Among issues about\nnon-zero-premiss sequent-to-sequent rules that call for care is the\nfact that while for any such rule under which each of the intersected\nconsequence relations is closed, their intersection is likewise\nclosed, the converse is false: the hybrid consequence relation may be\nclosed under rules under which the originals are not. In the present\ninstance the rule: from φ ≻ ψ to ψ\n≻ φ is an example. Similarly for generalized consequence\nrelations the rule: from Γ ≻ Δ to\nΔ ≻ Γ makes the same point. This second version\nshows that the current example of hybridization, as conducted in Set-Set,\nyields a symmetric\ngeneralized consequence\n relation.[11]) \nLet us note in view of the recent reference to ⊢∧\n∩\n⊢∨, there has been an interest in how one\nmight form something like the union rather than the intersection of\nthe two consequence relations involved here. Not quite the union,\nsince that would not be a consequence relation, but something\nanswering to the intuitive idea of a consequence relation embodying\nthe combined logic of conjunction and disjunction. (This is the theme\nof Béziau and Coniglio (2010), further taken up in Humberstone\n(2015).) The situation is not exactly dual to that of hybrids, to\nwhich topic we return in the folowing paragraph, because the envisaged\nhybrid logic contains one connective with the common logical\nproperties of (in the present instance) conjunction and disjunction,\nwhereas the combined logic is based on the language with the two\nconnectives. (The precise dual would be a consequence relation on a\nlanguage with a single connective, roughly speaking giving that\nconnective all the logical powers possessed by either disjunction or\nconjunction, and by a result of Wolfgang Rautenberg cited below,\naccording to this consequence relation any formula follows from any\nother. Indeed, this particular instance of Rautenberg’s\nobservation is already well known in the literature on Tonk,\nrecalled in §3 below: any consequence\nrelation in a language including a binary connective which satisfies,\nrelative to that consequence relation, both an ∨-Introduction\ncondition and also an ∧-Elimination condition will be one of these\ntrivial consequence relations. \nThe hybrid of two fully determined connectives may even be completely\nundetermined (satisfy no determinant-induced conditions at all, that\nis). This will be the case, for example, if we hybridize not\nconjunction and disjunction, but conjunction and negated conjunction\n(sometimes called nand). By using negation in this way, we\nprevent any overlap in the determinant-induced conditions which are\nsatisfied by the hybrid, though there still remain some non-trivial\nproperties (commutativity, for example) as well as\nextensionality—the point of this mention of hybrids—since\nany hybrid of fully determined connectives will still be extensional\n(according to the intersection, that is). Of course, one can also\nhybridize connectives which are not themselves fully, or even\npartially determined—for example, one could investigate the\ncommon properties of ☐ and ♢ according to the smallest\nnormal modal logic (commonly called K), though this example\nwould for its most natural development require us to go beyond the\nsimple account of hybrids given here, since it would have to attend to\nthe simultaneous presence of the Boolean connectives alongside these\nmodal operators. A better known modal example of hybrids is that of\nthe ☐ operator in Łukasiewicz’s Ł-modal logic\n(not that Łukasiewicz used this notation for his necessity\noperator), which is a hybrid of 1-ary connectives for the 1-place\nidentity and constant-false truth-functions. (See Chapter 1 of Prior\n(1957) on this point; further references may be found in Section\n 5.) \nThe hybrid of two connectives is a subconnective of each of\nthem in the sense that whatever sequents (of the logical framework in\nplay) are provable for it are provable for them. And\nconversely—but for the moment the subconnective relation itself\nwill be the focus of attention. Intuitionistic negation is in this\nsense a subconnective, indeed a proper subconnective (in the\nsense that we do not have the converse) of classical negation. As with\nhybrids, there are various options, of differing degrees of generality\nin their application, for defining this relation. In the case of a\nlanguage with only a single primitive connective, #, we can say that #\nas it behaves according to (e.g.) the consequence relation ⊢ is\na subconnective of # as it behaves according to ⊢′ just in\ncase ⊢ ⊆ ⊢′. If we want to allow different\nconnectives of the same arity, say # and #′, then we can put\nthis instead by saying that σ(#) ∈ ⊢ only if\nσ(#′) ∈ ⊢′, for all σ(#),\nunderstanding the latter to denote a sequent with various occurrences\nof # in its constituent formulas, with σ(#′) the result of\nreplacing all such occurrences by #′. This kind of formulation\nlends itself to wider applicability since we can allow other\nconnectives in the formulas of σ(#), provided these are in the\nlanguage of ⊢′. There is no reason to restrict attention\nto primitive connectives in making such comparisons. For example, each\nof ☐ and ☐☐ is a subconnective of the other in\nseveral well-known modal logics, as is shown in Zolin (2000), where\nlogics are developed axiomatically as sets of formulas (sequents of\nthe logical framework Fmla, as we would\n say[12])\n so the “σ(#)” would become “φ(#)”\nand the point is that in the logics concerned φ(☐) and\nφ(☐☐) are always equi-provable—though in the\ninteresting cases (e.g., those of K, KT, KTB),\nnot provably equivalent. Note that this is an intra-logical\napplication of the subconnective idea (corresponding to the case of\n⊢ = ⊢′ above, for which we definitely need\nto work with notationally distinguished # and #′). Zolin calls\nsuch mutual subconnectives analogous (‘analogous\nmodalities’). A philosophically famous example of this\nphenomenon from bimodal (or more specifically, doxastic-epistemic)\nlogic was reported in Byrd (1973). \nEarlier in this section we saw that, where\nVf and Vg\nare the classes of valuations for a language with n-ary\nconnective # on which distinct truth-functions f and\ng are associated with # respectively, the consequence\nrelations determined by Vf and\nVg were always distinct. In the present\nterminology, this means that either # as it behaves according to the\nfirst of these consequence relations is not a subconnective of # as it\nbehaves according to the second, or vice versa. This is obvious for\ngeneralized consequence relations as one can read off the difference\nfrom the unconditional conditions induced by the determinants of\nf and g, but we saw (in a worked example) that such\ndifferences are also guaranteed to emerge at the relatively cruder\nlevel of consequence relations. A stronger conclusion can be drawn\nfrom Theorem 4 of Rautenberg (1981) (see also Rautenberg 1985, p. 4), which will not be proved here, and for the statement of which we\nneed to explain that a non-trivial consequence relation\n⊢ is one for which there exist formulas φ, ψ in the\nlanguage of ⊢ such that φ ⊬ ψ; for some of the\nmatrix terminology here, see Section\n 5: \nAs one very special case of this maximality result, in which the\nalgebra reduct of M has only a single fundamental operation\n(f, as above, say), we get a stronger conclusion about the\nconsequence relations ⊢f and\n⊢g determined by\nVf and Vg\nthan our earlier conclusion that these consequence relations are\ndistinct: we get the conclusion that neither is included in the other.\nTaking the A and D of M = (A,\nD) as ({T, F}, f) and {T}, the consequence relation\n⊢f is what Rautenberg is calling\n⊨M, and if this were properly included in\n⊢g we should have a contradiction with the\nabove result, since the latter consequence relation is certainly\nnon-trivial and substitution-invariant. Thus informally speaking, even\nin the relatively undiscriminating framework Set-Fmla,\nthe logic of one\ntruth-function never subsumes that of another. Less informally: even\nin Set-Fmla, a fully\ndetermined connective is never a proper subconnective of another fully\ndetermined connective. \nWe conclude this section with two observations prompted by this\nresult. The first concerns whether anything was gained by our earlier\nlooking at the argument for the weaker result (understood in the light\nof the above conventions) to the effect that, f ≠\ng implies ⊢f ≠\n⊢g. The answer to this question is that\nalthough the result is weaker, the proof yields something stronger:\nany difference in determinants yields a difference in unconditional\ndeterminant-induced conditions. Considered as sequents (with\npropositional variables replacing the schematic letters in the induced\nconditions) these have a very special form, and, transferring\nDummett’s terminology (seen earlier in this section) for rules,\nacross to sequents, we note that they are all included in the class of\npure and simple sequents: sequents in which there is only one\nconnective to occur and it occurs only once in the sequent. Suitably\nabstracting from our earlier worked example, we can see that any\nconnectives satisfying the conditions induced by even one pair of\nopposite determinants (whether or not any remaining\ndeterminant-induced conditions are satisfied) are bound to differ on a\npair of pure and simple sequents. But the analogue of\nRautenberg’s result does not hold in this form: that the set of\npure and simple sequents satisfied by the one and the set satisfied by\nthe other are incomparable with respect to inclusion. For example,\nconsider the case of the 1-ary truth-functions Boolean negation and\nthe constant-false function. We can cite #p ⊢\nq as an example of a pure and simple sequent which holds on\nevery valuation on which 1-ary # is associated with the constant-false\nfunction but not on every valuation on which it is associated with the\nnegation function. But an inspection of possible cases reveals that\nthere is no pure and simple sequent valid for the negation\ninterpretation of # which is not also valid for the constant-false\ninterpretation. (Of course there are sequents doing this—e.g.,\np ≻ ## p but, though pure, they are not\nsimple. And, yes, in Set-Set,\nwe can always find pure and simple witnesses to\nthe non-inclusion of the one logic in the other: the\ndeterminant-induced conditions on generalized consequence relations\nwill serve in this capacity.) \nFor the second observation, we note a more linguistic reformulation of\nRautenberg’s result, for which we first need a brief digression\non defined connectives. A connective derived by composition from a set\nof primitive connectives yields a defined connective in one of two\nways, depending on one’s views of definition. On one view,\nisolating the derived connective is already giving a definition: one\nhas a formula φ(p1,…,\npn) in which exactly the exhibited\nvariables occur, which since it is constructed from these variables\nvia the primitive connectives constitutes a derived connective,\napplying to formulas\nψ1,…, ψn to yield\nthe formula φ(ψ1,…,ψn)\nwhich results from substituting ψi\nuniformly for\npi in φ(p1,…,\npn). We can introduce a shorthand\nto such substitution-instances, denoting φ(ψ1,…,ψn)\nby “#(ψ1,…,ψn)”,\nfor instance—as in calling the formula ¬(ψ1\n∧ ¬\nψ2) by the name “ψ1 →\nψ2”. (Of course this would only be a good idea if\nthere is nothing better to mean, or which is already meant, by\n→—as there would be in intuitionistic logic, for instance.)\nThat is the first view of\n definition.[13]\n On the second view, rather than just being a metalinguistic\nabbreviation, the defined connective is an addition to the object\nlanguage: we add (to continue with the example just given) a new\nprimitive connective →, along with a stipulation that compounds\nof the form ψ1 → ψ2 are to be\nsynonymous with those of the corresponding form\n¬(ψ1 ∧ ¬ ψ2). We need not\nchoose between these views here, but some formulations are sensitive\nto which view is taken. In particular, if we have classical logic with\nprimitives ¬ and ∧, we may still wish to consider its\nimplicational fragment—in Set-Fmla,\nsay, where this would be the restriction of\n⊢CL to formulas constructed using only the\nconnective →. On the first view of definition, we cannot\nliterally do that, since to use → is ipso facto to use\n¬ and ∧, so what is meant is rather than the only occurrences\nof ¬ and ∧ are such as occur in subformulas of the form\nψ1 → ψ2 in virtue of these being\nthe formulas ¬(ψ1 ∧ ¬ψ2). On\nthe second view of definition, we have expanded the\nlanguage-as-algebra by adding a new fundamental operation → and\ncan now consider the subalgebra generated by the propositional\nvariables of the reduct of this algebra obtained by discarding the\nother fundamental operations. \nNow let φ1 and φ2 any two classically\nnon-equivalent formulas in the same variables,\np1,…, pn for\ndefiniteness, and consider the consequence relations\n⊢1 and ⊢2, where ⊢1\nis the restriction of ⊢CL to formulas\nconstructed using the n-ary connective # defined thus: \nand ⊢2 is the analogous restriction of\n⊢CL this time to the #-fragment with # defined\nby: \nSince each of φ1 and φ2 fixes an\nn-ary truth-function of the variables involved, and these\ntruth-functions are distinct (since φ1 and\nφ2 were to be non-equivalent) the above\nVf / Vg\napplication of Rautenberg’s result tells us that neither of\n⊢1, ⊢2, is included in the other.\nConcentrating on the connectives involved, we can put this by saying\nthat in classical logic any two non-equivalent connectives are\nincomparable with respect to the subconnective relation (understood as\nrelating the consequence relations on languages in which no further\nconnectives appear). We close by observing that the analogous claim\nwould be false for intuitionistic logic. A counterexample is provided\nby the connectives defined by φ #1\nψ = ¬φ∨ ¬ψ and φ\n#2 ψ = ¬(φ ∧ ψ). These are\nintuitionistically non-equivalent, in the sense of not always yielding\n⊢I L-equivalent compounds from the same\ncomponents, while—by an argument not given here—for any\nintuitionistically provable sequent σ(#1) involving\nformulas constructed from the variables by means of #1, the\ncorresponding sequent σ(#2) is also\nintuitionistically provable (though not conversely). So, by contrast\nwith what can happen in the classical setting, we have non-equivalent\nconnectives one of which is a proper subconnective of the\nother—understanding this last phrase subject to the same\nparenthetical qualification as above. \nFor this section the focus will be on rules governing the various\nconnectives, beginning with a deferred topic from Section\n 2:\n the transfer of Carnap-inspired questions of the range of valuations\non which the sequents provable in this or that logic hold to question\nabout the range of valuations on which the sequent-to-sequent rules\npreserve the property of holding. We will also revisit the\nsequent-calculus operational rules from early in Section\n 2\n and look at some of their properties, as well as at some interesting\nvariations on the structural rules which work alongside them. One\ntopic—or pair of topics—raised by such investigations is\nthe issue of the existence and uniqueness of connectives exhibiting\nprescribed logical behaviour (such as might be enshrined in various\nrules), an issue bearing on all approaches to logic and not just the\nsequent calculus approach. Finally we look at a pair of concepts\napplying to connectives as they behave in particular logics: the\nconcept of a universally representative connective and the concept of\na ‘special’ connective. \nBeginning, then, with the preservation behaviour of rules (as in\nGarson 1990 and 2001) it is necessary first to distinguish a\n(sequent-to-sequent) rule’s having a local preservation\ncharacteristic with respect to a class V of\nvaluations—that for each v ∈ V, the rule\npreserves the property of holding on v—from its having\na global preservation characteristic with respect to V: if\nthe premiss-sequents hold on every v ∈ V, then\nthe conclusion-sequent holds on every v ∈ V.\nFor brevity, a sequent will be called V-valid when\nit holds on each v ∈ V. Then we distinguish the\nlocal range of a rule ρ, denoted Loc(ρ) from its\nglobal range, Glo(ρ), taking the definitions as relative\nto a background language the class of all valuations for which we\ndenote by U: \nIt is also natural to define the local and global range of a\ncollection R of rules, by setting Loc(R) =\n∩ρ ∈\nRLoc(ρ) and \nNote that while the local range of a rule or set of rules is a set of\nvaluations, the global range is a set of sets of valuations. But in\nsome cases there is an especially simple relationship between the two,\nnamely that Glo(R) =\n℘(Loc(R)). This happens whenever R\ncomprises only zero-premiss rules, and, more interestingly, when the\nrules in R are interderivable with a set of such rules, given\nthe structural rules (Id), (Weakening), and\n (Cut),[14]\n as in the case of the natural deduction rules for conjunction\nR = {(∧I), (∧E)} or the corresponding sequent\ncalculus rules {∧ Right, ∧ Left} where\nLoc(R) comprises precisely the ∧-Boolean\nvaluations. Evidently, the strong classicality phenomenon of Section\n 2\n is making its presence felt here, and we should contrast the\nsituation with disjunction (in Set-Fmla).\nFor R = {(∨I), (∨E)},\nLoc(R) is the class of ∨-Boolean valuations, but\nthe same is the case if (∨E)—the rule of current interest\nsince it has no zero-premiss equivalent—is replaced by another\nwhich is far from interderivable with it (even given the structural\nrules and (∨I)): \nThus the local range is not very informative as to the precise\nsignificance of such a rule as (∨E) and it is natural if one thinks\nof the rules as giving the meanings of the connectives they govern (a\nperspective mentioned in Section\n 1)\n and wants to distill this information into a semantics in terms of\nvaluations, to consider the global range. To do so we make use of the\npartial order ≤ on the underlying set U of valuations (for\nthe language under consideration) defined by: u ≤\nv if and only for all formulas φ, if u(φ) =\nT then v(φ) =\n T.[15]\n As Garson (2001) observes, the global range of the introduction and\nelimination rules for ∨ (and again we could equally well cite the\nsequent calculus rules in this connection) is the set of all\nV ⊆ U such that for all u ∈\nV and all formulas φ and ψ, the following condition\nis\n satisfied:[16] \nWhile we cannot go into the details of Garson’s program here,\nits aim should be noted: to arrive at the ‘natural\nsemantics’ implicit in the rules governing a connective # (here\nassumed n-ary) in the sense of a characterization of their\nglobal range as comprising those V of valuations satisfying a\ncondition of the form: ∀u ∈ V,\nu(#(φ1,…,φn)) =\nT if and only if …, where the dots are replaced by something\nwhich would render this biconditional suitable as a clause in the\ninductive definition of truth on a valuation u ∈\nV. Garson worries about the use of ≤ on this score in what\nwe are calling [∨]Garson (and has various suggestions to\noffer), as well as about the explicit quantification over χ which\nintroduces an potential element of circularity or impredicativity (in\nparticular because χ need not have a lower complexity—be\nconstructed with the aid of fewer primitive connectives, that\nis—than φ ∨ ψ itself); related concerns are aired in\nWoods (2013). One way of getting rid of the latter feature is to\nmassage [∨]Garson into the following equivalent form,\nwhich makes extensive use of conjunctive combinations of valuations,\nand uses the notation |χ| which, for a formula χ, denotes the\nset of v∈ V such that v(χ) =\nT: \nIn place of this last “∏ U0 ⋅\n∏ U1”, we could equally well have\nwritten “∏ (U0 ∪\nU1)”, of course. The form as written is more\nsuggestive of the many variations on the semantic treatment of\ndisjunction in the literature—the Beth semantics for\nintuitionistic logic, for instance, and the treatment of disjunction\nfor relevant (or ‘relevance’) and other substructural\nlogics to be found in Ono and Komori (1985), Orłowska (1985,\n455), and Bell (1986), to cite only some papers\nfrom the 1980s.[17]\nWe will not discuss other\nconnectives from this perspective here, or comment further on\nGarson’s program. See Garson (2001) for a discussion of the\nglobal ranges of the usual sets of introduction and elimination rules\nfor →, ¬ and\n ↔.[18]\n Garson’s approach to these matters has, it should be noted,\nundergone further evolution since the publications cited in this\ndiscussion: see Garson (2013). \nThe idea which, has just re-surfaced in our discussion, apropos of\nGarson, that the natural deduction introduction and elimination rules\ntogether, or perhaps just the introduction rules alone\n(Gentzen’s preferred\n position),[19]\n somehow fix the meanings of the connectives they govern, often goes\nhand in hand with considerations of the existence and the uniqueness\nof a connective answering to the said rules, considerations first\nraised by H. Hiż, according to Belnap (1962). Belnap was replying\nto Prior (1960) in which the idea that any old set of rules could be\nstipulated to fix the meaning of a proposed connective, was contested\nwith the aid of the subsequently much-discussed example Tonk,\na supposed binary connective for which an\nintroduction rule allowed the passage from (arbitrary) φ to φ\nTonk ψ, as with ∨-introduction from the\nfirst disjunct, and an elimination rule allowed the passage from φ\nTonk ψ to ψ, as with ∧-elimination\nto the second conjunct. (This was the point anticipated in §2\nwhen the Tonk problem was mentioned apropos of\nthe dual to hybridizing conjunction and disjunction.) Since this\nallowed, by successively applying (Tonk-I) and\nthen (Tonk-E), any ψ to be derived from\nany φ, Prior took this to show that no coherent meaning had been\nconferred on Tonk by the proposed rules, and\nto refute the general thesis that the meaning of a connective can be\nfixed by means of rules governing it. (Prior saw Popper and Kneale as\nthe targets of his argument, which does not touch Gentzen’s view\nthat the meaning is fixed by the totality of introduction rules for a\nconnective, coupled with the fact that these are the totality of such\nrules. Since there is only the one way of introducing Tonk,\nnamely that provided by (Tonk-I),\nwhere the premiss is φ the meaning of\nφ Tonk ψ is simply that of φ and\nthe appropriate elimination rule is not that given by Prior\nbut rather one licensing an elimination to the first\n“tonkjunct”.) Belnap responded that what was wrong with\nPrior’s Tonk rules was that a proof\nsystem antecedently endorsed for the connectives in use would be\nnon-conservatively extended by the enrichment of the language with\nTonk in tandem with supplementing the proof\nsystem with the (Tonk-I) and then (Tonk-E),\nsince they allow the derivation of the\nsequent φ ≻ ψ even for Tonk-free\nφ,\n ψ.[20]\n Later in this section, we return to Tonk and\nexamine its behaviour in a sequent calculus setting. \nOf course, one expects the addition of new rules to make for the\nprovability of new sequents, but the extension should be\nconservative in the sense that no new sequents exclusively\ninvolving the old vocabulary become provable. Belnap’s\ndiscussion suggests that the existence of a connective obeying certain\nrules should be conceded by someone endorsing a particular proof\nsystem if and only if the addition of that connective to the language\nand those rules to the proof system yields a conservative extension.\n(There are other things one might mean by the question of whether from\nthe perspective of a given logic, a connective with such-and-such\nlogical powers exists—most evidently, whether or not such a\nconnective is already definable in the logic. Showing that rules\nascribing the powers in question would extend the logic\nnon-conservatively would be one dramatic way of showing no such\nconnective to be definable, but since it could fail to be definable\nwhile still being conservatively addable, the questions need to be\nkept distinct.) \nOne snag for such a suggestion is that examples can be found involving two connectives with associated sets of rules\neach of which sets of rules yields a conservative extension of an initial proof system,\napparently requiring the answer “yes, there does exist such a\nconnective” in each case from the perspective of that original system, while extending the initial proof system with\nboth sets of rules at once is non-conservative—undermining this double\nendorsement.[21] We may conclude that while yielding a non-conservative\nextension of a favoured proof system is sufficient to denying the\nexistence or intelligibility of a connective with such-and-such\nlogical properties, there may be other grounds for returning such a\nverdict. Boolean negation comes under just such a critique in Chapter\n5 of Priest (2006), where such problems for Belnap’s account are\nraised and references to the technical literature establishing the\nconservativity of extending certain logics in the relevance tradition\nwith suitable principles governing this connection can also be found.\n(For an earlier presentation of this point, see also Belnap and Dunn\n1981, p. 344, and for a related discussion, Restall 1993, esp.\n§5.) It should be noted also that the conservativity test raises\nissues of its own, independently of the question of whether passing it\nis necessary and sufficient (and what we have been querying is the\nsufficiency half of this package) for acknowledging the existence of a\nconnective. For example, there are sentential connectives which\nconservatively extend intuitionistic propositional logic in\nany of its conventional presentations as a proof system, but\nnon-conservatively extend intuitionistic predicate logic. The\nbest known is dual intuitionistic implication (see\nLópez-Escobar\n 1985).[22]\n Returning to the conservative extension criterion of existence, let\nus note that a related connective, dual intuitionistic negation, can\nbe added conservatively to intuitionistic predicate (and a\nfortiori propositional logic) but already at the propositional\nlevel produces violations of the disjunction\nproperty—that ≻ φ ∨\nψ should only be provable if at least one of\n≻ φ, ≻ ψ, is provable—which on\nsome accounts (e.g., Gabbay 1977 and 1981) renders it illegitimate\nfrom an intuitionistic perspective. Finally, it should be observed\nthat an adherent of intuitionistic logic might be expected to take a\ndim view of a proposed new connective with rules conservatively\nextending that logic but not conserving synonymies, in the sense that\nformulas in the original language which are synonymous according to\n⊢I L are no\nlonger so according to the consequence relation associated with the\nextended proof system. This happens in at least the most\nstraightforward extension of intuitionistic logic by what is called\nstrong\n negation.[23] \nThe issue of uniqueness, as opposed to existence, of connectives (in\nthe logically loaded sense of the term, naturally) is best approached\nby considering when a collection of rules governing a connective\nuniquely characterize that connective in the sense that if\naccompanied by corresponding rules governing a ‘duplicate’\nversion of that connective (of the same arity) result in the synonymy\nof compounds formed from the appropriately many components and the\noriginal connective with compounds formed from the duplicate\nconnective from the same components. In a congruential setting the\nreference to synonymy can be replaced by one of equivalence, in the\nsense of ⊣⊢-equivalence in the consequence relation or\nSet-Fmla framework,\nwith suitable variations for other frameworks. Without the assumption\nof congruentiality one should perhaps distinguish unique\ncharacterization to within synonymy from unique characterization to\nwithin equivalence. And because the rules in question may not be pure,\nbut involve other connectives, it may be necessary to speak of # being\nuniquely characterized (by the given rules) in terms of the\nother connectives involved, so that when the reduplicated system is\nconsidered, # is replaced by its duplicate, #′, say, while the\nother connectives remain as they are. We will not be considering these\ncomplications here. It is easy to see that the natural deduction rules\nfor the various connectives given in Section\n 2\n as well as the sequent calculus rules all uniquely characterize the\nconnectives they govern. (Note that, since this includes the\nintroduction and elimination rules for →, which are shared by any\nnatural deduction system for intuitionistic logic, the rules may\nuniquely characterize a connective which is not fully\ndetermined—not amenable to a truth-functional interpretation.\nThe same applies in respect of negation, though we did not cover this\nin our discussion of natural deduction.) This feature is sometimes\nregarded as necessary for the connectives concerned to be regarded as\nlogical constants, although, as explained in Section\n 1,\n we are not pursuing that issue here. \nA related issue involving both uniqueness and existence does deserve\nattention, however, arising over competition between logics, differing\non the rules governing a connective where the first logic has rules\nwhich suffice to characterize uniquely a connective and the second has\nall these and more governing that connective. The standard example of\nthis is provided by intuitionistic logic and classical logic in\nrespect of negation. The fact that the classical rules go beyond the\nintuitionistic rules and yet the latter already suffice for unique\ncharacterization means that there is no ‘live and let\nlive’ option available for the intuitionist, of recognising that\nthe intelligibility of two distinct negation connectives, classical\nand intuitionistic, which can cohabit in the same proof system each\nwith their respect rules. This should be possible according to those\nwho think that any difference in the logical principles governing a\nconnective reflect a difference as to what is meant by the connective\n(W. V. Quine’s view—see Section\n 5\n below), since once a difference in meaning is acknowledged, the\npreviously ambiguous connective, “¬”, in the present\ninstance, should be replaceable by connectives registering the\ndisambiguation—¬i and ¬c,\nsay—and the intuitionistic and classical logician should be able\nto use whichever they take a special interest in, with no further fear\nof talking at cross-purposes in each other’s company. But of\ncourse this is not a possibility, since the rules governing\n¬i characterize it uniquely and those governing\n¬c duplicate them—think of ¬c as\n¬i′, in terms of the above\ndiscussion—and do more (securing the provability of\n¬c¬cp ≻ p, for\nexample). The result is that the two connectives form equivalent\ncompounds in the reduplicated system and all of the intuitionistically\nunwanted properties of ¬c spill over to infect\n¬i: we can now prove ¬i\n¬ip ≻ p, and so on. The\nconciliatory offer of a purportedly disambiguating notation along\nthese lines is one no advocate of intuitionistic logic can afford to\naccept. (By imposing restrictions on some of the intuitionistic rules,\none can produce candidates for the title of ‘combined\nclassical-and-intuitionistic proof system’—as, for\nexample, in Fariñas del Cerro and Herzig (2001)—but,\nespecially on views according to which the rules of one’s logic\narticulate the meanings of the connectives they govern, resistance to\nany such restrictions is entirely understandable. Imagine an encounter\nwith aliens in which they told us that to explain what they meant by\nsome items of their vocabulary we had to be prepared to restrict the\nprinciple that ψ followed from φ and ψ for\ncertain choices of ψ involving translations of that vocabulary\ninto English.) \nThe above line of thought points in some interesting further\ndirections. For example, the intuitionistic natural deduction rules\ngoverning ∧ (in Set-Fmla),\nwhich are the same as the classical ones, are\nthemselves stronger than the following\n rules:[24] \nWe can take the intuitionistic (and classical) rules to differ from\nthese in replacing the formula variable χ with a set-of-formulas\nvariable Γ. The latter set is stronger in the sense that there\nare sequents provable with its rules (e.g., p, q\n≻ p ∧ q) which are not provable on the\nbasis of the displayed rules (together with the standard structural\nrules, if desired). But clearly the displayed rules uniquely\ncharacterize ∧, since, once we reduplicate them for ∧′,\nwe can take χ in the second and third (collectively,\n(∧E)-style) rules to be φ ∧ ψ, to derive both φ\n∧ ψ ≻ φ and φ ∧ ψ ≻ ψ, from\nwhich by the reduplicated version of the first\n(“(∧′I)”) rule we derive φ ∧ ψ\n≻ φ ∧′ ψ—with a similar derivation for\nthe converse sequent. \nThis example may seem far-fetched from the point of view of\nmotivation, but the dialectical upshot is clear—if the ¬\nrules are objectionable in being stronger than needed for unique\ncharacterization, the same holds for the intuitionistic ∧ rules;\nin any case there are in fact variations on this theme is that have\nbeen seriously proposed as weakenings of classical (or intuitionistic)\nlogic in the construction of quantum (or ortho-) logic, in which the\nrule (∨E) is subjected to restrictions blocking arbitrary sets of\nside-formulas—the Δ and θ of our formulation of this\nrule in Section\n 2—exactly\n as with the ∧ rules inset above (which would be fully general in\nthe respect at issue if our chosen framework were what would naturally\nbe called Fmla-Fmla, a\nframework occasionally used for logical\n investigations).[25]\n One could explore the idea of a requirement that all rules should be\nmaximally general in respect of side formulas, to resist such\npressures to weaken the intuitionistic rules, though what this amounts\nto depends on the logical framework, and it may be hard to hold the\nline without succumbing to a similar pull in the direction of\ngenerality which would take us over from Set-Fmla\nto Set-Set. \nThe sensitivity to logical framework of issues of unique\ncharacterization is well illustrated with the case of modal logic. It\nis possible to fabricate special purpose logical frameworks which\nallow for the formulation of rules uniquely characterizing ☐ in\nall normal modal logics (Blamey and Humberstone 1991), but without\nsuch exotic devices, unique characterization is limited to the case in\nwhich ☐ is fully determined—among the normal modal\nlogics, then, just to that for which ⊢ ☐φ for all\nφ, and that in which φ ⊣⊢ ☐φ for all\nφ.\n (Note  34 is relevant here. The “⊢” just used stands for the\nlocal consequence relation concerned so we could equally well have\nwritten, “⊢ φ ↔ ☐ φ”. Even more\nexotic logical frameworks for modal logic – taking us further still from the idea of an argument with premisses and\nconclusion(s), that is – have been proposed than that just alluded to, several of which are described in Poggiolesi and Restall 2012\nand in the literature cited in their bibliography.) \nThis same framework-sensitivity issue can be illustrated by\nconsidering substructural logics in multiset-based frameworks.\nClassical Linear Logic has two versions of the propositional constants\n(or 0-ary connectives) ⊥ and ⊤, called (in the relevance\ntradition—see Avron 1988—rather than in the notation of\nthe seminal paper Girard 1987) F and f in the\nformer case and T and t in the latter, with the\nfollowing Mset-Mset\nrules, the Greek letters now standing for finite multisets of formulas\n(and commas for multiset union): \nIf we were doing classical logic with multisets, we would need the\nstructural rules (Id), (Weakening) and (Cut) from Section\n 2,\n set-variables now reinterpreted as multiset variables, and the\nfurther rule of Contraction to allow double occurrences of formulas on\nthe left or right of the ≻ to be replaced by single occurrences.\nFor linear logic we retain only (Id) and (Cut), disallowing weakenings\nand contractions, which has the effect that there are now also two\nversions of conjunction and of disjunction, multiplicative and\nadditive—into which distinction we cannot go further here,\nexcept to say that for binary connectives it lines up with the\nintensional/extensional distinction in the relevance\n tradition.[26]\n A sequent calculus presentation of the favoured logic from this\ntradition, R, can be obtained from that for Classical Linear\nLogic (without two of its characteristic 1-ary connectives, called\nexponentials, which are there to mark formulas for which weakening and\ncontraction are permitted) by allowing contraction (while still\nbanning\n weakening).[27]\n We return to R in Example 6 of Section\n 4;\n it is for the sake of that return that the rules governing t\nand T have been given here alongside those for f and\nF, the latter pair being of current interest. Notice that\neven though there is only one rule for F, namely a left\ninsertion rule (with no premiss sequents), this rule suffices to\ncharacterize F uniquely, since in the combined language with\nF′ governed by a like rule we can prove—just by\nappealing to the appropriate instance of the rule F ≻\nF′ and F′ ≻ F. The weaker\nsystem of Intuitionistic Linear Logic is cast in the framework Mset-Fmla0\ndisallowing the appearance of more than one formula on the right, and\nthis application of the left rule for F is available there,\nas also in Mset-Fmla,\nrequiring exactly one formula on the right (since we have exactly one\nformula—F or F′—there in the\npresent case). When we turn to f, again we find that the\nrules uniquely characterize this connective, since (f Left)\nprovides the premiss for an application of (f′ Right)\nwith Γ consisting of (one occurrence of) f and Δ\nempty, yielding f ≻ f′, with the\nconverse proved similarly. (Note that while F ≻\nf is a special case of the (left) rule for F, there\nis no proof of the converse sequent. One cannot begin with f\n≻ and then weaken in an F on the right, since we do not\nhave\n Weakening.[28])\n Again, these derivations go through in Mset-Fmla0,\nbut\nthis time we note that they do not go through in Mset-Fmla,\nsince the left\ninsertion rule has no applications in that framework. When attention\nis restricted to Mset-Fmla,\nthere is no set of pure rules available which\nuniquely characterize f. The Mset-Mset\n(or Mset-Fmla0)\nsequent calculus rules for ¬, which can be taken to be those given\nin Section\n 2\n with the set-variables taken as multiset-variables (suitably\nrestricted for Mset-Fmla0),\nuniquely characterize ¬, but\nhave no direct application in Mset-Fmla\nor any other framework with a fixed multiset\ncardinality on the right (or the left, for that matter). We can say in\nthis framework that the rules governing ¬ uniquely characterize\nthis connective in terms of → and f—on\nthe basis of which it would indeed be explicitly definable (¬\nφ as φ → f), but since here f is not\nuniquely characterized (even though → is), this still leaves\n¬ without its (perhaps) expected uniqueness, as is even more\nevident in Fmla. These considerations continue\nto apply in the presence of contraction (and ∧/∨) distribution,\naccounting for the complaint sometimes made that relevant logic does\nnot operate with a uniquely characterized negation. The point here has\nnot been either to press or to reply to such complaints, but to note\ntheir framework sensitivity: they do not arise for Mset-Mset\nor Mset-Fmla0. \nThe existence and uniqueness questions for connectives turn out in the\ncase of sequent calculus rules to be intimately connected with the\nstructural rules (Id) and (Cut). Let us call the left and right\ninsertion rules governing an n-ary connective #—or\nderivatively, the connective thereby\ngoverned—Id-inductive if the provability of\n#(φ1,…,φn) ≻\n#(φ1,…,φn) follows from\nthe provability of each φi ≻\nφi (i = 1,…,n) by\nmeans of those rules (without assistance from other structural rules).\nThus means that no provable sequents are lost if the rule (Id) itself\nis restricted to having applications φ ≻ φ for φ a\npropositional variable. And let us say that the rules in question are\nCut-inductive if an application of the rule (Cut) with the\nformula #(φ1,…,φn) as\ncut-formula (i.e., as the φ of our representation of the rule\n(Cut) in Section\n 2\n or the analogous rule in Set-Set\nor the multiset based frameworks) can be\ndispensed with if the premiss sequents for the application of the rule\nhave been derived by (# Left) and (# Right) and (Cut) is allowed with\nthe components φ1,…,φn\nas cut-formulas (but again, not allowing the use of other structural\nrules). \nAll the connectives of the standard sequent calculi, including the\ncases of classical and intuitionistic linear logic, are inserted by\nrules which are both Id-inductive and Cut-inductive, as we illustrate\nhere with the rules for →. For definiteness, think of these as\nthe Left and Right rules of classical linear logic. To show\nId-inductivity, we must show that φ → ψ\n≻ φ → ψ is provable using the → rules,\ngiven (‘the inductive hypothesis’) that φ\n≻ φ and ψ\n≻ ψ are. (We write φ and ψ rather than\nφ1 and φ2.) From the last two sequents,\n(→ Left) delivers: φ → ψ, φ ≻ ψ. From\nthis an application of (→ Right) gives the desired conclusion:\nφ → ψ ≻ φ →\nψ. \nFor Cut-inductivity suppose (1) Γ, Γ′, φ →\nψ ≻ Δ, Δ′ has arisen by (→ Left) from\n(1a) Γ ≻ φ, Δ and (2a) Γ′, ψ\n≻ Δ′, while (2) Γ′′ ≻ φ\n→ ψ, Δ′′ has arisen by (→ Right) from\n(2a) Γ′′, φ ≻ ψ,\nΔ′′. We need to show that a cut on (1) and (2) with\ncut-formula φ → ψ can be avoided on the hypothesis that\nwe can help ourselves to cuts with cut-formulas φ, ψ. From\n(1a) and (2a), cutting on φ, we get (3) Γ,\nΓ′′ ≻ ψ, Δ′′. Then\ncutting on ψ, (2b) and (3) deliver the desired conclusion:\nΓ, Γ′, Γ′′ ≻ Δ,\nΔ′, Δ′′, without the need to use φ\n→ ψ as a cut-formula with (1) and (2) as premisses. \nCut-inductivity is one aspect of a procedure which has traditionally\nbeen a professional obsession of proof-theorists: the provision of\n‘Cut Elimination’ theorems to the effect that this or that\nsequent calculus with the rule (Cut) can have this rule removed\nwithout the loss of any provable sequents. Obviously more is needed to\nshow this than the Cut-inductivity of the (pairs of) rules, since\nthere are also, inter alia, potential interactions with the\nother structural (and operational) rules to be taken care of. Such\nresults are of interest because much follows from the subformula\nproperty—any sequent provable has a proof in which the only\nformulas to appear are subformulas of those in the sequent\nconcerned—which itself follows from the result since all the\nremaining rules insert material rather than remove it in the course of\nthe\n proof.[29]\n But from the perspective of the philosophy of logic, Cut-inductivity\nand its somewhat less well-publicized companion, Id-inductivity,\nshould be considered on a par, as the following somewhat\nimpressionistic semantical remark (Girard, Taylor and Lafont 1989,\np. 31) of Girard suggests, apropos of (Cut), in which C\nrepresents the cut formula (and (Id) with C on the left and\nright of the “≻”): \nThe point of isolating Id- and Cut-inductivity here, however, has less\nto do with matters of truth (on which, and for further references to\nGirard on which, see further Hösli and Jäger 1994) than\nwith uniqueness and existence—not that the semantical issues are\nunconnected with this, of course. The former link is perhaps already\nclear. At the last step of establishing Id-inductivity for →,\nabove, we passed from φ → ψ, φ ≻ ψ,\nobtained by (→ Left), to φ → ψ ≻ φ →\nψ, by (→ Left): but this is just what the uniqueness proof in\nthe reduplicated sequent calculus would do, except that the final step\nwould be an application of (→′ Right) and would establish\nφ → ψ ≻ φ →′ ψ, with the\nconverse proved by interchanging the rules used for → and\n→′. \nTo see the connection between existence—or more specifically,\nthe conservative extension side of the existence\nquestion—convert the natural deduction rules for Tonk\ngiven earlier into sequent calculus rules (here\nfor Set-Fmla): \nBy applying the right insertion rule with premiss sequent (courtesy of\n(Id)) φ ≻ φ and the left rule with premiss ψ ≻\nψ we arrive at the point at which our natural deduction derivation\nstarted to go bad: we have: \nand an appeal to (Cut) here, with φ Tonk\nψ as cut-formula, amounts to bringing home the bad\n news.[30]\n But of course this example simply makes vivid the fact that the Tonk\nrules in play are not Cut-inductive and there\nis no Cut-free proof of the desired sequent (at least in general: take\nφ = p, ψ = q). This is hardly surprising\nsince the subformula property which Cut Elimination secures itself\nguarantees that the rules for one connective conservatively extend the\nsubsystem comprising the rules for the remaining connectives. In the\npresent case, the point of the example was that there was no proof of,\nfor example, p ≻ q which did not\ndetour—in violation of the subformula property—via\nformulas involving Tonk. \nWe can look at what is roughly speaking a mirror-image of the Tonk\nexample to reinforce the contrast between\nCut-inductivity and Id-inductivity and their respective links with\nexistence and uniqueness, and then sort out the “roughly\nspeaking” part of this description, which will show them as\nproviding, rather, special—one might say canonical—cases\nof the satisfaction of the existence ( = conservative extension) and\nuniqueness conditions. We conduct the discussion in Set-Set\nrather than Set-Fmla\nto avoid a mass of\ncomplications. The above Tonk rules combine a\nleft insertion rule familiar from the sequent calculus treatment of\n∧ and a right insertion rule familiar from that of ∨; their\nreformulation for the change of framework just announced requires an\nidle Δ parameter on the right of the sequents in the premisses\nand conclusions of the rules as schematically presented above\n(replacing the χ in the one case, accompanying the displayed\nsuccedent formulas in the other). For our mirror image\n example,[31]\n consider a binary connective Knot with rules\ncombining instead the left insertion rule for ∨ with the right\ninsertion rule for ∧: \nThese rules are Cut-inductive, as the interested reader may confirm,\nbut not Id-inductive, since they do not uniquely characterize Knot.\nTo see this, note that both are derivable\nrules for ∧ and also for ∨, and of course we cannot prove φ\n∨ ψ ≻ φ ∧ ψ in general. By contrast, neither\n∧ nor ∨ satisfies both of the left and right rules for\nTonk. The upshot of the Knot\nrules is best visualised in terms of the\nzero-premiss rules (sequent-schemata) with which they are\ninterderivable given the structural rules: φ,\nψ ≻ φ Knot ψ (the\nright rule) and φ Knot\nψ ≻ φ, ψ (the left rule). An incidental\npoint: since these are the sequent formulations of conditions induced\nby the determinants 〈T, T, T〉 and\n〈F, F, F〉 one might think of them\ntogether as expressing idempotence and therefore as being\ninterchangeable with the simpler pair φ ≻ φ Knot\nφ and φ Knot\nφ ≻ φ. But while the latter two can be derived from the\nearlier pair (just take ψ as φ), the converse derivation is\nnot possible without further principles—conspicuously, a sequent\nversion of the extensionality conditions on generalized consequence\nrelations mentioned in Section\n 2.\n We could call binary # for which φ, ψ ⊩φ # ψ\nand conversely, strongly idempotent according to the\ngeneralized consequence relation ⊩. Then ∧ and ∨ are not\nthe only Boolean candidates for a connective behaving as the Knot\nrules dictate—strongly idempotent\naccording to the generalized consequence relation\n⊩CL determined by the class of Boolean\nvaluations: we also have the binary projection to the first coordinate\n(φ # ψ equivalent to φ), to the second coordinate (φ #\nψ equivalent to ψ), and venturing further afield, the Set-Fmla\nhybrids of any two\nof these connectives. Of these perhaps the most interesting is the\nhybrid of the two projection connectives, since this—let us\nwrite is as “•”—can be used to define all other\nhybrids explicitly from the connectives to be hybridized; for example\nif we want the common properties (as explained in Section\n 2)\n of → and ∨, we have them in the following compound of φ\nand ψ: (φ → ψ) • (φ ∨\n ψ).[32] \nIf the treatment of Knot were genuinely the\nmirror image of that of Tonk, we would be able\nto say that just as the Knot rules are\nCut-inductive but not Id-inductive, so the Tonk\nrules are Id-inductive but not Cut-inductive.\n(The twofold demand of Cut- and Id-inductivity is a promising\ncandidate for the notion of harmony as it applies to the\nrelation between right and left insertion rules in a sequent\n calculus.[33])\n And while the failure of Cut-inductivity was indeed noted, nothing\nwas said on the subject of Id-inductivity for these rules. Spoiling\nthe intended duality, the situation is that the Tonk\nrules fail on this score too—though this\ncan be remedied by a simple variation. First, we should note that\nPrior’s point could equally well have been made by combining the\n∨ introduction rule from the second (rather than the to\nfirst) disjunct with the ∧ elimination rule to the first\n(rather than to the second) conjunct. Call the connective with these\nrules Tonk* \nThis suffers from the same defects in respect of the analogy with\nKnot, so, finally, let Tonk+\nbe governed by the rules for Tonk\nand also the rules for Tonk*.\nIt is Tonk+\nthat has Knot\nas its mirror image, since just as we Knot\nhas the full force of the (∧ Right) and\n(∨ Left) rules, Tonk+ enjoys the\nfull force of the (∧ Left) and (∨ Right) rules. (So here we\narrive at the reason that Knot was originally\ndescribed as only roughly speaking a mirror image of Tonk.)\nAnd this time the rules are indeed\nId-inductive without being Cut-inductive. Indeed, Id-inductivity is\nsecured by two independent routes: by the interaction of the Tonk\nLeft rule for Tonk+\nwith the Tonk*\nRight rule to Tonk+,\nand then again by the interaction\nof Tonk+‘s Tonk*\nLeft rule with its Tonk\nRight rule. (To give the former in more detail,\nby way of example, the Tonk Left rule for\nTonk+ gives φ Tonk+\nψ ≻ψ from\n(Id)-for-ψ, from which applying the Tonk*\nRight rule for Tonk+ we obtain\nφ Tonk+ ψ ≻ φ\nTonk+ ψ.) \nLet us sum up the lessons for the relations between existence and\nCut-inductivity and between uniqueness and Id-inductivity that can be\nextracted from the foregoing discussion. Sequent calculus rules which\nare Id-inductive uniquely characterize the connective they govern, but\nnot necessarily conversely: the Tonk rules are\nnot Id-inductive, but they do uniquely characterize Tonk,\nsince they are already so strong that any\nsequent with at least one formula on the left and at least one on the\nright can be proved with their aid, and hence, in the reduplicated\nsystem with Tonk′, we can certainly\nprove φ Tonk ψ ≻ φ Tonk′\nψ and the converse\nsequent—without even using the Tonk′\nrules! (This is the kind of thing we\nhave in mind in calling this a non-canonical form of uniqueness.) On\nthe ‘existence’ side: it is not clear to the author\nwhether any Cut-inductive rules governing a connective guarantee that\nthey are conservative over the (system consisting of the) rules\ngoverning other connective—since Cut Elimination may fail for\nother reasons; nor do the examples just considered settle the\nconverse, as we see from the following tabular summary of our\nfindings, in which (a “Yes” by) “unique” means\nthe rules uniquely characterize the connective, and\n“conservative” means that we have a conservative extension\nof any system of sequent-calculus rules not involving the given\nconnective; Tonk* is not listed separately\nsince it patterns the same way as Tonk: \nThat is enough on the subject of Tonk and\nvariations. We will make one point about unique characterization and\nthen give some examples of non-conservative extension which will\ninvolve introducing the important concepts of special and\nuniversally representative connectives. Some further\n‘existence’ examples are deferred to the following\nsection. \nThe above discussion has included such phrases as “the hybrid of\n∧ and ∨”; the totality of principles governing such a\nconnective being those common to ∧ and ∨, we obviously do not\nhave a connective uniquely characterized by those principles—in\nwhich case is it legitimate to speak of the hybrid…? I\ntake this way of speaking to be as harmless as speaking of “the\n☐ operator of S5”, where again the logical\nprinciples involved are insufficient to characterize the connective\nuniquely—in terms of the Boolean connectives or\notherwise—at least if we are Fmla, Set-Fmla\nor Set-Set,\nand in the latter\ncases, working with the so-called local (generalized)\nconsequence\n relation.[34]\n (See Section\n 5\n for the distinction between the local and the global consequence\nrelations determined by a class of models.) One could say that in the\nmonomodal, unreduplicated case, we have a single connective playing a\ncertain role and we can refer to it in that context as the\nconnective playing the role in question, while conceding, as we learn\nfrom the reduplicated case, that this is a role that can be played\nsimultaneously (i.e. in a single logic) by several non-equivalent\nconnectives. This is the kind of situation Łukasiewicz had in\nmind when, in his (1953), he likened certain pairs of connectives to\n“twins who cannot be distinguished when met separately, but are\ninstantly recognised as two when seen together”. \nWe saw earlier that combining the intuitionistic and classical rules\nin a single proof system did not work well, and another suggestion\nthat comes to mind is that we could perhaps extend intuitionistic\nlogic with a new connective, 1-ary #, say, which does what according\nto the intuitionist, negation (¬) itself cannot do: serve as a\nleft inverse for ¬ in the sense of rendering equivalent\n#¬φ and φ for all\n φ.[35]\n This again represents an offer the intuitionist cannot afford to\naccept, assuming that any (the rules for any) proposed new connectives\nshould conserve synonymy, as suggested above. (The even stronger\ndemand that the consequence relation associated with the extended\nproof systems should be congruential does not seem unreasonable.) The\nreason is that ¬p and ¬¬¬p are\nintuitionistically equivalent (and thus synonymous according to\n⊢I L) so the conservation of synonymy\nrequires that #¬p and #¬¬¬p should\nbe equivalent—since we have this ‘Law of Triple\nNegation’ equivalence in intuitionistic logic—from which\nthe left inverse condition above delivers, taking φ as\n¬p in the former case and as ¬¬¬p in\nthe latter, the equivalence of p with\n¬¬p—a straightforwardly non-conservative\nextension, then. (A similar argument shows that adding binary # with\nφ # (φ ↔ ψ) equivalent to ψ—a possibility\nsuggesting itself since, by contrast with the classical case, ↔\nitself cannot serve as # here—is also non-conservative.) Nor,\nincidentally, could the intuitionist acknowledge the existence of a\nright inverse for negation, a # with arbitrary φ\nequivalent to ¬ # φ, as this makes every formula equivalent to\na negated formula and hence to its own double negation. This argument,\nwhich is well known (see, e.g., Koslow (1992), p. 97), does not even\nrequire the ‘conservation of synonymies’ constraint. \nThese last non-existence proofs force our attention on the fact that\nnegated formulas are ‘special’ in intuitionistic logic in\nthat each such formula is equivalent to its own double negation while\nthis is not so for arbitrary formulas. Let us back up and give a clear\nexplanation of the notion of specialness as well as a contrasting\nnotion, in slightly more general terms; for definiteness only, we\ntailor the account to Set-Fmla.\nWe also begin with the contrasting notion. Say\nthat an n-ary relation R among the formulas of a\nlanguage is universally representative according to a\nconsequence relation on that language if for any formulas\nφ1,…,φn of the language,\nthere are formulas\nψ1,…,ψn, respectively\nsynonymous with φ1,…,φn\naccording to ⊢, with\nR(ψ1,…,ψn). (If\nn = 1, we speak instead of a universally representative\nclass of formulas—a class of formulas such that every\nformula is synonymous with some formula in the class; likewise in the\ncase of the notion special, defined below.) If ⊢ is\ncongruential then we can replace “synonymous” in this\ndefinition with “equivalent” (i.e. such that\nφi ⊣⊢ ψi,\nfor i = 1,…,n). Say that R is\nspecial according to ⊢ if there is some Set-Fmla\nsequent σ(p1,…,\npn) constructed using not\nnecessarily just the variables exhibited, for which for any formulas\nψ1,…,ψn with\nR(ψ1,…,ψn), we\nhave σ(ψ1,…,ψn)\n∈ ⊢, while we do not have, for all formulas\nφ1,…,φn, σ(φ1,…,φn)\n∈ ⊢. For substitution-invariant ⊢, this last\ncondition can be simplified to:\nσ(p1,…,\npn) ∉\n ⊢.[36]\n A consequence of these definitions is that no relation is both\nuniversally representative and special according to any given ⊢.\nA simple example of a special relation—according to more or less\nany ‘naturally occurring’ consequence relation with ∨\nin its language is relation R obtaining between φ and\nψ just in case ψ is a disjunction of which φ is a\ndisjunct. Here take σ(p, q) as p\n≻ q which is (e.g., in intuitionistic logic, though\nclassical logic or any of many others would do as well)\nunprovable—i.e., not p\n⊢I Lq—while φ\n⊢I L ψ for all φ, ψ for\nwhich R(φ, ψ). A more interesting example is the\nrelation of being (intuitionistically) head-linked, i.e.,\nthat relation R such that for all φ, ψ,\nR(φ, ψ) if and only if: \nThe analogous relation for classical logic would be universally\nrepresentative (and thus not special), at least in any fragment which,\nas well as having →, has either ⊥ or ∧, since any φ\nand ψ are here respectively equivalent to (φ → ⊥)\n→ ⊥ and (ψ → ⊥) → ⊥, where they are\nlinked explicitly by having a common χ at the head of the main\nimplication. (Alternatively with ∧, replace ⊥ here by φ\n∧ ψ.) But in the intuitionistic case the relation of being\nhead-linked is special since, for example, with Peirce’s law\nσ(p,q) = (p → q) →\np ≻ p, we have σ(p, q)\nintuitionistically unprovable but we have σ(φ,ψ) ∈\n⊢I L for any head-linked \nφ, ψ. \nConcentrating now on 1-ary relations between—i.e., classes\nof—formulas, we transfer the above terminology to connectives by\nsaying that a connective is universally representative or\nspecial according to a consequence relation if the class of\nformulas with the given connective as main connective is itself a\nuniversally representative class or a special class of formulas,\nrespectively, according to the consequence relation in question. While\nevery non-constant\n connective[37]\n is universally representative according to\n⊢CL our discussion of inverses for\nintuitionistic ¬ shows that ¬ is special according to ⊢,\nsince we can take σ(p) as ¬¬p ≻\np and every substitution instance of this IL-unprovable\nsequent in which p is replaced by a negated formula is\nIL-provable. Negation is therefore not universally representative in\nintuitionistic logic. (This means that we could usefully speak, from\nthe perspective of ⊢I L, of negative\npropositions, thinking of the equivalence class, with respect\nto the relation of synonymy, of a formula as the proposition thereby\nexpressed, and meaning by this the equivalence classes of negated\nformulas. Classically, the corresponding notion is not useful since\nall propositions would count as negative, just as for both\n⊢CL and ⊢I L,\nthere are no specifically conjunctive or disjunctive\npropositions.) \nAlthough the properties of being special and being universally\nrepresentative according to a given logic are mutually exclusive, they\nare not jointly exhaustive. For example, ⊥ is neither universally\nrepresentative nor special in minimal logic (according to the\nconsequence relation associated with the Johansson’s\nMinimalkalkül, that is). Nor does the connective ☐\nhave either of these properties in the modal logic KD\n(sometimes just called D), though this example is far from\nselected at random: in the sublogic K, ☐ is special (since\n☐⊥ → φ is provable for all ☐-formulas φ,\nthough not for arbitrary φ), and in the extension KD4 it is\nspecial again (since φ → ☐φ is provable for all\n☐-formulas φ, though not for all formulas). \nFor conditions other than those corresponding to (closure under\ncertain) rules we can also ask whether a connective satisfying the\ncondition in question can safely—i.e. conservatively—be\npostulated to exist. One such condition is the following, here\nexpressed as a condition on a consequence relation ⊢ with a\nbinary connective # in its language, all variables understood as\nuniversally quantified: \nIt is because of the “or” on the right that this\ncondition—more precisely, its ‘only if’\nhalf—does not correspond to a sequent-to-sequent rule. Still we\ncan ask whether some Set-Fmla\nproof system including the rule (∨E) (or the\nsequent calculus rule (∨ Left)), e.g. for classical logic, has a\nconservative extension to a proof system for a language with the\nadditional connective #, whose associated consequence relation\nsatisfies the above condition for this\n #.[38]\n To see that the answer to this question is negative, note that the\nbinary relation R⊢ defined in terms of the\n#-supporting extension ⊢:\nR⊢(φ,ψ) iff φ ⊢ ψ,\ngives rise to a binary relational connection (L, L,\nR⊢) which provides conjunctive\n(yes—conjunctive) combinations on the left, since\n⊢ is ∨-classical, φ ⋅L ψ\nhere being φ ∨ ψ, while the inset condition above (take\nΓ = {χ}) secures disjunctive objects on the right, with\nφ +R ψ being φ # ψ.\n(“L” and “R” subscripts from\nSection\n 1\n restored here to prevent confusion, since the source and target\ncoincide.) Thus the crossover condition from Section\n 1\n is satisfied, which says that if φ1 ⊢\nψ1 and φ2 ⊢ ψ2 then\neither φ1 ⊢ ψ2 or\nφ2 ⊢ ψ1. Taking φ1\n= ψ1 = χ and φ2 = ψ2\n= χ′, we have the antecedent of this conditional (by (Id)),\nso we conclude that for all formulas χ, χ′, either χ\n⊢ χ′ or χ′ ⊢ χ, which includes\n#-free formulas of the original language (e.g., χ = p,\nχ′ = q) for which neither is a consequence of the\nother by the original consequence relation, showing any proposed\nextension along the above lines to be non-conservative. \nThis is really a whole range of examples. As we required (∨E) for\nExample 1, here we require (→I). Let us call a consequence\nrelation ⊢ →-introductive if Γ, φ\n⊢ ψ always implies Γ ⊢ φ →\n ψ.[39]\n Now suppose ⊢ ⊇ ⊢I L and\n⊢ is →-introductive, and either (i) for some n-ary\nconnective #, ⊢ satisfies the conditions induced (on consequence\nrelations) by the determinant 〈F,…, F,T〉 (n\noccurrences of “F”) for #, as well as some determinant\nwith F as its final entry, or (ii) ⊢ satisfies the conditions\ninduced by the determinant 〈T,…,T, F〉 (n\noccurrences of “T”) as well as some determinant with T as\nfinal entry (for n-ary #). Then it follows that ⊢\n⊇ ⊢CL. \nThe implication from (i) to the conclusion that ⊢ ⊇\n⊢CL has been stressed in several publications\nby S. Pollard (Pollard 2002, Pollard and Martin 1996); there is a\nsimilar proof for the implication from (ii). Neither proof is given\nhere—only an illustration (of case (ii)). The truth-function\nknown as exclusive disjunction (or xor), which differs from\nthat associated on Boolean valuations with ∨ (“inclusive\ndisjunction”) by having 〈T, T, F〉 instead of the\ndeterminant 〈T, T, T〉, will serve as an example, since as\nwell as the determinant just mentioned, which has T’s except for\nthe final F, we have a T-final determinant (e.g.) 〈T, F, T〉.\nThe induced conditions on generalized consequence relations for these\ntwo determinants are respectively: \nFor the following, we will take it that, as well as →, the\nconnectives ∨, ¬, ⊤ and ⊥ are available, though in\nfact the result just given requires is correct for any fragment with\n→ (with ⊢CL understood as the restriction\nof the classical consequence relation to the fragment in question).\nThen we can write the induced conditions on our consequence relation\n⊢ as, respectively, rather than using a new schematic letter on\nthe right for the first, and converting the second into conditional\nform: \nNow making use of the hypothesis that ⊢ is\n→-introductive—which does not follow from the fact\nthat ⊢I L is →-introductive and\n⊢ ⊇ ⊢I L—the first\ncondition now allows for successive rewriting, first as \nand then as \nThe fact that ⊢ is an →-introductive extension of\n⊢I L suffices for ⊢ to be\n∨-classical, and in particular for it to be\n‘∨-eliminative’ in the sense that whenever Γ\n⊢ χ1 ∨ χ2 and also\nΓ′, χ1 ⊢ θ and\nΓ′′, χ2 ⊢ θ, we have\nΓ, Γ′, Γ′′ ⊢ θ. Thus\nfrom the fact that φ ⊢ ψ ∨ (φ # ψ), inset on\nthe right above, and that φ # ψ ⊢ φ →\n¬ψ, we may conclude that φ ⊢ ψ\n∨ (φ → ¬ψ). Not only does this\nfail—e.g., with the schematic letters replaced by distinct\npropositional variables—for ⊢I L,\nmaking the extension non-conservative, it takes us all the way to\n⊢CL, as claimed in the general formulation\n((i) and (ii)) of the result. To see this most easily in the present\ncase, take φ as ⊤. \nDoes any of this mean that there is a problem in finding an\nintuitionistic analogue of exclusive disjunction? Not at all. There\nare many derived binary connectives all of which form compounds\nequivalent in classical logic to the exclusive disjunction of φ\nwith ψ and which are in the interesting cases not equivalent to\neach other intuitionistically—for example, φ ↔\n¬ψ and ¬(φ ↔ ψ) and (φ ∨ ψ) ∧\n¬(φ ∧ ψ). As it happens, the third of these (which is\nIL-equivalent to (φ ∧ ¬ψ) ∨ (¬\nφ ∧ ψ)) has an especially close relationship with\nthe truth-function of exclusive disjunction, like that between\nintuitionistic ¬ and the negation truth-function, which can be\nexplained in terms of the Kripke semantics for intuitionistic logic\n(not explained in this entry) by saying that the compound in question\nis true at a point just in case at every accessible point it is true\nwhen evaluated by using the corresponding boolean function and the\ntruth-values of the components at that\n point.[40]\n Note that the negation truth-function itself has its\ndeterminant-induced conditions rules dangerous to the health of\nintuitionistic logic under both (i) and (ii) of the result at the\nstart of this example: no single connective can conservatively form\nfrom a formula a contrary of that formula (as 〈T,\nF〉 demands) and also a subcontrary of\nthat formula (as 〈F, T〉 demands). As it is often put,\nstandard intuitionistic negation (¬) forms the deductively weakest\ncontrary of a formula, while dual intuitionistic negation (mentioned\nonly in passing in this entry) forms its deductively strongest\n subcontrary.[41] \nCould there be a 1-ary connective # two successive applications of\nwhich amounted to a single application of (say) classical\n negation?[42]\n If we work in Set-Set\nan austere version of this question amounts to asking about the fate\nof # subjected, alongside the standard structural rules, to the\ncondition that for all φ: \nshould both be provable, to which it is natural to add immediately\nthat # should be congruential according to the generalized consequence\nrelation associated with this proof system. Without the latter\naddition, we could just think of “##” as an\nidiosyncratically long-winded way of writing “¬”. With\nit, we are insisting that a single occurrence of “#” is\ngenuinely responsive to the content of what it applies to. It is not\nhard to see that there is no (two-valued) truth-functional\ninterpretation available for #, not just in the weak sense that it\nmight be said that (for example) ☐ in S4 does not admit\nof such an interpretation—that this logic is determined by (\n= both sound and complete with respect to) no\nclass of valuations over which ☐ is truth-functional—but\nin the stronger sense that the envisaged logic of # is not even\nsound with respect to such a class of valuations, at least if\nthat class is non-constant in the sense defined at the end of\nnote 20.[43]\n In the paper cited, this congruential logic of what is there and in\nan earlier paper there referred to as demi-negation is discussed and\nequipped with a Kripke-style semantics (essentially re-working an\nearlier 4-valued matrix semantics) the upshot of which is that\nclassical propositional logic or any fragment thereof is\nconservatively extended by the two zero-premiss rules inset\nabove—or alternatively, assuming ¬ is in the fragment, by\nthe equivalence of ¬φ and ##φ—and a congruentiality\nrule for #. Nevertheless it is hard to imagine, “from the\ninside”, speaking a language with a connective for which this\nprovided a suitable formal treatment. The description suggested at p.\n257 of Dalla Chiara, Giuntini, and Greechie (2004), a study in quantum\nlogic, of such a connective as expressing a kind of tentative\nnegation, seems wrong, since iterating tentative negation would not\nproduce (untentative) negation: If you tentatively negate the\ntentative negation of φ you would appear to be headed (however\ntentatively) back in the direction of φ rather than towards ¬\nφ. On the same page of Dalla Chiara et al. (2004),\nDeutsch et al. (2000) are approvingly quoted as saying the\nfollowing—in which, since composition is more like\nmultiplication than addition, demi-negation is referred to as the\n‘square root’ of negation: \nI do not recall logicians having to seek the blessing of physicists\nbefore pursuing this or that line of inquiry, or of the interest,\nsignificance or legitimacy (“now entitled to propose...”,\nno less) of such inquiries being dependent on empirical and\ntheoretical findings in physics, when what is under investigation is\nmost naturally taken to be an a priori matter: the coherence\nof a connective with given inferential properties. This is not at all\nto deny that the ‘quantum machines’ described in Deutsch\net al. (2000) (or Chiara, Giuntini, and Greechie 2004,\n257–259) may help us get a feel for the connective in\n question.[44] \nSuppose one wants to say more about the weather than that it rained on\na particular Saturday. One wants to strengthen one’s commitments\nso that they include not only rain on Saturday but also rain on the\nfollowing Sunday. With ∧ (assuming some background ∧-classical\nconsequence relation) there is nothing easier. Abbreviating “It\nrained on the Saturday in question” to Sat and\n“It rained on Sunday” to Sun, one can convert\none’s original statement into one making the stronger claim by\npassing from Sat to Sat ∧ Sun. Now\nsuppose one wanted a similar device but working in the reverse\ndirection. One starts with a claim whose content is given by Sat\n∧ Sun and wants to modify this using a connective\nwhich removes commitments in much the way that ∧ adds them, and\nusing this connective, often called logical subtraction\n(though a case could be made for ‘logical division’ in\nview of the usual association of conjunction with multiplication), one\nwants to take away the commitment to rain on Sunday, leaving only the\noriginal claim. That is, one would like a connective added to the\nlanguage of one’s favoured consequence relation, in such a way\nthat the added connective was governed by rules making the extension\nconservative, but for which one had the equivalence (writing ⊢)\nfor the extended consequence relation: \nAn early and plausible suggestion for the treatment of logical\nsubtraction was made in Hudson (1975). According to this suggestion,\nno new connective is required, at least if we already have a\nreasonable implication connective at our disposal, because if we are\nto think of φ − ψ as giving us\nthe result of taking away the content of ψ from that of φ,\nthen this should be the weakest statement which, together with ψ,\nhas φ as a consequence. But this is just ψ → φ, if\nthe standard natural deduction rules for → from Section\n 2\n are accepted (as in intuitionistic and classical logic). Yet this\ndoes not give us the inset equivalence above. If we treat\n(Sat ∧ Sun) − Sun as Sun\n→ (Sat ∧ Sun), then this is equivalent (in\nthe logics just mentioned and many others) to Sun → \nSat, whereas we wanted the stronger Sat itself (stronger\naccording to those logics, again). \nThe example above used an interpreted language with atomic sentences\nSat and Sun. The inset equivalence presented\ninvolving them would not be reasonable for all sentences. Modulating\nback to the issue of a formal propositional logic involving the\nenvisaged new connective, such an equivalence would not be reasonable\nfor arbitrary φ and ψ in place of them, since we would expect\nthe new connective to be congruential according to the desired\nconsequence relation, and any unrestricted such equivalence would then\ndeliver from φ1 ∧ ψ ⊣⊢\nφ2 ∧ ψ—by “subtracting ψ from\nboth sides” (in view of congruentiality)—the conclusion\nthat φ1 ⊣⊢ φ2, and it easy\nto find counterexamples to such cancellation inferences for even quite\nweak initial logics. Since the counterexamples arise for\nφ1, φ2, in the language unexpanded by\n“−”, the sense in which a generalized version of the\nearlier equivalence would not be reasonable is that it would not be\nconservative over the initial logic. Here we say no more about how to\nconstrain the equivalence in question, or, more generally, about\nwhether there really is any such logical subtraction connective as\nwe have been\n envisaging.[45] \nA much more straightforward example, this time considering several\nconnectives at once. Suppose we ask whether one can conservatively add\nto intuitionistic logic three binary connectives #1,\n#2, #3, satisfying for all φ, ψ: \nIn classical logic we can take φ #1 ψ and φ\n#2 ψ as (equivalent to) ¬φ and ¬ψ\nrespectively, and φ #3 ψ as ⊥. There are no\nthree candidates playing the desired role in any conservative\nextension of intuitionistic logic, however, because the inset\nequivalences render arbitrary φ and ψ head-linked in the sense\nof Section\n 3,\n with φ #3 ψ as the head formula. \nThe present example comes from the relevant logic R. The\nsentential constants T and t whose sequent calculus\ntreatment we saw in Section\n 3\n are treated in axiomatic developments of R by means of the\naxiom schemas φ → T for the former cases and both\nt and t → (φ → φ), though these\nlast two can be replaced by φ ↔ (t → φ).\nHere ↔ itself can be regarded as an abbreviation either of (φ\n→ ψ) ∧ (ψ → φ), or as (φ\n→ ψ) ○ (ψ → φ),\nwhere ∧ and ○ are the additive or ‘extensional’\n(as the relevance tradition would have it) conjunction and the\nmultiplicative or ‘intensional’ conjunction (also called\nfusion) respectively. While in linear logic neither\np ○ q nor p ∧ q provably\nimplies the other, in R, thanks to the presence of contraction,\nthe latter implies the\n former.[46]\n A well-known further side effect of contraction is that φ ○\nψ and φ ∧ ψ are also equivalent whenever φ is an\nimplicational formula and ψ is its converse, so the two\nalternative readings of φ ↔ ψ above are equivalent in\nR. Now consider the possible existence of a new nullary\nconnective for R in the ‘truth constants’ family,\nT, subject to the axiom schema: \nThis looks harmless enough, the principles governing t,\nT and T all holding for the\nundifferentiated ⊤ constant of classical and intuitionistic\nlogic, but here notationally distinguished so as not to prejudice\nquestions of the logical relations between\n them.[47] \nBut in R, this harmless appearance is deceptive. For in this\nlogic the connective ↔ is what we have called special.\nAfter the well-known extension, R-Mingle or RM, of\nR by the Mingle schema φ → (φ\n→\n φ),[48]\n let us call a formula φ for which this is already provable in\nR a Mingler. Since RM is a proper extension of\nR, not all formulas are Minglers in R. But again thanks\nto contraction, all ↔-formulas are Minglers, rendering ↔\nspecial in R. Now we can see that the addition of T,\nsubject to the schema inset above, would\nextend R non-conservatively because now every formula φ\nwould be equivalent to the corresponding ↔-formula T\n↔ φ, so even for T-free\nφ we should have the Mingle theorem\nφ → (φ → φ). Thus no devotee of R should\nbe prepared to countenance the existence of T\nbehaving as envisaged (or indeed any pair\n#1, #2 of 1-ary connectives with φ provably\nequivalent to #1φ ↔ #2φ). \nThe fact that the biconditional connective is special in R may\nappear to conflict with the fact, established in Blok and Pigozzi\n(1989) that this logic is what the authors call\nalgebraizable. This term is applied to consequence relations\n⊢ which are translationally equivalent to the quasi-equational\nconsequence relation ⊨K of a class of algebras\nof the same similarity type as the language of ⊢. That is, for\nequations\ne1,…,en, we\nhave\ne1,…,en−1⊨Ken just in case for any algebra A\n∈ K and any assignment of elements of A to the\nvariables in the ei, if all of\ne1,…,en−1\ncome out true in A on that assignment, so does\nen. The translational equivalence idea\nmeans that there is a translation τ from formulas of the\n(sentential) language of ⊢ to equations of the language of\nK, and a translation τ′ back in the other direction,\nwhich are mutually inverse in the sense that φ ⊣⊢\nτ′(τ(φ)) and e\n⫤⊨K τ(τ′(e)) for\nall formulas φ and equations e, and, for all formulas\nφ1,…,φn and equations\ne1,…,en,\neither of the following conditions is satisfied (from which it follows\nthat both are): \nand \nThis account of algebraizability has been oversimplified for\nexpository purposes in one respect: Blok and Pigozzi (1989) do not\nrequire the translation of a formula (what we are calling τ)\nshould yield a single equation, but allow a set of equations,\nand similarly in the converse direction, τ′(e) is\nallowed to be a set of formulas. It follows from the present\ndefinition, with the single equation/single formula restriction\nremoved, that the formulas in the latter set function collectively as\nan equivalence-like compound satisfying some further congruence\nconditions, which in the case of ⊢R can be\ntaken to be ↔. Accordingly, the fact that\n⊢R—explained presently—is\nalgebraizable, entails, in view of the “φ ⊣⊢\nτ′(τ(φ))” condition, that, loosely speaking,\nevery formula is equivalent to an equivalence. But does this not clash\nwith our finding that ↔ is special in R? \nWell, first, the consequence relation ⊢R needs\nto be explained. Blok and Pigozzi have in mind the least consequence\nrelation for which φ, φ → ψ ⊢\nψ and φ, ψ⊢ φ ∧\nψ and ⊢ φ for all φ provable in the\nFmla logic R. (This third condition can\nbe restricted to all axioms of any axiomatization of R with\nformula-to-formula rules corresponding to the first and second\nconditions.) Now the loose summary just given to the effect that every\nformula is equivalent to an equivalence makes a misleading double use\nof the equivalence vocabulary for two different things: equivalence as\nmutual consequence (“⊣⊢”) and equivalence as\nthe biconditional connective. Removing the conflation, it means that\nfor every φ there exist ψ, χ, with φ\n⊣⊢Rψ ↔\n χ.[49]\n This is a very different matter from having\n⊢Rφ ↔(ψ ↔ χ). The latter\nwould indeed be equivalent to the provability in the sequent calculus\ndescribed for R in Section\n 3\n of φ ≻ ψ ↔ χ and the converse sequent. But the\napparently matching ⊢R-statements mean\nsomething very different, building in the structural features (such as\nweakening) that the substructural sequent calculus was designed to\navoid. Note in particular that ⊢R is not\n→-introductive, in the sense of Example 2 above. \nCould there exist a connective #′ which, when appearing outside\nof the scope of some specified range of operators – typically,\nnon-Boolean connectives – behaves just like a given Boolean\nconnective #, while behaving differently from # when occurring within\nthe scope of one of the operators in the range in question?\nUnderstanding all of this as happening under the aegis of some\nparticular consequence relation, on which more will be said in the\nfollowing paragraph, the situation envisaged would be like this. A\n#′-compound would be equivalent to a #-compound of the same\ncomponents, each compound having the other as a consequence by the\nrelevant consequence relation, without being synonymous with that\ncompound (synonymy as explained in Section\n 1).\n The remainder of this example assumes some familiarity with the basic\nmodal logic of “actually”. The semantics of this logic can\nbe presented, as in the first two pages of Davies and Humberstone\n(1980), using models with a distinguished point (or world), with a\nformula Aφ evaluated as true at any point in the model\njust in case φ is true at the distinguished point. The\ngenerally valid formulas are then those true every point in\nall such models, and the generally valid sequents are those for which\ntruth is preserved from left to right at each point in all such\nmodels. The real-world valid formulas (sequents) are those\nwhich are true (resp. truth-preserving) at the distinguished point in\nall models. \nAlternatively, the semantics can be reformulated so that the models\nfeature no such privileged point and truth (in a model) is relativized\nto a pair of points, one of which plays the ‘real world’\nrole formerly played by the distinguished element, the other playing\nthe role of the world of at which the formula is being locally\nevaluated, as in notes 4 and 16 of Davies and Humberstone (1980).\nGeneral validity is a matter of truth or its preservation relative to\narbitrary such pairs in all models, and diagonal validity (as\nreal-world validity is often suggestively called in this setting)\nattends instead only to pairs whose first and second coordinates\ncoincide. On either style of presentation, the formulation in terms of\nsequents gives a consequence relation in the obvious way, and for\npresent purposes the following terminology will be convenient.\nFormulas will be said to be diagonally equivalent when each\nis a consequence of the other by the consequence relation capturing\ndiagonal (or ‘real-world’) validity and to be\nunrestrictedly equivalent when this holds instead for the\ngeneral consequence relation. (We avoid the phrase “generally\nequivalent”, since it is hard not to hear this as meaning\n“equivalent, for the most part”; this terminology is\nadapted from the reference to general consequence on p. 15 of\nFusco 2015 as unrestricted consequence.) The current distinction\nbetween diagonal and unrestricted equivalence provides a useful formal\nmodeling of Dummett’s well-known distinction between sameness of\nassertive (or assertoric) content, on the one hand, and sameness of\ningredient sense on the\n other.[50]\n The idea of applying such a contrast to the case of specific pairs of\nconnectives – as with the #, #′ pairs from the start of\nthe preceding paragraph – appears, however, to be new with Fusco\n(2015), to which we turn presently. The consequence relation in play\nin the #, #′ discussion above is taken as the diagonal\nconsequence relation (with the associated relation of weak\nequivalence), according to which these connectives are\nnon-congruential, providing for mutual consequence without synonymy,\nrather than the finer-grained general consequence relation (associated\nwith unrestricted equivalence). The latter consequence relation is\ncongruential, but at the cost of not directly reflecting the felt\na priori equivalence of Aφ with φ. \nThe aspect of Fusco (2015) of present concern is the treatment of\ndisjunction, with special reference to the problems with which it is\nassociated in deontic logic – such as Ross’s Paradox, and\nthe representation of Free Choice permission. The issue is discussed\nfurther in Section 3 of Fusco (2019). (For general background,\nincluding these problems, see McNamara 2019; more detail on the\nspecifically disjunction-related issues arising is provided in Aloni\n2016.) Fusco (2015) argues, on grounds we do not go into here (since\nthey involve several parts of an elaborate theory of deontic notions),\nthat these problems of deontically embedded “or” in\nEnglish (and corresponding vocabulary in other natural languages) are\nbest treated rendering it formally by means of “ or\n”, with φ or\nψ defined as: \n(1)   (A(φ ∧ ¬ψ) → φ) ∧\n(A(¬φ ∧ ψ) → ψ) ∧\n(A(φ ↔ ψ) → (φ ∨ ψ)).\n \nThis is a suggested definition, at least for φ, ψ, constructed\nusing just Boolean connectives, from a planned sequel to Fusco (2015)\nand (2019), spelling out in the object language a semantic\ncharacterization supplied in the first of those papers. An\nunrestrictedly equivalent definition (or more accurately, definiens)\nwhich some readers may prefer is the following: \n(2)   (A(φ ∧ ¬ψ) ∧ φ) ∨\n(A(¬φ ∧ ψ) ∧ ψ) ∨\n(A(φ ↔ ψ) ∧ (φ ∨ ψ)).\n \nBy contrast, instances of the following schema, giving the treatment\nof “whether φ or ψ ” in Lewis (1982) for Boolean\nφ, ψ (though not in general, as explained in the last\nparagraph of note 51 below), would only be diagonally equivalent to the\ncorresponding instances of the above pair: \n(3)   (Aφ ∧ φ) ∨ (Aψ ∧\nψ).\n \nSo as to have concrete formulas to discuss, consider the instances of\nthese three schemata with distinct sentence letters p and\nq taken as φ and ψ, respectively, and we will now use\n(1)–(3) to refer to these concrete instances. The first pair are\nunrestrictedly equivalent and all three are diagonally equivalent,\nwith (3) having (1) and (2) as general consequences though not\n conversely.[51]\n All are diagonally equivalent to the Boolean disjunction p\n∨ q, which we may put by saying that all are\ntwo-dimensional isotopes of the one-dimensional, i.e.\nA-free, formula p ∨ q, or, more\nusefully, that their respective equivalence classes w.r.t. the\nrelation of unrestricted equivalence, stand in this\n‘isotope’ relation. Similarly, we can speak of the (in the\nabove presentation, derived) connective or\nas a two-dimensional isotope of the Boolean ∨,\nthinking of the formula (2) as a context of the variables p,\nq. (On the other hand, what is referred to in note 51  as Groenendijk–Stokhof’s “or”\nis not a two-dimensional isotope of\nBoolean disjunction, p or q,\nso understood, being diagonally\nequivalent to a Boolean tautology, rather than to\np ∨ q.) \nWhat is the point of considering such two-dimensional isotopes of\nBoolean disjunction? Fusco’s idea is the following. Arguably,\npeople have thought that the correct treatment of inclusive\n“or” in English is given by (Boolean) “∨”,\nonce they have learned to diagnose as pragmatic distraction any\napparent anomalies, because this simple connective with its\ntruth-functional semantics captures the way “or” behaves\nwhen it appears unembedded (or only ‘Booleanly’ embedded).\nThe presumption has then been that any residual anomalies arising from\nproblematic embeddings will be eventually also then be explained away\npragmatically. But what if we had on our hands a two-dimensional\nisotope of ∨ that was specially hand-crafted to deal with these\nanomalies, such as Fusco’s or? The\nunembedded behaviour of ∨ and or, in view\nof the diagonal equivalence of compounds formed using the two\ndisjunctions, would be the same, so or-disjunction\nwould have all the benefits of\nBoolean disjunction without the drawback of not faring very\nsatisfactorily when appearing in the scope of certain intensional\noperators. On this matter of agreement in logical behaviour when\nunembedded, consider, for example, the introduction and elimination\nrules in a natural deduction system. What they introduce or eliminate\nis the main connective of a formula, so they would not differ in their\nintuitive acceptability in the case of “or” whether this\nwas rendered as Boolean disjunction ∨ or as Fusco’s\ntwo-dimensional or\n connective.[52]\n More generally, the conditions defining ∨-classicality (indeed\n#-classicality for any #) of consequence relations or generalized\nconsequence relations pertain only to unembedded occurrences of ∨\n(or more generally of #). In the case of Fusco (2015), the obligation\noperator O is interpreted by universal quantification over\nsuitably accessible points with the relata of this relation being the\nworlds of local evaluation rather than the world taken as the actual\nworld, which remains the same, so while p or q\nis a diagonal (though not a\ngeneral) consequence of p, O(p or q)\nis not a diagonal consequence of\n Op.[53]\n Putting it very informally, this is because from the perspective of\nsome world of evaluation, w, with w itself\nconsidered as actual (since we are working the diagonal case), every\nworld deontically accessible to w, qua world of evaluation,\nmay be a p-world, whereas at w if what is true is\nq but not p, then what is required for the truth at\nw of O(p or q)\nis that all the accessible\nworlds be q-worlds, since in moving out to the\nw-accessible worlds we are not changing the status of\nw as the world playing the actual world role. (We are in the\n‘middle disjunct’ case of (2) with this example.) This\nillustrates how Fusco has arranged matters so that\np or q and\np ∨ q end up exhibiting the same\nbehaviour when unembedded but differing behaviour when embedded\n– in the present instance, in the scope of the obligation\noperator. The story with the permissibility operator, written as may\nor M in Fusco (2015), and not there\ntreated as dual to O, is more complicated, so the interested\nreader is referred to that discussion for the details as well as the\nmotivation behind the choice of or in this\nsetting. For present purposes, the main point to stress is the general\nstrategy of using the two-dimensional semantics to model differences\nin ingredient sense compatible with a given assertoric content. \nOne may wonder how much room for manoeuvre is made available by this\ngeneral strategy, which, since are concentrating on connectives here,\namounts to asking how many two-dimensional isotopes a given Boolean\nconnective has. A simpler case than that of the binary connectives\nwith which we have been preoccupied is that of the one-place\nconnectives. A ‘unarized’ version of the whether\nfeaturing in (3) above arises by choosing the case in which ψ is\n¬φ. This can be written more simply as\nAφ ↔ φ, used (in effect) as the\ndefinition of what was written as Oφ on p. 119 of\nHumberstone (2002). (There is no intention, in using\n“O” here, to evoke any deontic associations.) If\nwe took O as primitive, we could instead define A by\ntaking Aφ to abbreviate\nOφ ↔ φ if we wanted. Either way, if an\nepistemic operator K is treated in the same way semantically\nas the deontic obligation operator above (though with its own\naccessibility relation, of course, or even just using neighbourhood\nsemantics here, as in Lewis 1982, p. 202), then for purely\nBoolean φ, KOφ, alias\nK(Aφ ↔ φ) ends up\nunrestrictedly equivalent to\n(Aφ ∧ Kφ) ∨ (A¬φ ∧ K¬φ)\nand thus not a bad approximation to something saying that our\ncognitive subject knows whether (or not)\n φ.[54] \nOur main concern here, though, is with formulas constructed just using\nA and the Boolean connectives, and in particular, since we\nare considering the 1-place case, with such formulas as can be\nconstructed with the aid of these devices and a single sentence\nletter, p, say. To see how many two-dimensional isotopes a\ngiven 1-ary Boolean connective (equivalently, Boolean formula in just\none variable) might have, since there are only four such connectives\n(or formulas), to within equivalence – and for these formulas\nthere is of course no contrast between diagonal and unrestricted\nequivalence – we should ask how many equivalence classes w.r.t.\nthe relation of unrestricted equivalence there are of the one-variable\n‘two-dimensional formulas’ (i.e., here, just\nBoolean-with-A formulas). This question is easy to answer if\nwe bear the following things in mind: first, that every formula is\nunrestrictedly equivalent to one in which A occurs, if at\nall, then just immediately before a sentence letter, and secondly,\nthat w.r.t. the general consequence relation, the formulas p\nand Ap are completely independent (by contrast with the\ndiagonal consequence relation, w.r.t. which they are equivalent). Thus\nthe (unrestricted) equivalence-classes of one-variable formulas\ncollectively manifest the same Boolean algebraic structure as do the\nequivalence classes of purely Boolean two-variable formulas. So you\ncan take your favourite Hasse diagram of this 16-element Boolean\nalgebra[55]\n and, leaving all occurrences\nof p intact, replace every occurrence of q with\nAp, and you now have a picture of all the two-dimensional\none-variable formulas (to within unrestricted equivalence) and the\nlogical relations among them. Each of these 16 equivalence classes (or\nany of the formulas in such a class) is a two-dimensional isotope of\nthe Boolean equivalence class (or any of its elements) we get by\nerasing all occurrences of A in the formulas it contains.\nThus the two-dimensional formulas p, Ap, and\nOp most recently encountered, including the first as a\ndegenerate case of a two-dimensional formula for a streamlined\naccount, are two-dimensional isotopes of p, p, and\np ↔ p (or &top;), respectively. You\nwill find that each element of the 4-element Boolean algebra has four\ndistinct elements of the 16-element algebra mapped to it by this\nerasure-of-A mapping. (This would usually be put by speaking\nof the principal congruence generated by identifying\np’s equivalence class with Ap’s –\nalias q’s – equivalence class: the smallest\ncongruence relation w.r.t. which these two elements of the algebra are\ncongruent.) For example, p (or its equivalence class) has, to\nwithin unrestricted equivalence, the four two-dimensional isotopes\np ∧ Ap, the logically strongest\nisotope w.r.t. general consequence (lowest in the 16-element algebra)\nand p ∨ Ap, the weakest isotope\n(highest in the 16-element algebra), and between these two (and\nmutually incomparable), p and Ap.  \nReturning to the case of binary connectives or two-variable\ntwo-dimensional formulas, we could reason similarly. (The interested\nreader is left to work the general n-variable case.)\n216 = 65,536 is the number of equivalence classes of\n4-variable formulas, the exponent 16 here being chosen as\n24, the number of equivalence classes of 2-variable\nformulas. So if the variables are p, q, r,\ns, when we collapse the former Boolean algebra into the\nlatter by identifying r with p (thinking of\nr as Ap) and s with q (thinking of\ns as Aq) we are moving from 65,536 elements to 16,\nand a similarly equitable distribution renders each element of the\n16-element algebra as the image of 65,536/16 elements of the larger\nalgebra, which equals 4096 (= 212 = 216/\n24). There is a simpler route to this conclusion, and that\nis by consideration of such Stalnaker-inspired matrices as feature in\nFusco’s discussion (see note 51). This is a 4-by-4 matrix since\nwe have to take into account the local (‘world of\nevaluation’) truth-value and the actual truth-value of the first\ncomponent (four possible combinations) of a binary compound and\nsimilarly for the second component, and reading down the diagonal\ngives the truth-table for the Boolean connective of which the original\nis a two-dimensional isotope. Thus in Fusco’s case, this\ndescending diagonal reads “T, T, T, F”, just like the\ndescending vertical column of a familiar truth-table as conventionally\ndisplayed. The latter feature is retained however we label with Ts and\nFs (or 1s and 0s if preferred) the non-diagonal cells, of which there\nare 12 (16 minus the four on the diagonal). Since each of these cells\ncan be filled with either a T or an F, so we are back calculating\n212 and getting the answer 4096, whichever binary\ntruth-function our original diagonal had displayed, including of\ncourse that associated with ∨. Thus, if you like Fusco’s\ngeneral strategy for responding to difficulties like those faced by\nwhat seemed to be Boolean disjunction behaving badly when deontically\nembedded, there is plenty of room to tweak the details of her proposed\nsolution.   \nUnless otherwise stated, page and (sub)section references in this\ninitial paragraph all pertain to Humberstone (2011), where several of\nthe topics touched on this entry are treated at greater length. For\nexample, the treatment of unique characterization in Section\n 3 of the present entry is largely based on\n§4.3 there. (Some issues touched on here are, however, not\ntreated there at all or are addressed in greater detail here.) In\nconnection with note 6 in the present entry,\nconcerning Carnap's observation that the most familiar logical\nframeworks do not force a Boolean interpretation on the connectives\ntreated by the rules they make available, references to some of the\nmany discussions of this theme can be found under ‘Strong\nvs. Weak Claim’ on p. 101. Apropos of\nnote 10 (on sentence-position extensionality) in\nthe present entry, referring the reader to this opening paragraph, see\n§3.2 and subsections 4.37–8. For the end of\nnote 11 (the commutativity/symmetry distinction\netc.), what is relevant is subsection 3.34, “Operations\nvs. Relations” (though for more on specifically the relational\nside of that contrast, see Humberstone 2013, especially §4). In\nconnection with note 17 (on\n‘non-homophonic’ semantic treatments of disjunction), see\nsubsections 6.43–6.46 for a survey of some of these treatments,\nand for note 21 (on separately conservative but\njointly non-conservative extension by new connectives with\nprescribed inferential properties), see p. 568f. \nFor note 32 (on\nsome of Rautenberg's work on what we are calling hybrids of connectives), see alternatively subsection 3.24. For\nnote 41 (appended to a discussion of contrariety\nand subcontrariety), a more detailed discussion can be found in\nsubsection 8.11 and references given there (especially in Remark\n8.11.1). Expanding on note 45: §5.2 goes\ninto more detail on logical subtraction\n(Example 4.4 above); interesting work by\nStephen Yablo on this topic, mentioned there as then unpublished,\nsubsequently appeared in Yablo (2014), Chapters 8 and 9 being of\nparticular relevance. Apropos of note 55: for an example of a Hasse diagram of the 16-element Boolean algebra, nodes labelled with representatives of the classical equivalence classes of two-variable formulas, see Figure\n2.13a on p. 225. The bearing on logical theory of the topic of the following paragraph of the present section, Galois connections, is stressed in material on pp. 58f., 75 and 80 in §1.1; the list of\n‘Galois connection’ oriented discussions of logical\nmatters given in the bottom paragraph of p. 101 should be\nsupplemented by a reference to Bimbó and Dunn (2008). Finally,\nto supplement the Urquhart reference given at the end of the present section\non head linkage as a special relation in intuitionistic logic, see\nsubsection 9.25. The remainder of the present section gives further\nadditional notes and sources on the present entry working through in\norder. \nThe Galois connections described in the opening section are what are\nsometimes called contravariant (as opposed to covariant) Galois\nconnections; they were introduced in somewhat different terminology by\nGarrett Birkhoff (1967). Closure operations as defined in the opening\nsection are sometimes called closure operators. Note that the\ndefinition given, although standard, is much less restrictive than the\nnotion of a specifically topological closure operation (in\nparticular, not requiring C(X\n∪ Y) = C(X)\n∪ C(Y)\nor C(∅) = ∅,). Some\nauthors discuss matters of logical theory placing a particular\nemphasis on closure operations and their systems of closed sets (sets\nX with C(X) =\nX); see Pollard and Martin (1996) and references there\ncited. \nThe phrase “logical frameworks” has been used in ways\nother than that introduced in Section\n 2,\n e.g., in Huet and Plotkin (1991). The use of “≻”\nhere as a sequent separator is occasioned by current HTML font\nlimitations; its general use for that purpose is not recommended.\nCarnap’s observation about logic pursued in \nSet-Fmla\nnot being capable\nof enforcing the intended truth-functional interpretation of various\nconnectives (such as ∨, ¬, and →) has received extensive\nattention in the literature, as was mentioned in the first paragraph of this section. The term “congruential”\nused here is taken from Segerberg (1982); it is based on a related use\nof the term by D. Makinson (for modal logics in Fmla\ncontaining ☐ φ ↔ ☐ ψ\nwhenever they contain φ ↔ ψ). In some quarters the term\n“self-extensional” is used for congruentiality, while in\nothers the term “extensional”—used quite differently\nhere—is used for this property. \nThe emphasis on (bivalent) valuations throughout our discussion may\nsuggest some limitation of scope: are we not excluding\n‘many-valued logic’ (or better: matrix semantics)? And\nwhat about Kripke style semantics in which truth is doubly relativized\nnot only to a model but to a point therein? No, there is no\nlimitation. Every (generalized) consequence relation is determined by\na class of valuations. The matrix assignments of values to formulas\nare homomorphisms from the algebra L of formulas to the algebra\nA—presumed to be of the same similarity type of\nL—of a matrix (A, D), where D\n⊆ A; D is called the set of designated elements\nof the matrix. Thus the compositional semantics is done in terms of\nsuch homomorphisms, any one of which, h, say, gives rise to a\nbivalent valuation vh defined by setting\nvh(φ) = T iff h(φ)\n∈ D, and a Set-Fmla\nor Set-Set\nsequent is valid in the matrix just in case it\nholds—in the usual bivalent sense—on the valuation\nvh for every such homomorphism\nh, the (generalized) consequence relation determined by the\nmatrix is the (generalized) consequence relation determined by the\nclass of all such vh,\n etc.[56]\n Similarly for classes of matrices, with the quantification now over\nall vh where h is a homomorphism\nfrom the language to any matrix in the class. Likewise, in the\nKripke-semantical case, any model M and\npoint x therein gives rise to the valuation\nvMx\ndefined by\nvMx(φ)\n= T iff\nM⊨x\nφ,\nand the (generalized) consequence relation determined by a class of\nmodels is that determined by all such vMx\nwith M\nin the class. (This is the so-called\nlocal (generalized) consequence relation; for the global\nvariant, use valuations vM\nwith vM(φ)\n= T iff for all points\nx in the model, M⊨x\nφ.) There is\nan obvious further adaptation of these definitions if one wants a\nformulation in terms of determination by (“soundness and\ncompleteness with respect to”) a class of frames rather than\nmodels. \nAs well as Prior (1957) cited in Section\n 2\n on the Ł-modal system, the following references are useful:\nSmiley (1961), Smiley (1962), Porte (1979), Font and Hájek\n(2002). The original paper is Łukasiewicz (1953). \nThe problem with a live-and-let-live attitude toward differences\nbetween logics differing over the logical powers of a connective when\nthe weaker set of powers already suffice for unique characterization\n(¬ivs. ¬c in Section\n 3)\n was already pointed out in Popper (1948), and often re-surfaces in\nsubsequent literature e.g., Harris (1982), Hand (1993), Fariñas del Cerro and Herzig (1996); see also the opening paragraph of the present section. Uniquely\ncharacterized connectives are sometimes spoken of as implicitly\ndefined, but there are definite risks involved in the latter\nusage—see Došen and Schroeder-Heister (1985). The\n“implicit” in the title of Caicedo (2004) does not carry\nquite the same risks, and refers to a special case of unique\ncharacterization, essentially amounting to unique characterization by\nzero-premiss rules in Fmla—i.e., by\naxioms. Similarly, the “functionally dependent”\nconnectives of Smiley (1962) are those uniquely characterized by\nzero-premiss rules, taken in concert with the standard structural\nrules, in Set-Fmla—though\nSmiley’s definition is put\nin terms of consequence relations. This class of connectives may well\ncoincide with the class of projection-conjunction connectives. It does\nnot include disjunction or implication, as treated in intuitionistic\nor classical logic, which are uniquely characterized by rules\nessentially containing a non-zero-premiss rule—though these\nwould be uniquely characterized by zero-premiss rules (together with\nthe structural rules) in Set-Set.\nMakinson (2014) also addresses questions of\nexistence and uniqueness in connection with connectives, but his\nexistence questions concern, not the existence of a connective\nsatisfying certain rules (or more generally, certain conditions), but\nthe existence of rules (or this or that kind) satisfied by a given\nconnective, where connectives are individuated semantically (more\nspecifically, by association with bivalent truth-functions). The\nvarious notions of uniqueness considered by Makinson do apply to\nconnectives rather than rules, and are defined in terms of the rules\nsatisfied but the connectives themselves are again individuated\ntruth-functionally and so none ends up amouting to unique\ncharacterization as understood here. See note 1, p. 365, in\nMakinson (2014) for a discussion contrasting his concerns with those\nfound “in some proof-theoretic studies”, and citing\nDošen and Schroeder-Heister (1988). (In fact in the footnote,\nthough not in the bibliography, the date is given as 1998.)  \nId-inductivity is called ‘regularity’ in Kaminski (1988);\nfor Id-inductivity and Cut-inductivity and related concepts (under\ndifferent names), see also Ciabattoni (2004) and Ciabattoni and Terui\n(2006). \nA study of Popper’s generally under-appreciated work in logic is\nprovided in Schroeder-Heister (1984). The faulty view that differences\nover logic amount to talking at cross purposes was defended in\nwritings by W. V. Quine to which references may be found in Morton\n(1973), where this view is subjected to a somewhat milder version of\nthe criticism in Section\n 3.\n A full discussion of substructural logics, also mentioned in Section\n 3,\n and related topics is provided in Restall (2000). \nAside from the papers by Prior, Belnap, Stevenson and Peacocke (and\nRead 1988) mentioned in Section\n 3,\n the Tonk example is discussed in (at least)\nthe following places: Wagner (1981), Hart (1982), §4.12 in\nTennant (1978). Interest continues unabated, as witnessed by the\nfollowing publications from the period 2004–2006 alone: Hodes\n(2004), Cook (2005), Tennant (2005), Bonnay and Simmenauer (2005),\nChapter 5 of Priest (2006) and Wansing (2006). Subsequent treatments\nof interest include Avron (2010) and Rahmann (2012). Although Tonk\nis Prior’s best known example of\nnon-conservative extension, he also noted the non-conservative effect\nof familiar logical principles concerning conjunction when added to a\npurely implicational intermediate logic; references, details, and\nfurther discussion can be found in Humberstone (2014). For the notion\n– or perhaps better, notions – of harmony between\nrules (especially in natural deduction), see the Tonk\nreferences just given, and also Chapter 23 of\nTennant (1987), Weir (1986), Dummett (1991) (passim), Milne\n(1994) and (2002), and Read (2000), as well as the following more\nrecent investigations: Read (2010), Steinberger (2011), Francez and\nDyckhoff (2012), Hjortland (2012), Francez (2014), Milne (2015), Read\n(2015), Schroeder-Heister (2015) and Dicher (2016). For general background in\nproof-theoretic semantics informing these discussions, two useful\nreferences are Schroeder-Heister (2014) and the editor’s\ncontribution (Chapter 1) to Wansing (2015). The subject of harmony is\nalso briefly touched on in Makinson (2014), esp. p. 369. \nMaterial of interest on the subjects of special and universally\nrepresentative connectives can be found in Jankov (1969), Pahi (1971),\nde Jongh and Chagrova (1995), in addition to the references cited in\nSection\n 3.\n For the fact that the relation of head linkage is special in\nintuitionistic logic, see Urquhart (1974) — not that this terminology appears there.","contact.mail":"lloyd.humberstone@arts.monash.edu.au","contact.domain":"arts.monash.edu.au"}]
