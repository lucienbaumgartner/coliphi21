[{"bibliography":"Abramsky, Samson & Guy McCusker, 1995, “Games and Full\nAbstraction for the Lazy \\(\\lambda\\)-Calculus”, in D. Kozen\n(ed.), Tenth Annual IEEEE Symposium on Logic in Computer\nScience, IEEE Computer Society Press, pp. 234–43.\ndoi:10.1109/LICS.1995.523259"},{"bibliography":"Abramsky, Samson, Pasquale Malacaria, & Radha Jagadeesan,\n1994, “Full Abstraction for PCF”, in M. Hagiya & J.C.\nMitchell (eds.), Theoretical Aspects of Computer Software:\nInternational Symposium TACS ‘94, Sendai, Japan, April\n19–22, 1994, Springer-Verlag, pp. 1–15."},{"bibliography":"Abrial, Jean-Raymond, 1996, The B-Book: Assigning Programs to\nMeanings, Cambridge: Cambridge University Press."},{"bibliography":"Alama, Jesse, 2015, “The Lambda Calculus”, The\nStanford Encyclopedia of Philosophy (Spring 2015 Edition), Edward\nN. Zalta (ed.), URL =\n <https://plato.stanford.edu/archives/spr2015/entries/lambda-calculus/>."},{"bibliography":"Allen, Robert J., 1997, A Formal Approach to Software\nArchitecture, Ph.D. Thesis, Computer Science, Carnegie Mellon\nUniversity. Issued as CMU Technical Report CMU-CS-97-144.\n Allen 1997 available on line"},{"bibliography":"Ammann, Paul & Jeff Offutt, 2008, Introduction to Software\nTesting, Cambridge: Cambridge University Press."},{"bibliography":"Angius, Nicola, 2013a, “Abstraction and Idealization in the\nFormal Verification of Software”, Minds and Machines,\n23(2): 211–226. doi:10.1007/s11023-012-9289-8"},{"bibliography":"–––, 2013b, “Model-Based Abductive\nReasoning in Automated Software Testing”, Logic Journal of\nIGPL, 21(6): 931–942. doi:10.1093/jigpal/jzt006"},{"bibliography":"–––, 2014, “The Problem of Justification\nof Empirical Hypotheses in Software Testing”, Philosophy\n& Technology, 27(3): 423–439.\ndoi:10.1007/s13347-014-0159-6"},{"bibliography":"Angius, N., & Primiero, G., 2018, “The logic of identity\nand copy for computational artefacts”, Journal of Logic and\nComputation, 28(6): 1293–1322."},{"bibliography":"Angius, Nicola & Guglielmo Tamburrini, 2011, “Scientific\nTheories of Computational Systems in Model Checking”, Minds\nand Machines, 21(2): 323–336.\ndoi:10.1007/s11023-011-9231-5"},{"bibliography":"–––, 2017, “Explaining engineered\ncomputing systems’ behaviour: the role of abstraction and\nidealization”, Philosophy & Technology, 30(2):\n239–258."},{"bibliography":"Anscombe, G. E. M., 1963, Intention, second edition,\nOxford: Blackwell."},{"bibliography":"Arkoudas, Konstantine & Selmer Bringsjord, 2007,\n“Computers, Justification, and Mathematical Knowledge”,\nMinds and Machines, 17(2): 185–202.\ndoi:10.1007/s11023-007-9063-5"},{"bibliography":"Arif, R. Mori, E., and Primiero, G, 2018, “Validity and\nCorrectness before the OS: the case of LEOI and LEOII”, in\nLiesbeth de Mol, Giuseppe Primiero (eds.), Reflections on\nProgrammings Systems - Historical and Philosophical Aspects,\nPhilosophical Studies Series, Cham: Springer, pp. 15–47."},{"bibliography":"Ashenhurst, Robert L. (ed.), 1989, “Letters in the ACM\nForum”, Communications of the ACM, 32(3): 287.\ndoi:10.1145/62065.315925"},{"bibliography":"Baier, A., 1970, “Act and Intent”, Journal of\nPhilosophy, 67: 648–658."},{"bibliography":"Baier, Christel & Joost-Pieter Katoen, 2008, Principles of\nModel Checking, Cambridge, MA: The MIT Press."},{"bibliography":"Bass, Len, Paul C. Clements, & Rick Kazman, 2003 [1997],\nSoftware Architecture in Practice, second edition, Reading,\nMA: Addison-Wesley; first edition 1997; third edition, 2012."},{"bibliography":"Bechtel, William & Adele Abrahamsen, 2005, “Explanation:\nA Mechanist Alternative”, Studies in History and Philosophy\nof Science Part C: Studies in History and Philosophy of Biological and\nBiomedical Sciences, 36(2): 421–441.\ndoi:10.1016/j.shpsc.2005.03.010"},{"bibliography":"Boghossian, Paul A., 1989, “The Rule-following\nConsiderations”, Mind, 98(392): 507–549.\ndoi:10.1093/mind/XCVIII.392.507"},{"bibliography":"Bourbaki, Nicolas, 1968, Theory of Sets, Ettore Majorana\nInternational Science Series, Paris: Hermann."},{"bibliography":"Bratman, M. E., 1987, Intention, Plans, and Practical\nReason, Cambridge, MA: Harvard University Press."},{"bibliography":"Bridges, Douglas & Palmgren Erik, 2013, “Constructive\nMathematics”, The Stanford Encyclopedia of Philosophy\n(Winter 2013 Edition), Edward N. Zalta (ed.), URL =\n <https://plato.stanford.edu/archives/win2013/entries/mathematics-constructive/>."},{"bibliography":"Brooks, Frederick P. Jr., 1995, The Mythical Man Month: Essays\non Software Engineering, Anniversary Edition, Reading, MA:\nAddison-Wesley."},{"bibliography":"–––, 1996, “The Computer Scientist as\nToolsmith II”, Communications of the ACM, 39(3):\n61–68. doi:10.1145/227234.227243"},{"bibliography":"Burge, Tyler, 1998, “Computer Proof, Apriori Knowledge, and\nOther Minds”, Noûs, 32(S12): 1–37.\ndoi:10.1111/0029-4624.32.s12.1"},{"bibliography":"Bynum, Terrell Ward, 2008, “Milestones in the History of\nInformation and Computer Ethics”, in Himma and Tavani 2008:\n25–48. doi:10.1002/9780470281819.ch2"},{"bibliography":"Callahan, John, Francis Schneider, & Steve Easterbrook, 1996,\n“Automated Software Testing Using Model-Checking”, in\nProceeding Spin Workshop, J.C. Gregoire, G.J. Holzmann and D.\nPeled (eds.), New Brunswick, NJ: Rutgers University, pp.\n118–127."},{"bibliography":"Cardelli, Luca & Peter Wegner, 1985, “On Understanding\nTypes, Data Abstraction, and Polymorphism”, 17(4):\n471–522.\n [Cardelli and Wegner 1985 available online]"},{"bibliography":"Carnap, R., 1966, Philosophical foundations of physics\n(Vol. 966), New York: Basic Books."},{"bibliography":"Carrara, M., Gaio, S., and Soavi, M., 2014, “Artifact kinds,\nidentity criteria, and logical adequacy”, in M. Franssen, P.\nKroes, T. Reydon and P. E. Vermaas (eds.), Artefact Kinds:\nOntology and The Human-made World, New York: Springer, pp.\n85–101."},{"bibliography":"Chalmers, A. F., 1999, What is this thing called\nScience?, Maidenhead: Open University Press"},{"bibliography":"Chalmers, David J., 1996, “Does a Rock Implement Every\nFinite-State Automaton?” Synthese, 108(3):\n309–33.\n [D.J. Chalmers 1996 available online]\n doi:10.1007/BF00413692"},{"bibliography":"Clarke, Edmund M. Jr., Orna Grumberg, & Doron A. Peled, 1999,\nModel Checking, Cambridge, MA: The MIT Press."},{"bibliography":"Colburn, Timothy R., 1999, “Software, Abstraction, and\nOntology”, The Monist, 82(1): 3–19.\ndoi:10.5840/monist19998215"},{"bibliography":"–––, 2000, Philosophy and Computer\nScience, Armonk, NY: M.E. Sharp."},{"bibliography":"Colburn, T. R., Fetzer, J. H. , and Rankin T. L., 1993,\nProgram Verification: Fundamental Issues in Computer Science,\nDordrecht: Kluwer Academic Publishers."},{"bibliography":"Colburn, Timothy & Gary Shute, 2007, “Abstraction in\nComputer Science”, Minds and Machines, 17(2):\n169–184. doi:10.1007/s11023-007-9061-7"},{"bibliography":"Copeland, B. Jack, 1993, Artificial Intelligence: A\nPhilosophical Introduction, San Francisco: John Wiley &\nSons."},{"bibliography":"–––, 1996, “What is Computation?”\nSynthese, 108(3): 335–359. doi:10.1007/BF00413693"},{"bibliography":"–––, 2015, “The Church-Turing\nThesis”, The Stanford Encyclopedia of Philosophy\n(Summer 2015 Edition), Edward N. Zalta (ed.), URL =\n <https://plato.stanford.edu/archives/sum2015/entries/church-turing/>."},{"bibliography":"Copeland, B. Jack & Oron Shagrir, 2007, “Physical\nComputation: How General are Gandy’s Principles for\nMechanisms?” Minds and Machines, 17(2): 217–231.\ndoi:10.1007/s11023-007-9058-2"},{"bibliography":"–––, 2011, “Do Accelerating Turing\nMachines Compute the Uncomputable?” Minds and Machines,\n21(2): 221–239. doi:10.1007/s11023-011-9238-y"},{"bibliography":"Cummins, Robert, 1975, “Functional Analysis”, The\nJournal of Philosophy, 72(20): 741–765.\ndoi:10.2307/2024640"},{"bibliography":"Davidson, D., 1963, “Actions, Reasons, and Causes,”\nreprinted in Essays on Actions and Events, Oxford: Oxford\nUniversity Press, 1980, pp. 3–20."},{"bibliography":"–––, 1978, “Intending”, reprinted in\nEssays on Actions and Events, Oxford: Oxford University\nPress, 1980, pp. 83–102."},{"bibliography":"De Millo, Richard A., Richard J. Lipton, & Alan J. Perlis,\n1979, “Social Processes and Proofs of Theorems and\nPrograms”, Communications of the ACM, 22(5):\n271–281. doi:10.1145/359104.359106"},{"bibliography":"Denning, Peter J., 2005, “Is Computer Science\nScience?”, Communications of the ACM, 48(4):\n27–31. doi:10.1145/1053291.1053309"},{"bibliography":"–––, 2007, “Computing is a Natural\nScience”, Communications of the ACM, 50(7):\n13–18. doi:10.1145/1272516.1272529"},{"bibliography":"Denning, Peter J., Edward A. Feigenbaum, Paul Gilmore, Anthony C.\nHearn, Robert W. Ritchie, & Joseph F. Traub, 1981, “A\nDiscipline in Crisis”, Communications of the ACM,\n24(6): 370–374. doi:10.1145/358669.358682"},{"bibliography":"Devlin, Keith, 1994, Mathematics: The Science of Patterns: The\nSearch for Order in Life, Mind, and the Universe, New York: Henry\nHolt."},{"bibliography":"Dijkstra, Edsger W., 1970, Notes on Structured\nProgramming, T.H.-Report 70-WSK-03, Mathematics Technological\nUniversity Eindhoven, The Netherlands.\n [Dijkstra 1970 available online]"},{"bibliography":"–––, 1974, “Programming as a Discipline of\nMathematical Nature”, American Mathematical Monthly,\n81(6): 608–612.\n [Dijkstra 1974 available online"},{"bibliography":"Distributed Software Engineering, 1997, The Darwin\nLanguage, Department of Computing, Imperial College of Science,\nTechnology and Medicine, London.\n [Darwin language 1997 available online]"},{"bibliography":"Duhem, P., 1954, The Aim and Structure of Physical\nTheory, Princeton: Princeton University Press."},{"bibliography":"Duijf, H., Broersen, J., and Meyer, J. J. C., 2019,\n“Conflicting intentions: rectifying the consistency\nrequirements”, Philosophical Studies, 176(4):\n1097–1118."},{"bibliography":"Dummett, Michael A.E., 2006, Thought and Reality, Oxford:\nOxford University Press."},{"bibliography":"Duncan, William, 2011, “Using Ontological Dependence to\nDistinguish between Hardware and Software”, Proceedings of\nthe Society for the Study of Artificial Intelligence and Simulation of\nBehavior Conference: Computing and Philosophy, University of\nYork, York, UK.\n [Duncan 2011 available online (zip file)]"},{"bibliography":"–––, 2017, “Ontological Distinctions\nbetween Hardware and Software”, Applied Ontology,\n12(1): 5–32."},{"bibliography":"Eden, Amnon H., 2007, “Three Paradigms of Computer\nScience”, Minds and Machines, 17(2): 135–167.\ndoi:10.1007/s11023-007-9060-8"},{"bibliography":"Egan, Frances, 1992, “Individualism, Computation, and\nPerceptual Content”, Mind, 101(403): 443–59.\ndoi:10.1093/mind/101.403.443"},{"bibliography":"Edgar, Stacey L., 2003 [1997], Morality and Machines:\nPerspectives on Computer Ethics, Sudbury, MA: Jones &\nBartlett Learning."},{"bibliography":"Ferrero, L., 2017, “Intending, Acting, and Doing,”\nPhilosophical Explorations, 20 (Supplement 2):\n13–39."},{"bibliography":"Fernández, Maribel, 2004, Programming Languages and\nOperational Semantics: An Introduction, London: King’s\nCollege Publications."},{"bibliography":"Fetzer, James H., 1988, “Program Verification: The Very\nIdea”, Communications of the ACM, 31(9):\n1048–1063. doi:10.1145/48529.48530"},{"bibliography":"–––, 1990, Artificial Intelligence: Its\nScope and Limits, Dordrecht: Springer Netherlands."},{"bibliography":"Feynman, Richard P., 1984–1986, Feynman Lectures on\nComputation, Cambridge, MA: Westview Press, 2000."},{"bibliography":"Flanagan, Mary, Daniel C. Howe, & Helen Nissenbaum, 2008,\n“Embodying Values in Technology: Theory and Practice”, in\nInformation Technology and Moral Philosophy, Jeroen van den\nHoven and John Weckert (eds.), Cambridge: Cambridge University Press,\npp. 322–353."},{"bibliography":"Floridi, Luciano, 2008, “The Method of Levels of\nAbstraction”, Minds and Machines, 18(3): 303–329.\ndoi:10.1007/s11023-008-9113-7"},{"bibliography":"Floridi, Luciano, Nir Fresco, & Giuseppe Primiero, 2015,\n“On Malfunctioning Software”, Synthese, 192(4):\n1199–1220. doi:10.1007/s11229-014-0610-3"},{"bibliography":"Floyd, Robert W., 1979, “The Paradigms of\nProgramming”, Communications of the ACM, 22(8):\n455–460. doi:10.1145/1283920.1283934"},{"bibliography":"Fowler, Martin, 2003, UML Distilled: A Brief Guide to the\nStandard Object Modeling Language, 3rd edition,\nReading, MA: Addison-Wesley."},{"bibliography":"Franssen, Maarten, Gert-Jan Lokhorst, & Ibio van de Poel,\n2013, “Philosophy of Technology”, The Stanford\nEncyclopedia of Philosophy (Winter 2013 Edition), Edward N. Zalta\n(ed.), URL =\n <https://plato.stanford.edu/archives/win2013/entries/technology/>."},{"bibliography":"Frege, Gottlob, 1914, “Letter to Jourdain”, reprinted\nin Frege 1980: 78–80."},{"bibliography":"–––, 1980, Gottlob Frege: Philosophical and\nMathematical Correspondence, G. Gabriel, H. Hermes, F. Kambartel,\nC. Thiel, and A. Veraart (eds.), Oxford: Blackwell Publishers."},{"bibliography":"Fresco, Nir & Giuseppe Primiero, 2013,\n“Miscomputation”, Philosophy & Technology,\n26(3): 253–272. doi:10.1007/s13347-013-0112-0"},{"bibliography":"Friedman, Batya & Helen Nissenbaum, 1996, “Bias in\nComputer Systems”, ACM Transactions on Information Systems\n(TOIS), 14(3): 330–347. doi:10.1145/230538.230561"},{"bibliography":"Frigg, Roman & Stephan Hartmann, 2012, “Models in\nScience”, The Stanford Encyclopedia of Philosophy (Fall\n2012 Edition), Edward N. Zalta (ed.), URL\n =<https://plato.stanford.edu/archives/fall2012/entries/models-science/>."},{"bibliography":"Gagliardi, Francesco, 2007, “Epistemological Justification\nof Test Driven Development in Agile Processes”, Agile\nProcesses in Software Engineering and Extreme Programming: Proceedings\nof the 8th International Conference, XP 2007, Como, Italy, June\n18–22, 2007, Berlin: Springer Berlin Heidelberg, pp.\n253–256. doi:10.1007/978-3-540-73101-6_48"},{"bibliography":"Gamma, Erich, Richard Helm, Ralph Johnson, & John Vlissides,\n1994, Design Patterns: Elements of Reusable Object-Oriented\nSoftware, Reading, MA: Addison-Wesley."},{"bibliography":"Glennan, Stuart S., 1996, “Mechanisms and the Nature of\nCausation”, Erkenntnis, 44(1): 49–71.\ndoi:10.1007/BF00172853"},{"bibliography":"Glüer, Kathrin & Åsa Wikforss, 2015, “The\nNormativity of Meaning and Content”, The Stanford\nEncyclopedia of Philosophy (Summer 2015 Edition), Edward N. Zalta\n(ed.), URL =\n <https://plato.stanford.edu/archives/sum2015/entries/meaning-normativity/>."},{"bibliography":"Goguen, Joseph A. & Rod M. Burstall, 1985,\n“Institutions: Abstract Model Theory for Computer\nScience”, Report CSLI-85-30, Center for the Study of\nLanguage and Information at Stanford University."},{"bibliography":"–––, 1992, “Institutions: Abstract Model\nTheory for Specification and Programming”, Journal of the\nACM (JACM), 39(1): 95–146. doi:10.1145/147508.147524"},{"bibliography":"Gordon, Michael J.C., 1979, The Denotational Description of\nProgramming Languages, New York: Springer-Verlag."},{"bibliography":"Gotterbarn, Donald, 1991, “Computer Ethics: Responsibility\nRegained”, National Forum: The Phi Beta Kappa Journal,\n71(3): 26–31."},{"bibliography":"–––, 2001, “Informatics and Professional\nResponsibility”, Science and Engineering Ethics, 7(2):\n221–230. doi:10.1007/s11948-001-0043-5"},{"bibliography":"Gotterbarn, Donald, Keith Miller, & Simon Rogerson, 1997,\n“Software Engineering Code of Ethics”, Information\nSociety, 40(11): 110–118. doi:10.1145/265684.265699"},{"bibliography":"Gotterbarn, Donald & Keith W. Miller, 2009, “The Public\nis the Priority: Making Decisions Using the Software Engineering Code\nof Ethics”, IEEE Computer, 42(6): 66–73.\ndoi:10.1109/MC.2009.204"},{"bibliography":"Gruner, Stefan, 2011, “Problems for a Philosophy of Software\nEngineering”, Minds and Machines, 21(2): 275–299.\ndoi:10.1007/s11023-011-9234-2"},{"bibliography":"Gunter, Carl A., 1992, Semantics of Programming Languages:\nStructures and Techniques, Cambridge, MA: MIT Press."},{"bibliography":"Gupta, Anil, 2014, “Definitions”, The Stanford\nEncyclopedia of Philosophy (Fall 2014 Edition), Edward N. Zalta\n(ed.), URL =\n <https://plato.stanford.edu/archives/fall2014/entries/definitions/>."},{"bibliography":"Gurevich, Y., 2000, “Sequential Abstract-State Machines\nCapture Sequential Algorithms”, ACM Transactions on\nComputational Logic (TOCL), 1(1): 77-111."},{"bibliography":"–––, 2012, “What is an algorithm?”,\nin International conference on current trends in theory and\npractice of computer science, Heidelberg, Berlin: Springer, pp.\n31–42."},{"bibliography":"Hacking, I., 2014, Why is there a Philosophy of Mathematics at\nall?, Cambridge: Cambridge University Press."},{"bibliography":"Hagar, Amit, 2007, “Quantum Algorithms: Philosophical\nLessons”, Minds and Machines, 17(2): 233–247.\ndoi:10.1007/s11023-007-9057-3"},{"bibliography":"Hale, Bob, 1987, Abstract Objects, Oxford: Basil\nBlackwell."},{"bibliography":"Hales, Thomas C., 2008, “Formal Proof”, Notices of\nthe American Mathematical Society, 55(11): 1370–1380."},{"bibliography":"Hankin, Chris, 2004, An Introduction to Lambda Calculi for\nComputer Scientists, London: King’s College\nPublications."},{"bibliography":"Harrison, John, 2008, “Formal Proof—Theory and\nPractice”, Notices of the American Mathematical\nSociety, 55(11): 1395–1406."},{"bibliography":"Hartmanis, Juris, 1981, “Nature of Computer Science and Its\nParadigms”, pp. 353–354 (in Section 1) of “Quo\nVadimus: Computer Science in a Decade”, J.F. Traub (ed.),\nCommunications of the ACM, 24(6): 351–369.\ndoi:10.1145/358669.358677"},{"bibliography":"–––, 1993, “Some Observations About the\nNature of Computer Science”, in International Conference on\nFoundations of Software Technology and Theoretical Computer\nScience, Springer Berlin Heidelberg, pp. 1–12.\ndoi:10.1007/3-540-57529-4_39"},{"bibliography":"Hayes, P. J., 1997, “What is a Computer?”, The\nMonist, 80(3): 389–404."},{"bibliography":"Hempel, C. G., 1970, “On the ‘standard\nconception’ of scientific theories”, Minnesota Studies\nin the Philosophy of Science, 4: 142–163."},{"bibliography":"Henson, Martin C., 1987, Elements of Functional\nProgramming, Oxford: Blackwell."},{"bibliography":"Hilbert, David, 1931, “The Grounding of Elementary Number\nTheory”, reprinted in P. Mancosu (ed.), 1998, From Brouwer\nto Hilbert: the Debate on the Foundations of Mathematics in the\n1920s, New York: Oxford University Press, pp. 266–273."},{"bibliography":"Hilbert, David & Wilhelm Ackermann, 1928, Grundzüge\nDer Theoretischen Logik, translated as Principles of\nMathematical Logic, Lewis M. Hammond, George G. Leckie, and F.\nSteinhardt (trans.), New York: Chelsea, 1950."},{"bibliography":"Hill, R.K., 2016, “What an algorithm is”,\nPhilosophy & Technology, 29(1): 35–59."},{"bibliography":"–––, 2018, “Elegance in Software”,\nin Liesbeth de Mol, Giuseppe Primiero (eds.), Reflections on\nProgrammings Systems - Historical and Philosophical Aspects\n(Philosophical Studies Series), Cham: Springer, pp.\n273–286."},{"bibliography":"Hoare, C.A.R., 1969, “An Axiomatic Basis for Computer\nProgramming”, Communications of the ACM, 12(10):\n576–580. doi:10.1145/363235.363259"},{"bibliography":"–––, 1973, “Notes on Data\nStructuring”, in O.J. Dahl, E.W. Dijkstra, and C.A.R. Hoare\n(eds.), Structured Programming, London: Academic Press, pp.\n83–174."},{"bibliography":"–––, 1981, “The Emperor’s Old\nClothes”, Communications of the ACM, 24(2):\n75–83. doi:10.1145/1283920.1283936"},{"bibliography":"–––, 1985, Communicating Sequential\nProcesses, Englewood Cliffs, NJ: Prentice Hall.\n [Hoare 1985 available online]"},{"bibliography":"–––, 1986, The Mathematics of Programming:\nAn Inaugural Lecture Delivered Before the University of Oxford on Oct.\n17, 1985, Oxford: Oxford University Press."},{"bibliography":"Hodges, Andrews, 2011, “Alan Turing”, The Stanford\nEncyclopedia of Philosophy (Summer 2011 Edition), Edward N. Zalta\n(ed.), URL =\n <https://plato.stanford.edu/archives/sum2011/entries/turing/>."},{"bibliography":"Hodges, Wilfrid, 2013, “Model Theory”, The\nStanford Encyclopedia of Philosophy (Fall 2013 Edition), Edward\nN. Zalta (ed.), forthcoming URL =\n <https://plato.stanford.edu/archives/fall2013/entries/model-theory/>."},{"bibliography":"Hopcroft, John E. & Jeffrey D. Ullman, 1969, Formal\nLanguages and their Relation to Automata, Reading, MA:\nAddison-Wesley."},{"bibliography":"Hughes, Justin, 1988, “The Philosophy of Intellectual\nProperty”, Georgetown Law Journal, 77: 287."},{"bibliography":"Irmak, Nurbay, 2012, “Software is an Abstract\nArtifact”, Grazer Philosophische Studien, 86(1):\n55–72."},{"bibliography":"Johnson, Christopher W., 2006, “What are Emergent Properties\nand How Do They Affect the Engineering of Complex Systems”,\nReliability Engineering and System Safety, 91(12):\n1475–1481.\n [Johnson 2006 available online]"},{"bibliography":"Johnson-Laird, P. N., 1988, The Computer and the Mind: An\nIntroduction to Cognitive Science, Cambridge, MA: Harvard\nUniversity Press."},{"bibliography":"Jones, Cliff B., 1990 [1986], Systematic Software Development\nUsing VDM, second edition, Englewood Cliffs, NJ: Prentice Hall.\n [Jones 1990 available online]"},{"bibliography":"Kimppa, Kai, 2005, “Intellectual Property Rights in\nSoftware—Justifiable from a Liberalist Position? Free Software\nFoundation’s Position in Comparison to John Locke’s\nConcept of Property”, in R.A. Spinello & H.T. Tavani (eds.),\nIntellectual Property Rights in a Networked World: Theory and\nPractice, Hershey, PA: Idea, pp. 67–82."},{"bibliography":"Kinsella, N. Stephan, 2001, “Against Intellectual\nProperty”, Journal of Libertarian Studies, 15(2):\n1–53."},{"bibliography":"Kleene, S. C., 1967, Mathematical Logic, New York:\nWiley."},{"bibliography":"Knuth, D. E., 1973, The Art of Computer Programming,\nsecond edition, Reading, MA: Addison-Wesley."},{"bibliography":"–––, 1974a, “Computer Programming as an\nArt”, Communications of the ACM, 17(12): 667–673.\ndoi:10.1145/1283920.1283929"},{"bibliography":"–––, 1974b, “Computer Science and Its\nRelation to Mathematics”, The American Mathematical\nMonthly, 81(4): 323–343."},{"bibliography":"–––, 1977, “Algorithms”,\nScientifc American, 236(4): 63–80."},{"bibliography":"Kripke, Saul, 1982, Wittgenstein on Rules and Private\nLanguage, Cambridge, MA: Harvard University Press."},{"bibliography":"Kroes, Peter, 2010, “Engineering and the Dual Nature of\nTechnical Artefacts”, Cambridge Journal of Economics,\n34(1): 51–62. doi:10.1093/cje/bep019"},{"bibliography":"–––, 2012, Technical Artefacts: Creations of\nMind and Matter: A Philosophy of Engineering Design, Dordrecht:\nSpringer."},{"bibliography":"Kroes, Peter & Anthonie Meijers, 2006, “The Dual Nature\nof Technical Artefacts”, Studies in History and Philosophy\nof Science, 37(1): 1–4.\ndoi:10.1016/j.shpsa.2005.12.001"},{"bibliography":"Kröger, Fred & Stephan Merz, 2008, Temporal Logics\nand State Systems, Berlin: Springer."},{"bibliography":"Ladd, John, 1988, “Computers and Moral Responsibility: a\nFramework for An Ethical Analysis”, in Carol C. Gould, (ed.),\nThe Information Web: Ethical & Social Implications of Computer\nNetworking, Boulder, CO: Westview Press, pp. 207–228."},{"bibliography":"Landin, P.J., 1964, “The Mechanical Evaluation of\nExpressions”, The Computer Journal, 6(4):\n308–320. doi:10.1093/comjnl/6.4.308"},{"bibliography":"Littlewood, Bev & Lorenzo Strigini, 2000, “Software\nReliability and Dependability: a Roadmap”, ICSE ’00\nProceedings of the Conference on the Future of Software\nEngineering, pp. 175–188. doi:10.1145/336512.336551"},{"bibliography":"Locke, John, 1690, The Second Treatise of Government.\n [Locke 1690 available online]"},{"bibliography":"Loewenheim, Ulrich, 1989, “Legal Protection for Computer\nPrograms in West Germany”, Berkeley Technology Law\nJournal, 4(2): 187–215.\n [Loewenheim 1989 available online]\n doi:10.15779/Z38Q67F"},{"bibliography":"Long, Roderick T., 1995, “The Libertarian Case Against\nIntellectual Property Rights”, Formulations, Autumn,\nFree Nation Foundation."},{"bibliography":"Loui, Michael C. & Keith W. Miller, 2008, “Ethics and\nProfessional Responsibility in Computing”, Wiley\nEncyclopedia of Computer Science and Engineering, Benjamin Wah\n(ed.), John Wiley & Sons.\n [Loui and Miller 2008 available online]"},{"bibliography":"Lowe, E. J., 1998, The Possibility of Metaphysics: Substance,\nIdentity, and Time, Oxford: Clarendon Press."},{"bibliography":"Luckham, David C., 1998, “Rapide: A Language and Toolset for\nCausal Event Modeling of Distributed System Architectures”, in\nY. Masunaga, T. Katayama, and M. Tsukamoto (eds.), Worldwide\nComputing and its Applications, WWCA’98, Berlin: Springer,\npp. 88–96. doi:10.1007/3-540-64216-1_42"},{"bibliography":"Machamer, Peter K., Lindley Darden, & Carl F. Craver, 2000,\n“Thinking About Mechanisms”, Philosophy of\nScience, 67(1): 1–25. doi:10.1086/392759"},{"bibliography":"Magee, Jeff, Naranker Dulay, Susan Eisenbach, & Jeff Kramer,\n1995, “Specifying Distributed Software Architectures”,\nProceedings of 5th European Software Engineering Conference (ESEC\n95), Berlin: Springer-Verlag, pp. 137–153."},{"bibliography":"Markov, A., 1954, “Theory of algorithms”, Tr. Mat.\nInst. Steklov 42, pp. 1–14. trans. by Edwin Hewitt in\nAmerican Mathematical Society Translations, Series 2, Vol. 15\n(1960)."},{"bibliography":"Martin-Löf, Per, 1982, “Constructive Mathematics and\nComputer Programming”, in Logic, Methodology and Philosophy\nof Science (Volume VI: 1979), Amsterdam: North-Holland, pp.\n153–175."},{"bibliography":"McGettrick, Andrew, 1980, The Definition of Programming\nLanguages, Cambridge: Cambridge University Press."},{"bibliography":"McLaughlin, Peter, 2001, What Functions Explain: Functional\nExplanation and Self-Reproducing Systems, Cambridge: Cambridge\nUniversity Press."},{"bibliography":"Meijers, A.W.M., 2001, “The Relational Ontology of Technical\nArtifacts”, in P.A. Kroes and A.W.M. Meijers (eds.), The\nEmpirical Turn in the Philosophy of Technology, Amsterdam:\nElsevier, pp. 81–96."},{"bibliography":"Mitchelmore, Michael & Paul White, 2004, “Abstraction in\nMathematics and Mathematics Learning”, in M.J. Høines and\nA.B. Fuglestad (eds.), Proceedings of the 28th Conference of the\nInternational Group for the Psychology of Mathematics Education\n(Volume 3), Bergen: Programm Committee, pp. 329–336.\n [Mitchelmore and White 2004 available online]"},{"bibliography":"Miller, Alexander & Crispin Wright (eds), 2002, Rule\nFollowing and Meaning, Montreal/Ithaca: McGill-Queen's\nUniversity Press."},{"bibliography":"Milne, Robert & Christopher Strachey, 1976, A Theory of\nProgramming Language Semantics, London: Chapman and Hall."},{"bibliography":"Milner, R., 1971, “An algebraic definition of simulation\nbetween programs”, Technical Report, CS-205, pp.\n481–489, Department of Computer Science, Stanford\nUniversity."},{"bibliography":"Mitchell, John C., 2003, Concepts in Programming\nLanguages, Cambridge: Cambridge University Press."},{"bibliography":"Monin, Jean François, 2003, Understanding Formal\nMethods, Michael G. Hinchey (ed.), London: Springer (this is\nMonin's translation of his own Introduction aux Méthodes\nFormelles, Hermes, 1996, first edition; 2000, second edition),\ndoi:10.1007/978-1-4471-0043-0"},{"bibliography":"Mooers, Calvin N., 1975, “Computer Software and\nCopyright”, ACM Computing Surveys, 7(1): 45–72.\ndoi:10.1145/356643.356647"},{"bibliography":"Moor, James H., 1978, “Three Myths of Computer\nScience”, The British Journal for the Philosophy of\nScience, 29(3): 213–222."},{"bibliography":"Morgan, C., 1994, Programming From Specifications,\nEnglewood Cliffs: Prentice Hall. [Morgan 1994 available online]"},{"bibliography":"Moschovakis, Y. N., 2001, “What is an algorithm?”, in\nMathematics Unlimited—2001 and Beyond, Heidelberg,\nBerlin: Springer, pp. 919–936."},{"bibliography":"Naur, P., 1985, “Programming as theory building”,\nMicroprocessing and microprogramming, 15(5):\n253–261."},{"bibliography":"Newell, A., and Simon, H. A., 1961, “Computer simulation of\nhuman thinking” Science, 134(3495):\n2011–2017."},{"bibliography":"––– 1972, Human Problem Solving,\nEnglewood Cliffs, NJ: Prentice-Hall."},{"bibliography":"–––, 1976, “Computer Science as Empirical\nInquiry: Symbols and Search”, Communications of the\nACM, 19(3): 113–126. doi:10.1145/1283920.1283930"},{"bibliography":"Newell, Allen, Alan J. Perlis, & Herbert A. Simon, 1967,\n“Computer Science”, Science, 157(3795):\n1373–1374. doi:10.1126/science.157.3795.1373-b"},{"bibliography":"Nissenbaum,Helen, 1998, “Values in the Design of Computer\nSystems”, Computers and Society, 28(1):\n38–39."},{"bibliography":"Northover, Mandy, Derrick G. Kourie, Andrew Boake, Stefan Gruner,\n& Alan Northover, 2008, “Towards a Philosophy of Software\nDevelopment: 40 Years After the Birth of Software Engineering”,\nJournal for General Philosophy of Science, 39(1):\n85–113. doi:10.1007/s10838-008-9068-7"},{"bibliography":"Pears, David Francis, 2006, Paradox and Platitude in\nWittgenstein’s Philosophy, Oxford: Oxford University Press.\ndoi:10.1093/acprof:oso/9780199247707.001.0001"},{"bibliography":"Piccinini, Gualtiero, 2007, “Computing Mechanisms”,\nPhilosophy of Science, 74(4): 501–526.\ndoi:10.1086/522851"},{"bibliography":"–––, 2008, “Computation without\nRepresentation”, Philosophical Studies, 137(2):\n206–241.\n [Piccinini 2008 available online]\n doi:10.1007/s11098-005-5385-4"},{"bibliography":"–––, 2008, “Computers”, Pacific\nPhilosophical Quarterly, 89: 32–73."},{"bibliography":"–––, 2015, Physical Computation: A\nMechanistic Account, Oxford: Oxford University Press.\ndoi:10.1093/acprof:oso/9780199658855.001.0001"},{"bibliography":"Piccinini, Gualtiero & Carl Craver, 2011, “Integrating\nPsychology and Neuroscience: Functional Analyses as Mechanism\nSketches”, Synthese, 183(3): 283–311.\ndoi:10.1007/s11229-011-9898-4"},{"bibliography":"Popper, Karl R., 1959, The Logic of Scientific Discovery,\nLondon: Hutchinson."},{"bibliography":"Primiero, G., 2016, “Information in the philosophy of\ncomputer science”, in Floridi L. (ed.), The Routledge\nHandbook of Philosophy of Information, London: Routledge, pp.\n90–106."},{"bibliography":"–––, 2020, On the Foundations of\nComputing. New York: Oxford University Press."},{"bibliography":"Primiero, G., D.F. Solheim & J.M. Spring, 2019 “On\nMalfunction, Mechanisms and Malware Classification”, Philos.\nTechnol. 32: 339–362.\nhttps://doi.org/10.1007/s13347-018-0334-2"},{"bibliography":"Pylyshyn, Z. W., 1984, Computation and Cognition: Towards a\nFoundation for Cognitive Science, Cambridge, MA: MIT Press."},{"bibliography":"Pym, D., J.M. Spring, & P. O’Hearn, 2019, “Why\nSeparation Logic Works”, Philosophy & Technology,\n32: 483–516."},{"bibliography":"Rapaport, William J., 1995, “Understanding Understanding:\nSyntactic Semantics and Computational Cognition”, in Tomberlin\n(ed.), Philosophical Perspectives, Vol. 9: AI, Connectionism,\nand Philosophical Psychology, Atascadero, CA: Ridgeview, pp.\n49–88.\n [Rapaport 1995 available online]\n doi:10.2307/2214212"},{"bibliography":"–––, 1999, “Implementation Is Semantic\nInterpretation”, The Monist, 82(1): 109–30.\n [Rapaport 1999 available online]"},{"bibliography":"–––, 2005, “Implementation as Semantic\nInterpretation: Further Thoughts”, Journal of\nExperimental& Theoretical Artificial Intelligence, 17(4):\n385–417.\n [Rapaport 2005 available online]"},{"bibliography":"–––, 2012, “Semiotic systems, computers,\nand the mind: how cognition could be computing”,\nInternational Journal of Signs and Semiotic Systems, 2(1):\n32–71"},{"bibliography":"–––, 2018, “What is a Computer? A\nSurvey”, Minds and Machines, 28(3): 385–426."},{"bibliography":"Reynolds, J.C., 2002, “Separation Logic: a logic for shared\nmutable data structures”, in Proceedings of the 17th Annual\nIEEE Symposium on Logic in Computer Science, IEEE, pp.\n55–74."},{"bibliography":"Rombach, Dieter & Frank Seelisch, 2008, “Formalisms in\nSoftware Engineering: Myths Versus Empirical Facts”, in\nBalancing Agility and Formalism in Software Engineering,\nSpringer Berlin Heidelberg, pp. 13–25.\ndoi:10.1007/978-3-540-85279-7_2"},{"bibliography":"Rosenberg, A., 2012, The Philosophy of Science, London:\nRoutledge."},{"bibliography":"Ryle G., 1949 [2009], The Concept of Mind, Abingdon:\nRoutledge"},{"bibliography":"Schiaffonati, Viola, 2015, “Stretching the Traditional\nNotion of Experiment in Computing: Explorative Experiments”,\nScience and Engineering Ethics, 22(3): 1–19.\ndoi:10.1007/s11948-015-9655-z"},{"bibliography":"Schiaffonati, Viola & Mario Verdicchio, 2014, “Computing\nand Experiments”, Philosophy & Technology, 27(3):\n359–376. doi:10.1007/s13347-013-0126-7"},{"bibliography":"Searle, J. R., 1990, “Is the brain a digital\ncomputer?” Proceedings and Addresses of the American\nPhilosophical Association, 64(3): 21–37."},{"bibliography":"Searle, John R., 1995, The Construction of Social\nReality, New York: Free Press."},{"bibliography":"Setiya, K., “Intention”, The Stanford Encyclopedia\nof Philosophy (Fall 2018 Edition), Edward N. Zalta (ed.), URL =\n <https://plato.stanford.edu/archives/fall2018/entries/intention/>."},{"bibliography":"Shanker, S.G., 1987, “Wittgenstein versus Turing on the\nNature of Church’s Thesis”, Notre Dame Journal of\nFormal Logic, 28(4): 615–649.\n [Shanker 1987 available online]\n doi:10.1305/ndjfl/1093637650"},{"bibliography":"Shavell, Steven & Tanguy van Ypersele, 2001, “Rewards\nVersus Intellectual Property Rights”, Journal of Law and\nEconomics, 44: 525–547"},{"bibliography":"Skemp, Richard R., 1987, The Psychology of Learning\nMathematics, Hillsdale, NJ: Lawrence Erlbaum Associates."},{"bibliography":"Smith, Brian Cantwell, 1985, “The Limits of Correctness in\nComputers”, ACM SIGCAS Computers and Society,\n14–15(1–4): 18–26. doi:10.1145/379486.379512"},{"bibliography":"Snelting, Gregor, 1998, “Paul Feyerabend and Software\nTechnology”, Software Tools for Technology Transfer,\n2(1): 1–5. doi:10.1007/s100090050013"},{"bibliography":"Sommerville, Ian, 2016 [1982], Software Engineering,\nReading, MA: Addison-Wesley; first edition, 1982."},{"bibliography":"Sprevak, M., 2010, “Computation, individuation, and the\nreceived view on representation”, Studies in History and\nPhilosophy of Science, 41(3): 260–270."},{"bibliography":"–––, 2012, “Three Challenges to Chalmers\non Computational Implementation”, Journal of Cognitive\nScience, 13(2): 107–143."},{"bibliography":"Stoy, Joseph E., 1977, Denotational Semantics: The\nScott-Strachey Approach to Programming Language Semantics,\nCambridge, MA: MIT Press."},{"bibliography":"Strachey, Christopher, 2000, “Fundamental Concepts in\nProgramming Languages”, Higher-Order and Symbolic\nComputation, 13(1–2): 11–49.\ndoi:10.1023/A:1010000313106"},{"bibliography":"Suber, Peter, 1988, “What Is Software?” Journal of\nSpeculative Philosophy, 2(2): 89–119.\n [Suber 1988 available online]"},{"bibliography":"Summerville, I., 2012, Software Engineering, Reading, MA:\nAddison-Wesley; first edition, 1982."},{"bibliography":"Suppe, Frederick, 1989, The Semantic Conception of Theories\nand Scientific Realism, Chicago: University of Illinois\nPress."},{"bibliography":"Suppes, Patrick, 1960, “A Comparison of the Meaning and Uses\nof Models in Mathematics and the Empirical Sciences”,\nSynthese, 12(2): 287–301. doi:10.1007/BF00485107"},{"bibliography":"–––, 1969, “Models of Data”, in\nStudies in the Methodology and Foundations of Science,\nDordrecht: Springer Netherlands, pp. 24–35."},{"bibliography":"Technical Correspondence, Corporate, 1989, Communications of\nthe ACM, 32(3): 374–381. Letters from James C. Pleasant,\nLawrence Paulson/Avra Cohen/Michael Gordon, William Bevier/Michael\nSmith/William Young, Thomas Clune, Stephen Savitzky, James Fetzer.\ndoi:10.1145/62065.315927"},{"bibliography":"Tedre, Matti, 2011, “Computing as a Science: A Survey of\nCompeting Viewpoints”, Minds and Machines, 21(3):\n361–387. doi:10.1007/s11023-011-9240-4"},{"bibliography":"–––, 2015, The Science of Computing: Shaping\na Discipline, Boca Raton: CRC Press, Taylor and Francis\nGroup."},{"bibliography":"Tedre, Matti & Ekki Sutinen, 2008, “Three Traditions of\nComputing: What Educators Should Know”, Computer Science\nEducation, 18(3): 153–170.\ndoi:10.1080/08993400802332332"},{"bibliography":"Thagard, P., 1984, “Computer programs as psychological\ntheories”, Mind, Language and Society, Vienna:\nConceptus-Studien, pp. 77–84."},{"bibliography":"Thomasson, Amie, 2007, “Artifacts and Human Concepts”,\nin Eric Margolis and Stephen Laurence (eds.), Creations of the\nMind: Essays on Artifacts and Their Representations, Oxford:\nOxford University Press, pp. 52–73."},{"bibliography":"Thompson, Simon, 2011, Haskell: The Craft of Functional\nProgramming, third edition, Reading, MA: Addison-Wesley; first\nedition, 1996."},{"bibliography":"Tichy, Walter F., 1998, “Should Computer Scientists\nExperiment More?”, IEEE Computer, 31(5): 32–40.\ndoi:10.1109/2.675631"},{"bibliography":"Turing, A.M., 1936, “On Computable Numbers, with an\nApplication to the Entscheidungsproblem”, Proceedings of the\nLondon Mathematical Society (Series 2), 42: 230–65.\ndoi:10.1112/plms/s2-42.1.230"},{"bibliography":"–––, 1950, “Computing Machinery and\nIntelligence”, Mind, 59(236): 433–460.\ndoi:10.1093/mind/LIX.236.433"},{"bibliography":"Turner, Raymond, 2007, “Understanding Programming\nLanguages”, Minds and Machines, 17(2): 203–216.\ndoi:10.1007/s11023-007-9062-6"},{"bibliography":"–––, 2009a, Computable Models, Berlin:\nSpringer. doi:10.1007/978-1-84882-052-4"},{"bibliography":"–––, 2009b, “The Meaning of Programming\nLanguages”, APA Newsletters, 9(1): 2–7. (This APA\nNewsletter is available online; see the Other Internet\nResources.)"},{"bibliography":"–––, 2010, “Programming Languages as\nMathematical Theories”, in J. Vallverdú (ed.),\nThinking Machines and the Philosophy of Computer Science: Concepts\nand Principles, Hershey, PA: IGI Global, pp. 66–82."},{"bibliography":"–––, 2011, “Specification”,\nMinds and Machines, 21(2): 135–152.\ndoi:10.1007/s11023-011-9239-x"},{"bibliography":"–––, 2012, “Machines”, in H. Zenil\n(ed.), A Computable Universe: Understanding and Exploring Nature\nas Computation, London: World Scientific Publishing\nCompany/Imperial College Press, pp. 63–76."},{"bibliography":"–––, 2014, “Programming Languages as\nTechnical Artefacts”, Philosophy and Technology, 27(3):\n377–397; first published online 2013.\ndoi:10.1007/s13347–012–0098-z"},{"bibliography":"–––, 2018, Computational artifacts: Towards\na philosophy of computer science, Berlin Heidelberg:\nSpringer."},{"bibliography":"Tymoczko, Thomas, 1979, “The Four Color Problem and Its\nPhilosophical Significance”, The Journal of Philosophy,\n76(2): 57–83. doi:10.2307/2025976"},{"bibliography":"–––, 1980, “Computers, Proofs and\nMathematicians: A Philosophical Investigation of the Four-Color\nProof”, Mathematics Magazine, 53(3):\n131–138."},{"bibliography":"Van Fraassen, Bas C., 1980, The Scientific Image, Oxford:\nOxford University Press. doi:10.1093/0198244274.001.0001"},{"bibliography":"–––, 1989, Laws and Symmetry, Oxford:\nOxford University Press. doi:10.1093/0198248601.001.0001"},{"bibliography":"Van Leeuwen, Jan (ed.), 1990, Handbook of Theoretical Computer\nScience. Volume B: Formal Models and Semantics, Amsterdam:\nElsevier and Cambridge, MA: MIT Press."},{"bibliography":"Vardi, M., 2012, “What is an algorithm?”,\nCommunications of the ACM, 55(3): 5.\ndoi:10.1145/2093548.2093549"},{"bibliography":"Vermaas, Pieter E. & Wybo Houkes, 2003, “Ascribing\nFunctions to Technical Artifacts: A Challenge to Etiological Accounts\nof Function”, British Journal of the Philosophy of\nScience, 54: 261–289.\n [Vermaas and Houkes 2003 available online]"},{"bibliography":"Vliet, Hans van, 2008, Software Engineering: Principles and\nPractice, 3rd edition, Hoboken, NJ: Wiley. (First edition,\n1993)"},{"bibliography":"von Neumann, J. (1945). “First draft report on the\nEDVAC”, IEEE Annals of the History of Computing, 15(4):\n27–75."},{"bibliography":"Wang, Hao, 1974, From Mathematics to Philosophy, London:\nRoutledge, Kegan & Paul."},{"bibliography":"Wegner, Peter, 1976, “Research Paradigms in Computer\nScience”, in Proceedings of the 2nd international Conference\non Software Engineering, Los Alamitos, CA: IEEE Computer Society\nPress, pp. 322–330."},{"bibliography":"White, Graham, 2003, “The Philosophy of Computer\nLanguages”, in Luciano Floridi (ed.), The Blackwell Guide to\nthe Philosophy of Computing and Information, Malden:\nWiley-Blackwell, pp. 318–326.\ndoi:10.1111/b.9780631229193.2003.00020.x"},{"bibliography":"Wiener, Norbert, 1948, Cybernetics: Control and Communication\nin the Animal and the Machine, New York: Wiley & Sons."},{"bibliography":"–––, 1964, God and Golem, Inc.: A Comment on\nCertain Points Where Cybernetics Impinges on Religion, Cambridge,\nMA: MIT press."},{"bibliography":"Wittgenstein, Ludwig, 1953 [2001], Philosophical\nInvestigations, translated by G.E.M. Anscombe, 3rd Edition,\nOxford: Blackwell Publishing."},{"bibliography":"–––, 1956 [1978], Remarks of the Foundations\nof Mathematics, G.H. von Wright, R. Rhees, and G.E.M. Anscombe\n(eds.), translated by G.E.M. Anscombe, revised edition, Oxford: Basil\nBlackwell."},{"bibliography":"–––, 1939 [1975], Wittgenstein’s\nLectures on the Foundations of Mathematics, Cambridge 1939, C.\nDiamond (ed.), Cambridge: Cambridge University Press."},{"bibliography":"Woodcock, Jim & Jim Davies, 1996, Using Z: Specification,\nRefinement, and Proof, Englewood Cliffs, NJ: Prentice Hall."},{"bibliography":"Wright, Crispin 1983, Frege’s Conception of Numbers as\nObjects, Aberdeen: Aberdeen University Press."}]
